{"version":3,"sources":["axiosInstance.ts","reducer/login/loginReducer.ts","reducer/login/actionCreate.ts","page/login/style.ts","entity/Admin.ts","page/login/LoginPage.tsx","page/admin/student/ClassCascader.tsx","component/UploadFile.tsx","page/admin/student/InsertStudentModal.tsx","entity/HealthCodeType.ts","page/admin/student/StudentTable.tsx","page/admin/student/StudentPieChart.tsx","page/admin/student/UpdateStudentModal.tsx","page/admin/student/StudentManagetPage.tsx","page/admin/teacher/CollegeSelect.tsx","page/admin/teacher/InsertTeacherModal.tsx","page/admin/teacher/TeacherTable.tsx","page/admin/teacher/TeacherPieChart.tsx","page/admin/teacher/UpdateTeacherModal.tsx","page/admin/teacher/TeacherManagerPage.tsx","page/admin/college/AddCollegeModal.tsx","page/admin/college/CollegeManagerPage.tsx","page/admin/class/AddClassModal.tsx","page/admin/class/ClassManagerPage.tsx","page/admin/major/AddMajorModal.tsx","page/admin/major/MajorManagerPageProps.tsx","page/admin/AdminSider.tsx","page/admin/admin/AddAdminModal.tsx","page/admin/admin/AdminManagerPage.tsx","page/admin/AdminPage.tsx","component/style.ts","component/Header.tsx","component/SubmitDailyCardForm.tsx","component/QRCodeImage.tsx","page/student/StudentPage.tsx","page/teacher/TeacherPage.tsx","App.tsx","reportWebVitals.ts","store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["instance","axios","create","headers","interceptors","request","use","config","data","qs","stringify","response","error","ex","message","warn","Promise","reject","SetLoginStatus","loginReducer","state","login","action","type","setUser","user","dispatch","AdminRole","LoginForm","styled","Form","LoginPage","loginUser","useSelector","useDispatch","to","onFinish","value","a","username","password","post","bg","num","style","display","fontSize","textAlign","Item","name","rules","required","Group","width","span","prefix","UserOutlined","className","autoComplete","placeholder","LockOutlined","htmlType","block","ClassCascader","changeClass","useState","options","setOptions","useEffect","get","then","resp","map","college","id","label","isLeaf","loadData","selectedOptions","targetOption","length","loading","params","collegeId","children","major","majorId","changeOnSelect","onChange","UploadFile","onSuccess","url","Dragger","fileList","info","file","status","InboxOutlined","TabPane","Tabs","InsertStudentModal","visible","setVisible","classId","setClassId","studentId","setStudentId","setName","idCard","setIdCard","onSubmit","undefined","title","onCancel","onOk","tab","marginBottom","e","target","HealthCodeType","healthCodeName","GREEN","RED","YELLOW","StudentTable","dataSource","onDelete","clickUpdate","admin","root","columns","dataIndex","key","render","submit","filters","text","onFilter","record","hadSubmitDailyCard","student","role","SYSTEM_ADMIN","onClick","rowKey","StudentPieChart","autoFit","greenCodeStudentCount","yellowCodeStudentCount","redCodeStudentCount","angleField","colorField","height","color","marginLeft","UploadStudentModal","updateStudentId","disabled","StudentManagerPage","insertVisible","setInsertVisible","uploadVisible","setUploadVisible","needUpdateStudentId","setNeedUpdateStudentId","setData","useParams","clazz","setClazz","setMajor","setCollege","loadStudent","deleteStudent","onBack","window","history","back","ghost","subTitle","extra","hidden","totalStudentCount","onClickStudent","dailyCardList","Option","Select","CollegeSelect","collegeList","setCollegeList","InsertTeacherModal","setCollegeId","teacherId","setTeacherId","TeacherTable","TeacherPieChart","greenCodeTeacherCount","yellowCodeTeacherCount","redCodeTeacherCount","paddingLeft","UpdateTeacherModal","TeacherManagerPage","updateVisible","setUpdateVisible","updateTeacherId","setUpdateTeacherId","loadTeacher","deleteTeacher","totalTeacherCount","AddCollegeModal","CollegeManagerPage","setLoading","finally","AddMajorModal","ClassManagerPage","AddClassModal","Number","MajorManagerPage","Sider","Layout","AdminSider","useHistory","logout","push","collapsible","theme","defaultSelectedKeys","mode","SCHOOL_ADMIN","COLLEGE_ADMIN","icon","TeamOutlined","GoldOutlined","PartitionOutlined","LogoutOutlined","AddAdminModal","colleges","setColleges","setPassword","setType","hiddenCollege","setHiddenCollege","AdminManagerPage","admins","setAdmins","Content","AdminPage","minHeight","padding","path","exact","component","TopWrapper","div","LogoutWrapper","Button","NameWrapper","Text","Header","SubmitDailyCardForm","isStudent","radioStyle","lineHeight","values","haveBeenToKeyEpidemicAreas","haveBeenAbroad","isTheExposed","isSuspectedCase","currentSymptoms","marginTop","validator","_","resolve","QrcodeImage","preview","src","alt","StudentPage","isSubmitDailyCard","setSubmitDailyCard","isLoading","marginRight","active","TeacherPage","App","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","catch","ReactDOM","locale","zhCN","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"8TAIMA,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,CAAC,eAAgB,uCAG9BH,EAASI,aAAaC,QAAQC,KAC1B,SAAAC,GAGI,OADAA,EAAOC,KAAOC,IAAGC,UAAUH,EAAOC,MAC3BD,KAGfP,EAASI,aAAaO,SAASL,KAAI,SAAAC,GAAM,OAAIA,KAAQ,SAAAK,GAC7C,IAAMC,EAAiBD,EAIvB,OAHmB,MAAfC,EAAGF,UACHG,IAAQC,KAAKF,EAAGF,SAASH,KAAKM,SAE3BE,QAAQC,OAAOL,MAKfZ,Q,QCtBFkB,EAAiB,mBAiBfC,EAXM,WAA0E,IAAzEC,EAAwE,uDAArD,CAACC,OAAO,GAAqBC,EAAwB,uCAC1F,OAAQA,EAAOC,MACX,KAAKL,EAED,OADAE,EAAQE,EAAOd,KAEnB,QACI,OAAOY,ICTNI,EAAU,WAAmG,IAAlGC,EAAiG,uDAA/E,CAACJ,OAAO,GAC9C,OAAO,SAACK,GACJA,EAAS,CACLH,KAAML,EACNV,KAAMiB,M,uOCPX,ICMKE,EDNCC,EAAYC,YAAOC,IAAPD,CAAH,KE4EPE,EAnEG,WACd,IAAMC,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SACpDK,EAAWQ,cAEjB,GAAIF,EAAUX,MACV,OAAQW,EAAUT,MACd,IAAK,UACD,OAAO,cAAC,IAAD,CAAUY,GAAG,aACxB,IAAK,UACD,OAAO,cAAC,IAAD,CAAUA,GAAG,aACxB,QACI,OAAO,cAAC,IAAD,CAAUA,GAAG,WAKhC,IAAMC,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEAEHC,EAAWF,EAAME,SACjBC,EAAWH,EAAMG,SACjBjB,EAAOc,EAAMd,KAJV,SAKcvB,EAASyC,KAAgB,SAAU,CAAClB,OAAMgB,WAAUC,aALlE,OAKH7B,EALG,OAMTe,EAASF,EAAQb,EAASH,OANjB,4GAAH,sDAWd,OACI,gCACI,cAAC,IAAD,CAAae,KAAK,SAASmB,IAAI,EAAMC,IAAK,KAC1C,eAACf,EAAD,CAAWQ,SAAUA,EAArB,UACI,oBAAIQ,MAAO,CAACC,QAAS,QAASC,SAAU,GAAIC,UAAW,UAAvD,wDACA,cAAC,IAAKC,KAAN,CACIC,KAAK,OACLL,MAAO,CAACG,UAAW,UACnBG,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,+CAHtC,SAII,cAAC,IAAMsC,MAAP,CAAaR,MAAO,CAACC,QAAS,QAASQ,MAAO,QAA9C,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SAAc,cAAC,IAAD,CAAOjB,MAAO,UAAd,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,IAAD,CAAOjB,MAAO,UAAd,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,IAAD,CAAOjB,MAAO,QAAd,yCAI1B,cAAC,IAAKW,KAAN,CACIC,KAAK,WACLC,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,yCAFtC,SAGI,cAAC,IAAD,CAAOyC,OAAQ,cAACC,EAAA,EAAD,CAAcC,UAAU,wBAChCC,aAAc,WACdC,YAAa,yBAExB,cAAC,IAAKX,KAAN,CACIC,KAAK,WACLC,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAFtC,SAGI,cAAC,IAAD,CAAOyC,OAAQ,cAACK,EAAA,EAAD,CAAcH,UAAU,wBAChCE,YAAa,eACbD,aAAc,mBACdnC,KAAK,eAEhB,cAAC,IAAKyB,KAAN,UACI,cAAC,IAAD,CAAQzB,KAAK,UAAUsC,SAAS,SAASC,OAAK,EAA9C,mC,+DCqBLC,EAjFqC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAapB,EAAW,EAAXA,MAAW,EAC5CqB,mBAAoC,IADQ,mBACnEC,EADmE,KAC1DC,EAD0D,KAG1EC,qBAAU,WACNpE,EAASqE,IAAe,wBACnBC,MAAK,SAACC,GAAD,OAAUJ,EAAWI,EAAK/D,KAAKgE,KAAI,SAACC,GACtC,MAAO,CACHpC,MAAOoC,EAAQC,GACfC,MAAOF,EAAQxB,KACf2B,QAAQ,EACRrD,KAAM,oBAGnB,IAEH,IAAMsD,EAAQ,uCAAG,WAAOC,GAAP,mBAAAxC,EAAA,yDACRwC,EADQ,kDAIPC,EAAeD,EAAgBA,EAAgBE,OAAS,IACjDC,SAAU,EALV,SAQTF,EAAaL,GAAKK,EAAa1C,MARtB,KASD0C,EAAaxD,KATZ,OAUA,YAVA,OAyBA,UAzBA,yCAWsBvB,EAASqE,IAAa,6BACzC,CACIa,OAAQ,CAACC,UAAWJ,EAAa1C,SAbxC,eAWK1B,EAXL,OAeDoE,EAAaK,SAAWzE,EAASH,KAAKgE,KAAI,SAAAa,GACtC,MAAO,CACHhD,MAAOgD,EAAMX,GACbC,MAAOU,EAAMpC,KACb2B,QAAQ,EACRrD,KAAM,YApBb,8CA0BsBvB,EAASqE,IAAa,4BACzC,CACIa,OAAQ,CAACI,QAASP,EAAa1C,SA5BtC,eA0BK1B,EA1BL,OA8BDoE,EAAaK,SAAWzE,EAASH,KAAKgE,KAAI,SAAAa,GACtC,MAAO,CACHhD,MAAOgD,EAAMX,GACbC,MAAOU,EAAMpC,KACb2B,QAAQ,EACRrD,KAAM,YAnCb,6BAyCT4C,EAAW,YAAID,IAzCN,2EA6CTa,EAAaE,SAAU,EA7Cd,6EAAH,sDAyDd,OAAO,cAAC,IAAD,CACHf,QAASA,EACTW,SAAUA,EACVU,gBAAc,EACd5B,YAAa,iCACb6B,SAba,SAACnD,EAA0ByC,GACnB,IAAjBzC,EAAM2C,QAAmC,MAAnBF,EACtBd,EAAYc,EAAgB,GAAGzC,OAE/B2B,EAAY,OAUhBpB,MAAOA,K,kBC3DA6C,EArB+B,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,IACvD,OACI,eAACC,EAAA,EAAD,CACI3C,KAAK,OACL4C,SAAU,GACVvE,OAAQqE,EACRH,SAAU,SAACM,GACkB,SAArBA,EAAKC,KAAKC,SACVlF,IAAQgF,KAAK,4BACbJ,MAPZ,UAUI,mBAAGjC,UAAU,uBAAb,SACI,cAACwC,EAAA,EAAD,MAEJ,mBAAGxC,UAAU,kBAAb,2CACA,mBAAGA,UAAU,kBAAb,wECdLyC,EAAWC,IAAXD,QAoDQE,EAlDkC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAYZ,EAAe,EAAfA,UAAe,EACrDzB,qBADqD,mBAC5EsC,EAD4E,KACnEC,EADmE,OAEjDvC,mBAAiB,IAFgC,mBAE5EwC,EAF4E,KAEjEC,EAFiE,OAG3DzC,mBAAiB,IAH0C,mBAG5EhB,EAH4E,KAGtE0D,EAHsE,OAIvD1C,mBAAiB,IAJsC,mBAI5E2C,EAJ4E,KAIpEC,EAJoE,KAM7EC,EAAQ,uCAAG,sBAAAxE,EAAA,sEACPtC,EAASyC,KAAK,uBAAwB,CAACiC,GAAI+B,EAAWxD,KAAMA,EAAMsD,QAASA,EAASK,OAAQA,IADrF,OAEbJ,OAAWO,GACXL,EAAa,IACbC,EAAQ,IACRE,EAAU,IACVP,GAAW,GACXZ,IAPa,2CAAH,qDAUd,OACI,cAAC,IAAD,CACIsB,MAAM,iCACNC,SAAU,kBAAMX,GAAW,IAC3BD,QAASA,EACTa,KAAM,kBAAMJ,KAJhB,SAKI,eAAC,IAAD,WACI,eAACZ,EAAD,CAASiB,IAAI,2BAAb,UACI,cAAC,EAAD,CAAenD,YAAa,SAAA3B,GAAK,OAAImE,EAAWnE,IAAQO,MAAO,CAACwE,aAAc,GAAI/D,MAAO,UACzF,cAAC,IAAD,CAAOM,YAAa,eACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOX,EAAaW,EAAEC,OAAOjF,QACvCA,MAAOoE,IACd,cAAC,IAAD,CAAO9C,YAAa,eACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOV,EAAQU,EAAEC,OAAOjF,QAClCA,MAAOY,IACd,cAAC,IAAD,CAAOU,YAAa,2BACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOR,EAAUQ,EAAEC,OAAOjF,QACpCA,MAAOuE,MAbM,KAexB,cAACV,EAAD,CAASiB,IAAI,kCAAb,SACI,cAAC,EAAD,CAAYxB,IAAI,6BACJD,UAAW,WACPY,GAAW,GACXZ,QAJW,Y,SJ3CnC/D,K,4BAAAA,E,4BAAAA,E,+BAAAA,M,SKTA4F,E,mBAAAA,K,cAAAA,E,gBAAAA,E,WAAAA,M,KAML,IAAMC,EAAiB,SAACjG,GAC3B,OAAQA,GACJ,KAAK,KACD,MAAO,qBACX,KAAKgG,EAAeE,MAChB,MAAO,eACX,KAAKF,EAAeG,IAChB,MAAO,eACX,KAAKH,EAAeI,OAChB,MAAO,eACX,QACI,MAAO,uBC2CJC,GA7CmC,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAChEC,EAAQ/F,aAAY,SAACgG,GAAD,OAAqBA,EAAK5G,SAAOI,KAErDyG,EAA2C,CAC7C,CAAClB,MAAO,eAAMmB,UAAW,YAAaC,IAAK,aAC3C,CAACpB,MAAO,eAAMmB,UAAW,OAAQC,IAAK,QACtC,CAACpB,MAAO,eAAMmB,UAAW,cAAeC,IAAK,eAC7C,CAACpB,MAAO,eAAMmB,UAAW,YAAaC,IAAK,aAC3C,CAACpB,MAAO,eAAMmB,UAAW,YAAaC,IAAK,aAC3C,CACIpB,MAAO,uCACPmB,UAAW,qBACXC,IAAK,qBACLC,OAAQ,SAACC,GAAD,OAAqBA,EAAS,qBAAQ,sBAC9CC,QAAS,CAAC,CAACC,KAAM,qBAAOnG,OAAO,GAAO,CAACmG,KAAM,qBAAOnG,OAAO,IAC3DoG,SAAU,SAACpG,EAAkCqG,GAAnC,OAAkEA,EAAOC,qBAAuBtG,IAE9G,CACI2E,MAAO,qBACPmB,UAAW,OACXC,IAAK,OACLC,OAAQ,SAAC9G,GAAD,OAA2BiG,EAAejG,IAClDgH,QAAS,CAAC,CAACC,KAAM,eAAMnG,MAAO,gBAC1B,CAACmG,KAAM,eAAMnG,MAAO,gBACpB,CAACmG,KAAM,eAAMnG,MAAO,iBAExBoG,SAAU,SAACpG,EAAkCqG,GAAnC,OAAkElB,EAAekB,EAAOnH,QAAUc,IAC7G,CACC2E,MAAO,eACPmB,UAAW,YACXC,IAAK,YACLC,OAAQ,SAAC3D,EAAYkE,GAAb,OAA6C,mCAE7CZ,EAAMa,OAASlH,EAAUmH,cAAgB,qCACrC,cAAC,IAAD,CAAQvH,KAAK,OAAOwH,QAAS,kBAAMhB,EAAYrD,IAA/C,0BACA,cAAC,IAAD,CAAQnD,KAAK,OAAOwH,QAAS,kBAAMjB,EAASpD,IAA5C,kCAMpB,OAAO,cAAC,IAAD,CAAOO,QAAuB,MAAd4C,EAAoBK,QAASA,EAASc,OAAQ,YAAanB,WAAYA,K,oBCbnFoB,GAlCyC,SAAC,GAAY,IAAXzI,EAAU,EAAVA,KACtD,GAAY,MAARA,EACA,OAAO,6BAGX,IAMMD,EAAoB,CACtB2I,SAAS,EACT1I,KARoC,CACpC,CAACe,KAAM,eAAMc,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM2I,uBAC1B,CAAC5H,KAAM,eAAMc,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM4I,wBAC1B,CAAC7H,KAAM,eAAMc,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM6I,sBAM1BC,WAAY,QACZC,WAAY,OACZlG,MAAO,IACPmG,OAAQ,IACRC,MAAO,YACH,OADe,EAAVlI,MAED,IAAK,eACD,MAAO,QACX,IAAK,eACD,MAAO,SACX,IAAK,eACD,MAAO,MACX,QACI,MAAO,UAIvB,OAAO,cAAC,KAAD,cAAKqB,MAAO,CAAC8G,WAAY,MAAO7G,QAAS,UAActC,KCKnDoJ,GAjCkC,SAAC,GAAuD,IAAtDtD,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,WAAYZ,EAAgC,EAAhCA,UAAWkE,EAAqB,EAArBA,gBAAqB,EACtE3F,qBADsE,mBAC7FsC,EAD6F,KACpFC,EADoF,OAE5EvC,mBAAiB,IAF2D,mBAE7FhB,EAF6F,KAEvF0D,EAFuF,OAGxE1C,mBAAiB,IAHuD,mBAG7F2C,EAH6F,KAGrFC,EAHqF,KAK9FC,EAAQ,uCAAG,sBAAAxE,EAAA,sEACPtC,EAASyC,KAAK,uBAAwB,CAACiC,GAAIkF,EAAiBrD,UAAStD,OAAM2D,WADpE,OAEbN,GAAW,GACXZ,IAHa,2CAAH,qDAMd,OACI,eAAC,IAAD,CAAOW,QAASA,EACTY,SAAU,kBAAMX,GAAW,IAC3BU,MAAM,2BACNE,KAAM,kBAAMJ,KAHnB,UAII,cAAC,EAAD,CAAe9C,YAAa,SAAA3B,GAAK,OAAImE,EAAWnE,IAAQO,MAAO,CAACwE,aAAc,GAAI/D,MAAO,UACzF,cAAC,IAAD,CAAOM,YAAa,eACbkG,UAAU,EACVjH,MAAO,CAACwE,aAAc,IACtB/E,MAAOuH,IACd,cAAC,IAAD,CAAOjG,YAAa,eACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOV,EAAQU,EAAEC,OAAOjF,QAClCA,MAAOY,IACd,cAAC,IAAD,CAAOU,YAAa,2BACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOR,EAAUQ,EAAEC,OAAOjF,QACpCA,MAAOuE,QCqFXkD,GA7GY,WAAO,IAAD,EACa7F,oBAAS,GADtB,mBACtB8F,EADsB,KACPC,EADO,OAEa/F,oBAAS,GAFtB,mBAEtBgG,EAFsB,KAEPC,EAFO,OAGyBjG,qBAHzB,mBAGtBkG,EAHsB,KAGDC,EAHC,OAILnG,qBAJK,mBAItBzD,EAJsB,KAIhB6J,EAJgB,OAKSC,cAA/BnF,EALsB,EAKtBA,UAAWG,EALW,EAKXA,QAASiB,EALE,EAKFA,QACrBvE,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAAOI,KANpC,EAOHwC,qBAPG,mBAOtBsG,EAPsB,KAOfC,EAPe,OAQHvG,qBARG,mBAQtBoB,EARsB,KAQfoF,EARe,OASCxG,qBATD,mBAStBQ,EATsB,KASbiG,EATa,KAWvBC,EAAc,SAACxF,EAAoBG,EAAkBiB,GACvDvG,EAASqE,IAA+B,6BAA8B,CAClEa,OAAQ,CACJC,YAAWG,UAASiB,aAEzBjC,MAAK,SAAA3D,GAAQ,OAAI0J,GAAQ,kBAAM1J,EAASH,YAG/C4D,qBAAU,WACNoG,OAASzD,GACT0D,OAAS1D,GACT2D,OAAW3D,GACX4D,EAAYxF,EAAWG,EAASiB,GACjB,MAAXA,EACAvG,EACKqE,IAAW,kBAAmB,CAACa,OAAQ,CAACR,GAAI6B,KAC5CjC,MAAK,SAAA3D,GAAQ,OAAI6J,GAAS,kBAAM7J,EAASH,WAC5B,MAAX8E,EACPtF,EACKqE,IAAW,kBAAmB,CAACa,OAAQ,CAACR,GAAIY,KAC5ChB,MAAK,SAAA3D,GAAQ,OAAI8J,GAAS,kBAAM9J,EAASH,WAC1B,MAAb2E,GACPnF,EACKqE,IAAa,oBAAqB,CAACa,OAAQ,CAACR,GAAIS,KAChDb,MAAK,SAAA3D,GAAQ,OAAI+J,GAAW,kBAAM/J,EAASH,aAErD,CAAC2E,EAAWG,EAASiB,IAGxB,IAAMqE,EAAa,uCAAG,WAAOlG,GAAP,SAAApC,EAAA,sEACZtC,EAASyC,KAAK,uBAAwB,CAACiC,GAAIA,IAD/B,uBAEZiG,IAFY,2CAAH,sDAqBnB,OACI,gCACI,eAAC,IAAD,CACIE,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACPjE,MAAO,2BACPkE,SAhBK,MAATX,EACM,GAAN,OAAUA,EAAMtH,MACA,MAAToC,EACD,GAAN,OAAUA,EAAMpC,MACE,MAAXwB,EACD,GAAN,OAAUA,EAAQxB,MAEf,GAUCkI,MAAO,CACH,cAAC,IAAD,CAEIpC,QAAS,kBAAMiB,GAAiB,IAChCzI,KAAM,UACN6J,OAAQpJ,EAAU6G,OAASlH,EAAUmH,aAJzC,2CACS,IAPjB,UAYI,eAAC,IAAD,WACKyB,GAAS,qCACN,eAAC,IAAavH,KAAd,CAAmB2B,MAAO,qBAA1B,cAAmC4F,EAAMtH,QACzC,eAAC,IAAaD,KAAd,CAAmB2B,MAAO,qBAA1B,cAAmC4F,EAAMlF,MAAMpC,QAC/C,eAAC,IAAaD,KAAd,CAAmB2B,MAAO,qBAA1B,cAAmC4F,EAAMlF,MAAMZ,QAAQxB,WAE1DoC,GAAS,qCACN,eAAC,IAAarC,KAAd,CAAmB2B,MAAO,qBAA1B,cAAmCU,EAAMpC,QACzC,eAAC,IAAaD,KAAd,CAAmB2B,MAAO,qBAA1B,cAAmCU,EAAMZ,QAAQxB,WAEpDwB,GAAW,eAAC,IAAazB,KAAd,CAAmB2B,MAAO,qBAA1B,cAAmCF,EAAQxB,QACvD,cAAC,IAAaD,KAAd,CAAmB2B,MAAM,2BAAzB,gBAAiCnE,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM6K,oBACvC,cAAC,IAAarI,KAAd,CAAmB2B,MAAM,uCAAzB,gBAAmCnE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM2I,wBACzC,cAAC,IAAanG,KAAd,CAAmB2B,MAAM,uCAAzB,gBAAmCnE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM4I,yBACzC,cAAC,IAAapG,KAAd,CAAmB2B,MAAM,uCAAzB,gBAAmCnE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM6I,yBAE7C,cAAC,GAAD,CAAiB7I,KAAMA,OAE3B,cAAC,GAAD,CACIoJ,gBAAiBO,EACjB9D,QAAS4D,EACT3D,WAAY4D,EACZxE,UAAW,kBAAMiF,OACrB,cAAC,EAAD,CACItE,QAAS0D,EACTzD,WAAY0D,EACZtE,UAAW,kBAAMiF,OACrB,cAAC,GAAD,CACI5C,YAAa,SAACrD,GAAD,OA1DF,SAACA,GACpB0F,EAAuB1F,GACvBwF,GAAiB,GAwDYoB,CAAe5G,IACpCmD,WAAU,OAAErH,QAAF,IAAEA,OAAF,EAAEA,EAAM+K,cAAezD,SAAU,SAACpD,GAAD,OAAQkG,EAAclG,U,UC9G1E8G,GAAUC,KAAVD,OAiBQE,GAfqC,SAAC,GAAuB,IAAtBlG,EAAqB,EAArBA,SAAU5C,EAAW,EAAXA,MAAW,EACjCqB,mBAAoB,IADa,mBAChE0H,EADgE,KACnDC,EADmD,KAQvE,OALAxH,qBAAU,WACNpE,EAASqE,IAAe,wBACnBC,MAAK,SAAA3D,GAAQ,OAAIiL,EAAejL,EAASH,WAC/C,IAEI,cAAC,KAAD,CAAQmD,YAAa,eAAMf,MAAOA,EAAO4C,SAAU,SAACnD,GAAD,OAAWmD,EAASnD,IAAvE,SAECsJ,EAAYnH,KAAI,SAAAC,GAAO,OAAI,cAAC+G,GAAD,CAAyBnJ,MAAOoC,EAAQC,GAAxC,SAA6CD,EAAQxB,MAAxCwB,EAAQC,UCTrDwB,GAAWC,IAAXD,QAqDQ2F,GAnDkC,SAAC,GAAsC,IAArCxF,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAYZ,EAAe,EAAfA,UAAe,EACjDzB,mBAAwB,MADyB,mBAC5EkB,EAD4E,KACjE2G,EADiE,OAGjD7H,qBAHiD,mBAG5E8H,EAH4E,KAGjEC,EAHiE,OAI3D/H,qBAJ2D,mBAI5EhB,EAJ4E,KAItE0D,EAJsE,OAKvD1C,qBALuD,mBAK5E2C,EAL4E,KAKpEC,EALoE,KAO7EC,EAAQ,uCAAG,sBAAAxE,EAAA,sEACPtC,EAASyC,KAAK,uBAAwB,CACxCsJ,UAAWA,EACX9I,KAAMA,EACNkC,UAAWA,EACXyB,OAAQA,IALC,OAObD,EAAQ,IACRE,EAAU,IACVnB,IACAY,GAAW,GAVE,2CAAH,qDAad,OACI,cAAC,IAAD,CACIU,MAAM,iCACNC,SAAU,kBAAMX,GAAW,IAC3BD,QAASA,EACTa,KAAMJ,EAJV,SAKI,eAAC,IAAD,WACI,eAAC,GAAD,CAASK,IAAI,2BAAb,UACI,cAAC,GAAD,CAAe3B,SAAUsG,EAAclJ,MAAO,CAACwE,aAAc,GAAI/D,MAAO,UACxE,cAAC,IAAD,CAAOM,YAAa,eACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAO2E,EAAa3E,EAAEC,OAAOjF,QACvCA,MAAO0J,IACd,cAAC,IAAD,CAAOpI,YAAa,eACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOV,EAAQU,EAAEC,OAAOjF,QAClCA,MAAOY,IACd,cAAC,IAAD,CAAOU,YAAa,2BACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOR,EAAUQ,EAAEC,OAAOjF,QACpCA,MAAOuE,MAbM,KAexB,cAAC,GAAD,CAASO,IAAI,kCAAb,SACI,cAAC,EAAD,CAAYxB,IAAI,6BAA6BD,UAAW,kBAAMY,GAAW,OAD9C,WCAhC2F,GA1CmC,SAAC,GAA4C,IAA3CV,EAA0C,EAA1CA,cAAezD,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YACnEC,EAAQ/F,aAAY,SAACgG,GAAD,OAAqBA,EAAK5G,SAAOI,KAErDyG,EAA2C,CAC7C,CAAClB,MAAO,eAAMmB,UAAW,YAAaC,IAAK,aAC3C,CAACpB,MAAO,eAAMmB,UAAW,OAAQC,IAAK,QACtC,CAACpB,MAAO,eAAMmB,UAAW,cAAeC,IAAK,eAC7C,CACIpB,MAAO,uCACPmB,UAAW,qBACXC,IAAK,qBACLC,OAAQ,SAACC,GAAD,OAAqBA,EAAS,qBAAQ,sBAC9CC,QAAS,CAAC,CAACC,KAAM,qBAAOnG,OAAO,GAAO,CAACmG,KAAM,qBAAOnG,OAAO,IAC3DoG,SAAU,SAACpG,EAAkCqG,GAAnC,OAAkEA,EAAOC,qBAAuBtG,IAC3G,CACC2E,MAAO,qBACPmB,UAAW,OACXC,IAAK,OACLC,OAAQ,SAAC9G,GAAD,OAA2BiG,EAAejG,IAClDgH,QAAS,CAAC,CAACC,KAAM,eAAMnG,MAAO,gBAC1B,CAACmG,KAAM,eAAMnG,MAAO,gBACpB,CAACmG,KAAM,eAAMnG,MAAO,gBACpB,CAACmG,KAAM,qBAAOnG,MAAO,uBAEzBoG,SAAU,SAACpG,EAAkCqG,GAAnC,OAAkElB,EAAekB,EAAOnH,QAAUc,IAC7G,CACC2E,MAAO,eACPmB,UAAW,YACXC,IAAK,YACLC,OAAQ,SAAC3D,GAAD,OAAgB,mCAEhBsD,EAAMa,OAASlH,EAAUmH,cAAgB,qCACrC,cAAC,IAAD,CAAQvH,KAAK,OAAOwH,QAAS,kBAAMhB,EAAYrD,IAA/C,0BACA,cAAC,IAAD,CAAQnD,KAAK,OAAOwH,QAAS,kBAAMjB,EAASpD,IAA5C,kCAMpB,OAAO,cAAC,IAAD,CAAOO,QAA0B,MAAjBsG,EAAuBrD,QAASA,EAASc,OAAQ,YAAanB,WAAY0D,KCZtFW,GAjCyC,SAAC,GAAY,IAAX1L,EAAU,EAAVA,KACtD,GAAY,MAARA,EACA,OAAO,6BAGX,IAAMD,EAAoB,CACtB2I,SAAS,EACT1I,KAAM,CACF,CAACe,KAAM,eAAMc,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM2L,uBAC1B,CAAC5K,KAAM,eAAMc,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM4L,wBAC1B,CAAC7K,KAAM,eAAMc,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM6L,sBAE9B/C,WAAY,QACZC,WAAY,OACZlG,MAAO,IACPmG,OAAQ,IACRC,MAAO,YACH,OADe,EAAVlI,MAED,IAAK,eACD,MAAO,QACX,IAAK,eACD,MAAO,SACX,IAAK,eACD,MAAO,MACX,QACI,MAAO,UAKvB,OAAO,cAAC,KAAD,cAAKqB,MAAO,CAAC0J,YAAa,MAAOzJ,QAAS,UAActC,KCQpDgM,GAlCkC,SAAC,GAAiD,IAAhDlG,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,WAAYZ,EAA0B,EAA1BA,UAAWqG,EAAe,EAAfA,UAAe,EAC5D9H,mBAAwB,MADoC,mBACvFkB,EADuF,KAC5E2G,EAD4E,OAEtE7H,qBAFsE,mBAEvFhB,EAFuF,KAEjF0D,EAFiF,OAGlE1C,qBAHkE,mBAGvF2C,EAHuF,KAG/EC,EAH+E,KAKxFC,EAAQ,uCAAG,sBAAAxE,EAAA,sEACPtC,EAASyC,KAAK,uBAAwB,CAACiC,GAAIqH,EAAW5G,YAAWlC,OAAM2D,WADhE,OAEbN,GAAW,GACXZ,IAHa,2CAAH,qDAMd,OACI,eAAC,IAAD,CACIsB,MAAM,iCACNC,SAAU,kBAAMX,GAAW,IAC3BD,QAASA,EACTa,KAAMJ,EAJV,UAKI,cAAC,GAAD,CAAetB,SAAUsG,EAAclJ,MAAO,CAACwE,aAAc,GAAI/D,MAAO,UACxE,cAAC,IAAD,CAAOM,YAAa,eACbf,MAAO,CAACwE,aAAc,IACtByC,UAAU,EACVxH,MAAO0J,IACd,cAAC,IAAD,CAAOpI,YAAa,eACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOV,EAAQU,EAAEC,OAAOjF,QAClCA,MAAOY,IACd,cAAC,IAAD,CAAOU,YAAa,2BACbf,MAAO,CAACwE,aAAc,IACtB5B,SAAU,SAAC6B,GAAD,OAAOR,EAAUQ,EAAEC,OAAOjF,QACpCA,MAAOuE,QC2CX4F,GAvEY,WAAO,IAAD,EACavI,oBAAS,GADtB,mBACtB8F,EADsB,KACPC,EADO,OAEa/F,oBAAS,GAFtB,mBAEtBwI,EAFsB,KAEPC,EAFO,OAGiBzI,qBAHjB,mBAGtB0I,EAHsB,KAGLC,EAHK,KAIvB5K,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAAOI,KAC1D0D,EAAamF,cAAbnF,UALsB,EAMLlB,qBANK,mBAMtBzD,EANsB,KAMhB6J,EANgB,OAOCpG,qBAPD,mBAOtBQ,EAPsB,KAObiG,EAPa,KASvBmC,EAAW,uCAAG,WAAO1H,GAAP,eAAA7C,EAAA,sEACOtC,EAClBqE,IAA+B,6BAA8B,CAACa,OAAQ,CAACC,UAAWA,KAFvE,OACVxE,EADU,OAGhB0J,GAAQ,kBAAM1J,EAASH,QAHP,2CAAH,sDAMjB4D,qBAAU,WACNsG,OAAW3D,GACX8F,EAAY1H,GACK,MAAbA,GACAnF,EACKqE,IAAa,oBAAqB,CAACa,OAAQ,CAACR,GAAIS,KAChDb,MAAK,SAAA3D,GAAQ,OAAI+J,EAAW/J,EAASH,WAE/C,CAAC2E,IAEJ,IAAM2H,EAAa,uCAAG,WAAOpI,GAAP,SAAApC,EAAA,sEACZtC,EAASyC,KAAK,uBAAwB,CAACiC,GAAIA,IAD/B,uBAEZmI,IAFY,2CAAH,sDAKnB,OACI,gCACI,eAAC,IAAD,CACIhC,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACPjE,MAAM,2BACNkE,SAAQ,OAAEzG,QAAF,IAAEA,OAAF,EAAEA,EAASxB,KACnBkI,MACInJ,EAAU6G,OAASlH,EAAUmH,cAC7B,cAAC,IAAD,CAAQC,QAAS,kBAAMiB,GAAiB,IAAOzI,KAAM,UAArD,4CAPR,UASI,eAAC,IAAD,WACKkD,GAAW,eAAC,IAAazB,KAAd,CAAmB2B,MAAO,qBAA1B,cAAmCF,EAAQxB,QACvD,cAAC,IAAaD,KAAd,CAAmB2B,MAAM,2BAAzB,gBAAiCnE,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAMuM,oBACvC,cAAC,IAAa/J,KAAd,CAAmB2B,MAAM,uCAAzB,gBAAmCnE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM2L,wBACzC,cAAC,IAAanJ,KAAd,CAAmB2B,MAAM,uCAAzB,gBAAmCnE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM4L,yBACzC,cAAC,IAAapJ,KAAd,CAAmB2B,MAAM,uCAAzB,gBAAmCnE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM6L,yBAE7C,cAAC,GAAD,CAAiB7L,KAAMA,OAE3B,cAAC,GAAD,CACI6F,QAASoG,EACTnG,WAAYoG,EACZhH,UAAW,kBAAMmH,KACjBd,UAAWY,IAEf,cAAC,GAAD,CACItG,QAAS0D,EACTzD,WAAY0D,EACZtE,UAAW,kBAAMmH,OACrB,cAAC,GAAD,CACI9E,YAAa,SAACrD,GACVkI,EAAmBlI,GACnBgI,GAAiB,IAErBnB,cAAa,OAAE/K,QAAF,IAAEA,OAAF,EAAEA,EAAM+K,cACrBzD,SAAU,SAACpD,GAAD,OAAQoI,EAAcpI,U,UCnDjCsI,GApByC,SAAC,GAA2B,IAA1B3G,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAAgB,EACvDrC,mBAAS,IAD8C,mBACxEhB,EADwE,KAClE0D,EADkE,KAEzEG,EAAQ,uCAAG,sBAAAxE,EAAA,sEACPtC,EAASyC,KAAK,oBAAqB,CAACQ,SAD7B,OAEbqD,GAAW,GAFE,2CAAH,qDAKd,OACI,cAAC,IAAD,CACIU,MAAM,iCACNC,SAAU,kBAAMX,GAAW,IAC3BY,KAAMJ,EACNT,QAASA,EAJb,SAKI,cAAC,IAAD,CAAO1C,YAAa,qBACb6B,SAAU,SAAC6B,GAAD,OAAOV,EAAQU,EAAEC,OAAOjF,QAClCA,MAAOY,OC6BXgK,GA3CY,WACvB,IAAMjL,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAAOI,KADpC,EAECwC,oBAAS,GAFV,mBAEtBgB,EAFsB,KAEbiI,EAFa,OAGLjJ,mBAAoB,IAHf,mBAGtBzD,EAHsB,KAGhB6J,EAHgB,OAICpG,oBAAS,GAJV,mBAItBoC,EAJsB,KAIbC,EAJa,KAM7BlC,qBAAU,WACN8I,GAAW,GACXlN,EAASqE,IAAe,wBACnBC,MAAK,SAACC,GAAD,OAAU8F,EAAQ9F,EAAK/D,SAC5B2M,SAAQ,kBAAMD,GAAW,QAC/B,IAEH,IAAMhF,EAAU,CACZ,CAAClB,MAAO,qBAAOmB,UAAW,OAAQC,IAAK,QACvC,CACIpB,MAAO,GAAImB,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAAC3D,GAAD,OAAgB,cAAC,KAAD,CAAMvC,GAAE,yBAAoBuC,GAA5B,oDAE5B,CACIsC,MAAO,GAAImB,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAAC3D,GAAD,OAAgB,cAAC,KAAD,CAAMvC,GAAE,yBAAoBuC,GAA5B,kFAE5B,CACIsC,MAAO,GAAImB,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAAC3D,GAAD,OAAgB,cAAC,KAAD,CAAMvC,GAAE,yBAAoBuC,GAA5B,mFAIhC,OACI,gCACI,cAAC,IAAD,CACIuG,OAAO,EACPjE,MAAM,2BACNmE,MAAOnJ,EAAU6G,OAASlH,EAAUmH,cACpC,cAAC,IAAD,CAAQvH,KAAM,UAAWwH,QAAS,kBAAMzC,GAAW,IAAnD,8CAEJ,cAAC,IAAD,CAAOrB,QAASA,EAAS+D,OAAQ,OAAQd,QAASA,EAASL,WAAYrH,IACvE,cAAC,GAAD,CAAiB6F,QAASA,EAASC,WAAYA,QClB5C8G,GApBqC,SAAC,GAAoC,IAAnC/G,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,WAAYhB,EAAa,EAAbA,QAAa,EAC5DrB,mBAAS,IADmD,mBAC7EhB,EAD6E,KACvE0D,EADuE,KAE9EG,EAAQ,uCAAG,sBAAAxE,EAAA,sEACPtC,EAASyC,KAAK,kBAAmB,CAACQ,OAAMqC,YADjC,OAEbgB,GAAW,GAFE,2CAAH,qDAKd,OACI,cAAC,IAAD,CACIU,MAAM,iCACNC,SAAU,kBAAMX,GAAW,IAC3BY,KAAMJ,EACNT,QAASA,EAJb,SAKI,cAAC,IAAD,CAAO1C,YAAa,qBACb6B,SAAU,SAAC6B,GAAD,OAAOV,EAAQU,EAAEC,OAAOjF,QAClCA,MAAOY,OCoBXoK,GAnCU,WACrB,IAAMrL,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAAOI,KADtC,EAEGwC,oBAAS,GAFZ,mBAEpBgB,EAFoB,KAEXiI,EAFW,OAGHjJ,mBAAkB,IAHf,mBAGpBzD,EAHoB,KAGd6J,EAHc,OAIGpG,oBAAS,GAJZ,mBAIpBoC,EAJoB,KAIXC,EAJW,OAKEgE,cAAtBnF,EALoB,EAKpBA,UAAWG,EALS,EAKTA,QAElBlB,qBAAU,WACN8I,GAAW,GACXlN,EAASqE,IAAa,4BAA6B,CAACa,OAAQ,CAACI,QAASA,KACjEhB,MAAK,SAAA3D,GAAQ,OAAI0J,EAAQ1J,EAASH,SAClC2M,SAAQ,kBAAMD,GAAW,QAC/B,CAAC5H,IAEJ,IAAM4C,EAAU,CACZ,CAAClB,MAAO,qBAAOmB,UAAW,OAAQC,IAAK,QACvC,CACIpB,MAAO,GAAImB,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAAC3D,GAAD,OAAgB,cAAC,KAAD,CAAMvC,GAAE,yBAAoBgD,EAApB,YAAiCG,EAAjC,YAA4CZ,GAApD,mFAIhC,OAAO,gCACH,cAAC,IAAD,CACImG,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACPjE,MAAM,2BACNmE,MAAOnJ,EAAU6G,OAASlH,EAAUmH,cACpC,cAAC,IAAD,CAAQvH,KAAM,UAAWwH,QAAS,kBAAMzC,GAAW,IAAnD,8CAEJ,cAACgH,GAAD,CAAejH,QAASA,EAASC,WAAYA,EAAYhB,QAASiI,OAAOjI,KACzE,cAAC,IAAD,CAAOL,QAASA,EAAS+D,OAAQ,OAAQd,QAASA,EAASL,WAAYrH,QCXhE4M,GApBqC,SAAC,GAAsC,IAArC/G,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAYnB,EAAe,EAAfA,UAAe,EAC9DlB,mBAAS,IADqD,mBAC/EhB,EAD+E,KACzE0D,EADyE,KAEhFG,EAAQ,uCAAG,sBAAAxE,EAAA,sEACPtC,EAASyC,KAAK,kBAAmB,CAACQ,OAAMkC,cADjC,OAEbmB,GAAW,GAFE,2CAAH,qDAKd,OACI,cAAC,IAAD,CACIU,MAAM,iCACNC,SAAU,kBAAMX,GAAW,IAC3BY,KAAMJ,EACNT,QAASA,EAJb,SAKI,cAAC,IAAD,CAAO1C,YAAa,qBACb6B,SAAU,SAAC6B,GAAD,OAAOV,EAAQU,EAAEC,OAAOjF,QAClCA,MAAOY,OC0BXuK,GAzCU,WACrB,IAAMxL,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAAOI,KADtC,EAEGwC,oBAAS,GAFZ,mBAEpBgB,EAFoB,KAEXiI,EAFW,OAGGjJ,oBAAS,GAHZ,mBAGpBoC,EAHoB,KAGXC,EAHW,OAIHrC,mBAAkB,IAJf,mBAIpBzD,EAJoB,KAId6J,EAJc,KAKpBlF,EAAamF,cAAbnF,UAEPf,qBAAU,WACN8I,GAAW,GACXlN,EAASqE,IAAa,6BAA8B,CAACa,OAAQ,CAACC,UAAWA,KACpEb,MAAK,SAAA3D,GAAQ,OAAI0J,EAAQ1J,EAASH,SAClC2M,SAAQ,kBAAMD,GAAW,QAC/B,CAAC/H,IAEJ,IAAM+C,EAAU,CACZ,CAAClB,MAAO,qBAAOmB,UAAW,OAAQC,IAAK,QACvC,CACIpB,MAAO,GAAImB,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAAC3D,GAAD,OAAgB,cAAC,KAAD,CAAMvC,GAAE,yBAAoBgD,EAApB,kBAAuCT,GAA/C,oDAE5B,CACIsC,MAAO,GAAImB,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAAC3D,GAAD,OAAgB,cAAC,KAAD,CAAMvC,GAAE,yBAAoBgD,EAApB,YAAiCT,GAAzC,mFAIhC,OACI,gCACI,cAAC,IAAD,CACImG,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACPjE,MAAM,2BACNmE,MAAOnJ,EAAU6G,OAASlH,EAAUmH,cACpC,cAAC,IAAD,CAAQvH,KAAM,UAAWwH,QAAS,kBAAMzC,GAAW,IAAnD,8CAEJ,cAAC,GAAD,CAAeD,QAASA,EAASC,WAAYA,EAAYnB,UAAWoI,OAAOpI,KAC3E,cAAC,IAAD,CAAOF,QAASA,EAAS+D,OAAQ,OAAQd,QAASA,EAASL,WAAYrH,Q,kDCpC5EiN,GAASC,IAATD,MAqDQE,GApDI,WAEf,IAAM3F,EAAQ/F,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAAOI,KACvDsJ,EAAU6C,cACVlM,EAAWQ,cAEX2L,EAAM,uCAAG,sBAAAvL,EAAA,sEACLtC,EAASyC,KAAK,WADT,OAEXf,EAASF,KACTuJ,EAAQ+C,KAAK,KAHF,2CAAH,qDAMZ,OAAO,eAACL,GAAD,CAAOM,aAAW,EAACtK,UAAU,yBAA7B,UACH,qBAAKA,UAAU,SACf,eAAC,KAAD,CAAMuK,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,KAAK,SAApD,UACI,eAAC,KAAKlL,KAAN,CAAW6G,UAAU,EAArB,UACK7B,EAAMa,OAASlH,EAAUmH,cAAgB,iCACzCd,EAAMa,OAASlH,EAAUwM,cAAgB,iCACzCnG,EAAMa,OAASlH,EAAUyM,eAAiB,mCAHhB,KAK/B,cAAC,KAAKpL,KAAN,CACWqL,KAAM,cAACC,GAAA,EAAD,IACNvF,QAAS,kBAAMgC,EAAQ+C,KAAK,mBAFvC,qCAAe,KAKf,cAAC,KAAK9K,KAAN,CACWqL,KAAM,cAAC7K,EAAA,EAAD,IACNuF,QAAS,kBAAMgC,EAAQ+C,KAAK,mBAFvC,qCAAe,KAKf,cAAC,KAAK9K,KAAN,CACWqL,KAAM,cAACE,GAAA,EAAD,IACNxF,QAAS,kBAAMgC,EAAQ+C,KAAK,mBAFvC,qCAAe,KAMX9F,EAAMa,OAASlH,EAAUmH,cACzB,cAAC,KAAK9F,KAAN,CACWqL,KAAM,cAACG,GAAA,EAAD,IACNzF,QAAS,kBAAMgC,EAAQ+C,KAAK,iBAFvC,2CAAe,KAMnB,cAAC,KAAK9K,KAAN,CACWqL,KAAM,cAACI,GAAA,EAAD,IACN1F,QAAS8E,EAFpB,yBAAe,YChDpBrC,GAAUC,KAAVD,OA6DQkD,GAtDqC,SAAC,GAA2B,IAA1BrI,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAAgB,EAC3CrC,mBAAoB,IADuB,mBACpE0K,EADoE,KAC1DC,EAD0D,OAEnD3K,mBAAS,IAF0C,mBAEpEhB,EAFoE,KAE9D0D,EAF8D,OAG3C1C,mBAAS,IAHkC,mBAGpEzB,EAHoE,KAG1DqM,EAH0D,OAInD5K,mBAAStC,EAAUmH,cAJgC,mBAIpEvH,EAJoE,KAI9DuN,EAJ8D,OAKzC7K,qBALyC,mBAKpEkB,EALoE,KAKzD2G,EALyD,OAMjC7H,oBAAS,GANwB,mBAMpE8K,EANoE,KAMrDC,EANqD,KAQ3E5K,qBAAU,WACNpE,EAASqE,IAAe,wBACnBC,MAAK,SAACC,GAAD,OAAUqK,EAAYrK,EAAK/D,WACtC,IAEH,IAAM8H,EAAM,uCAAG,sBAAAhG,EAAA,sEACLtC,EAASyC,KAAK,kBAAkB,CAACQ,OAAMT,WAAUjB,OAAM4D,cADlD,OAEXmB,GAAW,GAFA,2CAAH,qDAcZ,OACI,eAAC,IAAD,CACIU,MAAO,iCACPX,QAASA,EACTY,SAAU,kBAAMX,GAAW,IAC3BY,KAAM,kBAAMoB,KAJhB,UAMI,cAAC,IAAD,CAAO3E,YAAa,iCAAStB,MAAOY,EAAMuC,SAAU,SAAA6B,GAAC,OAAIV,EAAQU,EAAEC,OAAOjF,UAC1E,cAAC,IAAD,CAAOd,KAAM,WAAYoC,YAAa,iCAAStB,MAAOG,EAC/CgD,SAAU,SAAA6B,GAAC,OAAIwH,EAAYxH,EAAEC,OAAOjF,UAC3C,eAAC,KAAD,CAAQO,MAAO,CAACC,QAAS,SAAUR,MAAOd,EAClCiE,SApBK,SAACjE,GAClBuN,EAAQvN,GACJA,IAASI,EAAUyM,cACnBY,GAAiB,GAEjBA,GAAiB,IAcjB,UAEI,cAAC,KAAOxD,OAAR,CAAenJ,MAAOV,EAAUmH,aAAhC,4CACA,cAAC,KAAO0C,OAAR,CAAenJ,MAAOV,EAAUwM,aAAhC,4CACA,cAAC,KAAO3C,OAAR,CAAenJ,MAAOV,EAAUyM,cAAhC,gDAGCW,GAAiB,cAAC,KAAD,CAAQnM,MAAO,CAACC,QAAS,SAAUR,MAAO8C,EAAWK,SAAUsG,EAA/D,SAEV6C,EAASnK,KAAI,SAAAC,GAAO,OAAI,cAAC,GAAD,CAAyBpC,MAAOoC,EAAQC,GAAxC,SAA6CD,EAAQxB,MAAxCwB,EAAQC,aCLtDuK,GA5CU,WACrB,IAAMjN,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAAOI,KADtC,EAEGwC,oBAAS,GAFZ,mBAEpBoC,EAFoB,KAEXC,EAFW,OAICrC,mBAAkB,IAJnB,mBAIpBiL,EAJoB,KAIZC,EAJY,KAM3B/K,qBAAU,WACNpE,EAASqE,IAAa,sBACjBC,MAAK,SAAA3D,GAAQ,OAAIwO,EAAUxO,EAASH,WAC1C,IAEH,IAAM0H,EAA8B,CAChC,CAAClB,MAAO,eAAMmB,UAAW,WAAYC,IAAK,YAC1C,CACIpB,MAAO,eAAMmB,UAAW,OAAQC,IAAK,OACrCC,OAAQ,SAACQ,GACL,OAAQA,GACJ,KAAKlH,EAAUyM,cACX,MAAO,iCACX,KAAKzM,EAAUwM,aACX,MAAO,iCACX,KAAKxM,EAAUmH,aACX,MAAO,oCAIvB,CAAC9B,MAAO,eAAMmB,UAAW,UAAWC,IAAK,UAAWC,OAAQ,SAAC5D,GAAD,cAAuBA,QAAvB,IAAuBA,OAAvB,EAAuBA,EAASxB,QAGhG,OACI,gCACI,cAAC,IAAD,CACIgI,OAAO,EACPjE,MAAM,iCACNmE,MAAOnJ,EAAU6G,OAASlH,EAAUmH,cACpC,cAAC,IAAD,CAAQvH,KAAM,UAAWwH,QAAS,kBAAMzC,GAAW,IAAnD,oDAEJ,cAAC,GAAD,CAAeD,QAASA,EAASC,WAAYA,IAC7C,cAAC,IAAD,CAAO0C,OAAQ,WAAYnB,WAAYqH,EAAQhH,QAASA,QCnC7DkH,GAAW1B,IAAX0B,QA6CQC,GA3CG,WACd,IAAMrN,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAE1D,OAAKW,EAAUX,MAIQ,YAAnBW,EAAUT,KACH,cAAC,IAAD,CAAUY,GAAI,aAGF,YAAnBH,EAAUT,KACH,cAAC,IAAD,CAAUY,GAAI,aAGjB,8BACJ,eAAC,IAAD,CAAQS,MAAO,CAAC0M,UAAW,SAA3B,UACI,cAAC,GAAD,IACA,cAAC,IAAD,CAAQ7L,UAAU,cAAlB,SACI,cAAC2L,GAAD,UACI,qBAAK3L,UAAU,yBAAyBb,MAAO,CAAC2M,QAAS,GAAID,UAAW,KAAxE,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,KAAM,eAAgBC,OAAK,EAACC,UAAWT,KAC9C,cAAC,IAAD,CAAOO,KAAM,iBAAkBC,OAAK,EAACC,UAAW5F,KAChD,cAAC,IAAD,CAAO0F,KAAM,4BAA6BC,OAAK,EAACC,UAAW5F,KAC3D,cAAC,IAAD,CAAO0F,KAAM,qCAAsCC,OAAK,EAACC,UAAW5F,KACpE,cAAC,IAAD,CAAO0F,KAAM,8CAA+CC,OAAK,EAC1DC,UAAW5F,KAClB,cAAC,IAAD,CAAO0F,KAAM,iBAAkBC,OAAK,EAACC,UAAWlD,KAChD,cAAC,IAAD,CAAOgD,KAAM,4BAA6BC,OAAK,EAACC,UAAWlD,KAC3D,cAAC,IAAD,CAAOgD,KAAM,iBAAkBC,OAAK,EAACC,UAAWzC,KAChD,cAAC,IAAD,CAAOuC,KAAM,4BAA6BC,OAAK,EAACC,UAAWlC,KAC3D,cAAC,IAAD,CAAOgC,KAAM,2CAA4CC,OAAK,EACvDC,UAAWrC,mBA7B/B,cAAC,IAAD,CAAUlL,GAAI,O,weCftB,IAAMwN,GAAa9N,IAAO+N,IAAV,MASVC,GAAgBhO,YAAOiO,IAAPjO,CAAH,MAMbkO,GAAYlO,YAAOmO,KAAPnO,CAAD,MCUToO,GApBA,WACX,IAAMjO,EAAYC,aAAY,SAACgG,GAAD,OAAqBA,EAAK5G,SAClDK,EAAWQ,cACX6I,EAAU6C,cAEVC,EAAM,uCAAG,sBAAAvL,EAAA,sEACLtC,EAASyC,KAAK,WADT,OAEXf,EAASF,KACTuJ,EAAQ+C,KAAK,KAHF,2CAAH,qDAMZ,OAAO,cAAC,KAAD,UACH,eAAC6B,GAAD,WACK,SAAU3N,EAAUP,MAAQ,cAACsO,GAAD,UAAc/N,EAAUP,KAAKwB,OACzD,aAAcjB,EAAUP,MAAQ,cAACsO,GAAD,UAAc/N,EAAUP,KAAKc,WAC9D,cAACsN,GAAD,CAAe9G,QAAS8E,EAAQtM,KAAM,UAAtC,gC,oBCkGG2O,GA3GkC,SAAC,GAAiC,IAAhC9N,EAA+B,EAA/BA,SAAUX,EAAqB,EAArBA,KAAM0O,EAAe,EAAfA,UAUzDC,EAAa,CACfvN,QAAS,QACT2G,OAAQ,OACR6G,WAAY,QAGhB,OACI,8BACI,eAAC,IAAD,CAAMjO,SAjBC,SAACkO,GACZ,IAAMC,EAA6BD,EAAOC,2BACpCC,EAAiBF,EAAOE,eACxBC,EAAeH,EAAOG,aACtBC,EAAkBJ,EAAOI,gBACzBC,EAAkBL,EAAOK,gBAC/BvO,EAASmO,EAA4BC,EAAgBC,EAAcC,EAAiBC,IAWxD/N,MAAO,CAACgO,UAAW,IAA3C,UACI,cAAC,IAAK5N,KAAN,CAAW2B,MAAOwL,EAAY,eAAO,eAAMvN,MAAO,CAACC,QAAS,SAA5D,SACI,cAAC,IAAD,CAAOR,MAAOZ,EAAKiD,GAAImF,UAAQ,MAEnC,cAAC,IAAK7G,KAAN,CAAW2B,MAAM,eAAK/B,MAAO,CAACC,QAAS,SAAvC,SACI,cAAC,IAAD,CAAOR,MAAOZ,EAAKwB,KAAM4G,UAAQ,MAErC,cAAC,IAAK7G,KAAN,CAAW2B,MAAM,2BAAO/B,MAAO,CAACC,QAAS,SAAzC,SACI,cAAC,IAAD,CAAOR,MAAOZ,EAAKmF,OAAQiD,UAAQ,MAEvC,cAAC,IAAK7G,KAAN,CACIJ,MAAO,CAACC,QAAS,SACjBI,KAAK,6BAA6B0B,MAAM,qGACxCzB,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAHtC,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOwN,EAA3B,oBACA,cAAC,IAAD,CAAO/N,MAAM,QAAQO,MAAOwN,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAKpN,KAAN,CAAWC,KAAK,iBACL0B,MAAM,iEACN/B,MAAO,CAACC,QAAS,SACjBK,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAH7C,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOwN,EAA3B,oBACA,cAAC,IAAD,CAAO/N,MAAM,QAAQO,MAAOwN,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAKpN,KAAN,CAAWC,KAAK,eACL0B,MAAM,6HACN/B,MAAO,CAACC,QAAS,SACjBK,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAH7C,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOwN,EAA3B,oBACA,cAAC,IAAD,CAAO/N,MAAM,QAAQO,MAAOwN,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAKpN,KAAN,CAAWC,KAAK,kBACL0B,MAAM,iIACN/B,MAAO,CAACC,QAAS,SACjBK,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAH7C,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOwN,EAA3B,oBACA,cAAC,IAAD,CAAO/N,MAAM,QAAQO,MAAOwN,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAKpN,KAAN,CAAWC,KAAK,kBACLL,MAAO,CAACC,QAAS,SACjB8B,MAAM,uCAFjB,SAGI,cAAC,KAASvB,MAAV,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKE,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,wDACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,mCAI1B,cAAC,KAAD,IACA,cAAC,IAAKW,KAAN,CACIC,KAAM,QACNC,MAAO,CACH,CAACC,UAAU,EAAMrC,QAAS,kCAC1B,iBAAO,CACH+P,UADG,SACOC,EAAGzO,GACT,OAAOA,EAAQrB,QAAQ+P,UAAY/P,QAAQC,OAAO,sCANlE,SASI,cAAC,KAASmC,MAAV,UACI,cAAC,KAAD,CAAUf,MAAM,OAAhB,8KAGR,cAAC,IAAKW,KAAN,UACI,cAAC,IAAD,CAAQzB,KAAK,UAAUsC,SAAS,SAAhC,kC,oBCzFLmN,GAhBK,WAChB,IAAMhP,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SACpDI,EAAOO,EAAUP,KAEvB,OAAO,sBAAKmB,MAAO,CAACC,QAAS,QAASE,UAAW,UAA1C,UACH,+BAAKtB,EAAKwB,KAAV,mBACA,kIACA,wIACA,8IACA,cAAC,KAAD,CACIgO,SAAS,EACTC,IAAwB,YAAnBlP,EAAUT,KAAqB,kBAAoB,kBACxD4P,IAAK,2BC0CFC,GAnDK,WAChB,IAAMpP,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SADpC,EAG0B4C,oBAAkB,GAH5C,mBAGfoN,EAHe,KAGIC,EAHJ,OAIUrN,oBAAS,GAJnB,mBAIfsN,EAJe,KAIJrE,EAJI,KAatB,GAPA9I,qBAAU,WACNpE,EACKqE,IAAa,uBACbC,MAAK,SAAA3D,GAAQ,OAAI2Q,EAAmB3Q,EAASH,SAC7C2M,SAAQ,kBAAMD,GAAW,QAC/B,KAEElL,EAAUX,MACX,OAAO,cAAC,IAAD,CAAUc,GAAI,MAGzB,GAAuB,YAAnBH,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUY,GAAI,aAGzB,GAAuB,YAAnBH,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUY,GAAI,WAGzB,IAAMC,EAAQ,uCAAG,WAAOmO,EACAC,EACAC,EACAC,EACAC,GAJP,SAAArO,EAAA,sDAMbtC,EAASyC,KAAK,kBAAmB,CAC7B8N,6BACAC,iBACAC,eACAC,kBACAC,oBACDrM,MAAK,kBAAMgN,GAAmB,MAZpB,2CAAH,8DAed,OAAO,gCACH,cAAC,GAAD,IACA,sBAAK1O,MAAO,CAAC8G,WAAY,MAAO8H,YAAa,MAAOZ,UAAW,IAA/D,UACKW,GAAa,cAAC,KAAD,CAAUE,QAAQ,KAC9BF,GAAaF,GAAqB,cAAC,GAAD,KAClCE,IAAcF,GAChB,cAAC,GAAD,CAAqBjP,SAAUA,EAAU+N,WAAW,EAAM1O,KAAMO,EAAUP,cCGvEiQ,GAhDK,WAAO,IAAD,EAC0BzN,oBAAkB,GAD5C,mBACfoN,EADe,KACIC,EADJ,KAEhBtP,EAAYC,aAAY,SAACb,GAAD,OAAsBA,EAAMC,SAFpC,EAGU4C,oBAAS,GAHnB,mBAGfsN,EAHe,KAGJrE,EAHI,KAYtB,GAPA9I,qBAAU,WACNpE,EACKqE,IAAa,uBACbC,MAAK,SAAA3D,GAAQ,OAAI2Q,EAAmB3Q,EAASH,SAC7C2M,SAAQ,kBAAMD,GAAW,QAC/B,KAEElL,EAAUX,MACX,OAAO,cAAC,IAAD,CAAUc,GAAI,MAEzB,GAAuB,YAAnBH,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUY,GAAI,aAEzB,GAAuB,YAAnBH,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUY,GAAI,WAGzB,IAAMC,EAAQ,uCAAG,WAAOmO,EACAC,EACAC,EACAC,EACAC,GAJP,SAAArO,EAAA,sDAMbtC,EAASyC,KAAK,kBAAmB,CAC7B8N,6BACAC,iBACAC,eACAC,kBACAC,oBACDrM,MAAK,kBAAMgN,GAAmB,MAZpB,2CAAH,8DAed,OAAO,gCACH,cAAC,GAAD,IACA,sBAAK1O,MAAO,CAAC8G,WAAY,MAAO8H,YAAa,MAAOZ,UAAW,IAA/D,UACKW,GAAa,cAAC,KAAD,CAAUE,QAAQ,KAC9BF,GAAaF,GAAqB,cAAC,GAAD,KAClCE,IAAcF,GAChB,cAAC,GAAD,CAAqBjP,SAAUA,EAAUX,KAAMO,EAAUP,KAAiB0O,WAAW,W,UCdlFwB,OA7Bf,WACI,IAAMjQ,EAAWQ,cADN,EAEmB+B,oBAAS,GAF5B,mBAEJgB,EAFI,KAEKiI,EAFL,KAYX,OARA9I,qBAAU,WACN8I,GAAW,GACXlN,EACKqE,IAAe,qBACfC,MAAK,SAAA3D,GAAQ,OAAIe,EAASF,EAAQb,EAASH,UAC3C2M,SAAQ,kBAAMD,GAAW,QAC/B,CAACxL,IAEG,qCAECuD,GAAW,qBAAKrC,MAAO,CAACS,MAAO,OAAQmG,OAAQ,OAAQzG,UAAW,SAAU6N,UAAW,OAA5E,SACP,cAAC,KAAD,CAAMgB,KAAM,aAIf3M,GAAW,eAAC,IAAD,WACR,cAAC,IAAD,CAAOuK,KAAK,IAAIC,OAAK,EAACC,UAAW3N,IACjC,cAAC,IAAD,CAAOyN,KAAK,WAAWE,UAAWgC,KAClC,cAAC,IAAD,CAAOlC,KAAK,SAASE,UAAWL,KAChC,cAAC,IAAD,CAAOG,KAAK,WAAWE,UAAW0B,YCrBnCS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzN,MAAK,YAAkD,IAA/C0N,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8BCHRO,GAAUC,2BAAgB,CAC5BjR,MAAOF,IAMIoR,GAFDC,uBAAYH,GAASI,+BAAoBC,2BAAgBC,QCCjEC,GAAcC,QACW,cAA7B/H,OAAOgI,SAASC,UAEe,UAA7BjI,OAAOgI,SAASC,UAEhBjI,OAAOgI,SAASC,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAe3S,GACtC4S,UAAUC,cACPC,SAASH,GACT5O,MAAK,SAACgP,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpS,QACf+R,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,+GAKEtT,GAAUA,EAAOuT,UACnBvT,EAAOuT,SAASR,KAMlBM,QAAQC,IAAI,sCAGRtT,GAAUA,EAAOmF,WACnBnF,EAAOmF,UAAU4N,WAO5BS,OAAM,SAACnT,GACNgT,QAAQhT,MAAM,4CAA6CA,M,kCCvFjEoT,IAAS3L,OACL,cAAC,IAAD,CAAUkK,MAAOA,GAAjB,SACI,cAAC,KAAD,CAAgB0B,OAAQC,KAAxB,SACI,cAAC,KAAD,UACI,cAAC,GAAD,UAIZC,SAASC,eAAe,SDKrB,SAAkB7T,GACvB,GAA6C,kBAAmB4S,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBxJ,OAAOgI,SAASyB,MACpDC,SAAW1J,OAAOgI,SAAS0B,OAIvC,OAGF1J,OAAO2J,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMoB,GAAN,sBAEP1B,KAgEV,SAAiCM,EAAe3S,GAE9CmU,MAAMxB,EAAO,CACX/S,QAAS,CAAE,iBAAkB,YAE5BmE,MAAK,SAAC3D,GAEL,IAAMgU,EAAchU,EAASR,QAAQkE,IAAI,gBAEnB,MAApB1D,EAASqF,QACO,MAAf2O,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMvQ,MAAK,SAACgP,GAClCA,EAAawB,aAAaxQ,MAAK,WAC7BwG,OAAOgI,SAASiC,eAKpB9B,GAAgBC,EAAO3S,MAG1BwT,OAAM,WACLH,QAAQC,IAAI,oEAtFVmB,CAAwB9B,EAAO3S,GAI/B4S,UAAUC,cAAcyB,MAAMvQ,MAAK,WACjCsP,QAAQC,IACN,+GAMJZ,GAAgBC,EAAO3S,OC3B/B0U,GAKApD,O","file":"static/js/main.290d9cbe.chunk.js","sourcesContent":["import axios, {AxiosError} from 'axios'\r\nimport {message} from \"antd\";\r\nimport qs from 'qs';\r\n\r\nconst instance = axios.create({\r\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n})\r\n\r\ninstance.interceptors.request.use(\r\n    config => {\r\n        // 转为formdata数据格式\r\n        config.data = qs.stringify(config.data)\r\n        return config\r\n    }\r\n)\r\ninstance.interceptors.response.use(config => config, error => {\r\n        const ex: AxiosError = error;\r\n        if (ex.response != null) {\r\n            message.warn(ex.response.data.message)\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n;\r\n\r\nexport default instance;","import {Action} from \"redux\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\n\r\nexport const SetLoginStatus = \"set_login_status\"\r\n\r\ninterface LoginAction extends Action {\r\n    data: LoginUser\r\n}\r\n\r\nconst loginReducer = (state: LoginUser = {login: false} as LoginUser, action: LoginAction) => {\r\n    switch (action.type) {\r\n        case SetLoginStatus:\r\n            state = action.data\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default loginReducer","import {ThunkAction} from \"redux-thunk\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {SetLoginStatus} from \"./loginReducer\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\n\r\nexport const setUser = (user: LoginUser = {login: false} as LoginUser): ThunkAction<void, RootState, unknown, Action> => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch({\r\n            type: SetLoginStatus,\r\n            data: user\r\n        })\r\n    }\r\n}","import styled from \"styled-components\";\r\nimport {Form} from \"antd\";\r\n\r\nexport const LoginForm = styled(Form)`\r\n  margin: auto;\r\n  height: 300px;\r\n  width: 500px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`","import {College} from \"./College\";\r\n\r\nexport interface Admin {\r\n    id: number;\r\n    username: string;\r\n    role: AdminRole;\r\n    college: College;\r\n}\r\n\r\nexport enum AdminRole {\r\n    SYSTEM_ADMIN = \"SYSTEM_ADMIN\",\r\n    /**\r\n     * 校级管理员\r\n     */\r\n    SCHOOL_ADMIN = \"SCHOOL_ADMIN\",\r\n    /**\r\n     * 院级管理员\r\n     */\r\n    COLLEGE_ADMIN = \"COLLEGE_ADMIN\"\r\n}\r\n\r\n","import {Button, Col, Form, Input, Radio, Row} from \"antd\";\r\nimport React from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUser} from \"../../reducer/login/actionCreate\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport ParticlesBg from 'particles-bg'\r\nimport {LoginForm} from \"./style\";\r\n\r\nconst LoginPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const dispatch = useDispatch()\r\n\r\n    if (loginUser.login) {\r\n        switch (loginUser.type) {\r\n            case \"teacher\":\r\n                return <Redirect to=\"/teacher\"/>\r\n            case \"student\":\r\n                return <Redirect to=\"/student\"/>\r\n            default:\r\n                return <Redirect to=\"/admin\"/>\r\n        }\r\n\r\n    }\r\n\r\n    const onFinish = async (value: any) => {\r\n        try {\r\n            const username = value.username;\r\n            const password = value.password;\r\n            const type = value.type;\r\n            const response = await instance.post<LoginUser>('/login', {type, username, password})\r\n            dispatch(setUser(response.data))\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ParticlesBg type=\"cobweb\" bg={true} num={60}/>\r\n            <LoginForm onFinish={onFinish}>\r\n                <h2 style={{display: \"block\", fontSize: 30, textAlign: \"center\"}}>健康码管理系统</h2>\r\n                <Form.Item\r\n                    name=\"type\"\r\n                    style={{textAlign: \"center\"}}\r\n                    rules={[{required: true, message: '请选择用户类型'}]}>\r\n                    <Radio.Group style={{display: \"block\", width: \"100%\"}}>\r\n                        <Row>\r\n                            <Col span={8}><Radio value={\"student\"}>学生</Radio></Col>\r\n                            <Col span={8}><Radio value={\"teacher\"}>教师</Radio></Col>\r\n                            <Col span={8}><Radio value={\"admin\"}>管理员</Radio></Col>\r\n                        </Row>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: '请填写用户名'}]}>\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                           autoComplete={\"username\"}\r\n                           placeholder={\"用户名\"}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: '请填写密码'}]}>\r\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                           placeholder={\"密码\"}\r\n                           autoComplete={\"current-password\"}\r\n                           type=\"password\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" block>登录</Button>\r\n                </Form.Item>\r\n            </LoginForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import React, {CSSProperties, useEffect, useState} from \"react\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport {Major} from \"../../../entity/Major\";\r\nimport {College} from \"../../../entity/College\";\r\nimport {Cascader} from \"antd\";\r\nimport {CascaderOptionType, CascaderValueType} from \"antd/lib/cascader\";\r\n\r\ninterface ClassCascaderProps {\r\n    changeClass: (id: number | null) => void,\r\n    style?: CSSProperties;\r\n}\r\n\r\nconst ClassCascader: React.FC<ClassCascaderProps> = ({changeClass, style}) => {\r\n    const [options, setOptions] = useState<Array<CascaderOptionType>>([]);\r\n\r\n    useEffect(() => {\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then((resp) => setOptions(resp.data.map((college) => {\r\n                return {\r\n                    value: college.id,\r\n                    label: college.name,\r\n                    isLeaf: false,\r\n                    type: \"college\"\r\n                }\r\n            })))\r\n    }, [])\r\n\r\n    const loadData = async (selectedOptions?: CascaderOptionType[]) => {\r\n        if (!selectedOptions) {\r\n            return\r\n        }\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true;\r\n\r\n        try {\r\n            targetOption.id = targetOption.value\r\n            switch (targetOption.type) {\r\n                case \"college\": {\r\n                    const response = await instance.get<Major[]>(\"/admin/getMajorByCollegeId\",\r\n                        {\r\n                            params: {collegeId: targetOption.value}\r\n                        });\r\n                    targetOption.children = response.data.map(major => {\r\n                        return {\r\n                            value: major.id,\r\n                            label: major.name,\r\n                            isLeaf: false,\r\n                            type: \"major\"\r\n                        }\r\n                    })\r\n                }\r\n                    break\r\n                case \"major\": {\r\n                    const response = await instance.get<Major[]>(\"/admin/getAllClazzByMajor\",\r\n                        {\r\n                            params: {majorId: targetOption.value}\r\n                        });\r\n                    targetOption.children = response.data.map(major => {\r\n                        return {\r\n                            value: major.id,\r\n                            label: major.name,\r\n                            isLeaf: true,\r\n                            type: \"class\"\r\n                        }\r\n                    })\r\n                }\r\n                    break\r\n            }\r\n            setOptions([...options]);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            targetOption.loading = false;\r\n        }\r\n    };\r\n\r\n    const onChange = (value: CascaderValueType, selectedOptions?: CascaderOptionType[]) => {\r\n        if (value.length === 3 && selectedOptions != null) {\r\n            changeClass(selectedOptions[2].value as number)\r\n        } else {\r\n            changeClass(null)\r\n        }\r\n    }\r\n\r\n    return <Cascader\r\n        options={options}\r\n        loadData={loadData}\r\n        changeOnSelect\r\n        placeholder={\"请选择班级\"}\r\n        onChange={onChange}\r\n        style={style}/>\r\n}\r\n\r\nexport default ClassCascader;","import {message} from \"antd\";\r\nimport {InboxOutlined} from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport Dragger from \"antd/es/upload/Dragger\";\r\n\r\ninterface UploadFileProps {\r\n    onSuccess: () => void,\r\n    url: string\r\n}\r\n\r\nconst UploadFile: React.FC<UploadFileProps> = ({onSuccess, url}) => {\r\n    return (\r\n        <Dragger\r\n            name=\"file\"\r\n            fileList={[]}\r\n            action={url}\r\n            onChange={(info) => {\r\n                if (info.file.status === \"done\") {\r\n                    message.info(\"导入成功\")\r\n                    onSuccess()\r\n                }\r\n            }}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined/>\r\n            </p>\r\n            <p className=\"ant-upload-text\">从excel中导入</p>\r\n            <p className=\"ant-upload-hint\">点击或拖拽文件上传</p>\r\n        </Dragger>\r\n    )\r\n}\r\n\r\nexport default UploadFile;","import {Input, Modal, Tabs} from \"antd\";\r\nimport React, {useState} from \"react\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport ClassCascader from \"./ClassCascader\";\r\nimport UploadFile from \"../../../component/UploadFile\";\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void,\r\n    onSuccess: () => void\r\n}\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nconst InsertStudentModal: React.FC<ModalProps> = ({visible, setVisible, onSuccess}) => {\r\n    const [classId, setClassId] = useState<number | null>()\r\n    const [studentId, setStudentId] = useState<string>('')\r\n    const [name, setName] = useState<string>('')\r\n    const [idCard, setIdCard] = useState<string>('')\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/insertStudent\", {id: studentId, name: name, classId: classId, idCard: idCard})\r\n        setClassId(undefined)\r\n        setStudentId('')\r\n        setName('')\r\n        setIdCard('')\r\n        setVisible(false)\r\n        onSuccess()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新学生\"\r\n            onCancel={() => setVisible(false)}\r\n            visible={visible}\r\n            onOk={() => onSubmit()}>\r\n            <Tabs>\r\n                <TabPane tab=\"手动导入\" key=\"1\">\r\n                    <ClassCascader changeClass={value => setClassId(value)} style={{marginBottom: 15, width: \"100%\"}}/>\r\n                    <Input placeholder={\"学号\"}\r\n                           style={{marginBottom: 15}}\r\n                           onChange={(e) => setStudentId(e.target.value)}\r\n                           value={studentId}/>\r\n                    <Input placeholder={\"姓名\"}\r\n                           style={{marginBottom: 15}}\r\n                           onChange={(e) => setName(e.target.value)}\r\n                           value={name}/>\r\n                    <Input placeholder={\"身份证号\"}\r\n                           style={{marginBottom: 15}}\r\n                           onChange={(e) => setIdCard(e.target.value)}\r\n                           value={idCard}/>\r\n                </TabPane>\r\n                <TabPane tab=\"从 excel 中导入\" key=\"2\">\r\n                    <UploadFile url=\"/admin/addStudentFromExcel\"\r\n                                onSuccess={() => {\r\n                                    setVisible(false);\r\n                                    onSuccess()\r\n                                }}/>\r\n                </TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default InsertStudentModal","export enum HealthCodeType {\r\n    GREEN = \"GREEN\",\r\n    YELLOW = \"YELLOW\",\r\n    RED = \"RED\"\r\n}\r\n\r\nexport const healthCodeName = (type?: HealthCodeType): string => {\r\n    switch (type) {\r\n        case null:\r\n            return \"未填报\"\r\n        case HealthCodeType.GREEN:\r\n            return \"绿码\"\r\n        case HealthCodeType.RED:\r\n            return \"红码\"\r\n        case HealthCodeType.YELLOW:\r\n            return \"黄码\"\r\n        default:\r\n            return \"未填报\"\r\n    }\r\n}","import {StudentDailyCardVo} from \"../../../entity/StudentDailyCardVo\";\r\nimport {Button, Table} from \"antd\";\r\nimport React from \"react\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\nimport {healthCodeName, HealthCodeType} from \"../../../entity/HealthCodeType\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\n\r\ninterface StudentTableProps {\r\n    dataSource?: StudentDailyCardVo[],\r\n    onDelete: (id: string) => void,\r\n    clickUpdate: (id: string) => void\r\n}\r\n\r\nconst StudentTable: React.FC<StudentTableProps> = ({dataSource, onDelete, clickUpdate}) => {\r\n    const admin = useSelector((root: RootState) => root.login).user as Admin\r\n\r\n    const columns: ColumnsType<StudentDailyCardVo> = [\r\n        {title: '学号', dataIndex: 'studentId', key: 'studentId'},\r\n        {title: '姓名', dataIndex: 'name', key: 'name'},\r\n        {title: '学院', dataIndex: 'collegeName', key: 'collegeName'},\r\n        {title: '专业', dataIndex: 'majorName', key: 'majorName'},\r\n        {title: '班级', dataIndex: 'className', key: 'className'},\r\n        {\r\n            title: \"今日打卡情况\",\r\n            dataIndex: \"hadSubmitDailyCard\",\r\n            key: \"hadSubmitDailyCard\",\r\n            render: (submit: boolean) => submit ? \"已打卡\" : \"未打卡\",\r\n            filters: [{text: \"已打卡\", value: true}, {text: '未打卡', value: false}],\r\n            onFilter: (value: string | number | boolean, record: StudentDailyCardVo) => record.hadSubmitDailyCard === value,\r\n        },\r\n        {\r\n            title: '健康码',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (type?: HealthCodeType) => healthCodeName(type),\r\n            filters: [{text: '红码', value: '红码'},\r\n                {text: '绿码', value: '绿码'},\r\n                {text: '黄码', value: '黄码'}\r\n            ],\r\n            onFilter: (value: string | number | boolean, record: StudentDailyCardVo) => healthCodeName(record.type) === value,\r\n        }, {\r\n            title: \"操作\",\r\n            dataIndex: \"studentId\",\r\n            key: \"studentId\",\r\n            render: (id: string, student: StudentDailyCardVo) => <>\r\n                {\r\n                    admin.role === AdminRole.SYSTEM_ADMIN && <>\r\n                        <Button type=\"link\" onClick={() => clickUpdate(id)}>编辑</Button>\r\n                        <Button type=\"link\" onClick={() => onDelete(id)}>删除</Button>\r\n                    </>\r\n                }\r\n            </>\r\n        }];\r\n\r\n    return <Table loading={dataSource == null} columns={columns} rowKey={\"studentId\"} dataSource={dataSource}/>\r\n\r\n}\r\n\r\nexport default StudentTable;","import {PieConfig} from \"@ant-design/charts/es/pie\";\r\nimport {Pie} from \"@ant-design/charts\";\r\nimport React from \"react\";\r\nimport {StudentDailyCardStatistic} from \"../../../entity/StudentDailyCardStatistic\";\r\n\r\ninterface StudentPieChartProps {\r\n    data?: StudentDailyCardStatistic\r\n}\r\n\r\nconst StudentPieChart: React.FC<StudentPieChartProps> = ({data}) => {\r\n    if (data == null) {\r\n        return <></>\r\n    }\r\n\r\n    const testData: Record<string, any>[] = [\r\n        {type: '绿码', value: data?.greenCodeStudentCount},\r\n        {type: '黄码', value: data?.yellowCodeStudentCount},\r\n        {type: '红码', value: data?.redCodeStudentCount}\r\n    ];\r\n\r\n    const config: PieConfig = {\r\n        autoFit: false,\r\n        data: testData,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        width: 200,\r\n        height: 200,\r\n        color: ({type}) => {\r\n            switch (type) {\r\n                case \"绿码\":\r\n                    return \"green\";\r\n                case \"黄码\":\r\n                    return \"yellow\";\r\n                case \"红码\":\r\n                    return \"red\"\r\n                default:\r\n                    return \"grey\"\r\n            }\r\n        }\r\n    };\r\n    return <Pie style={{marginLeft: \"41%\", display: \"block\"}} {...config} />\r\n}\r\n\r\nexport default StudentPieChart;","import React, {useState} from \"react\";\r\nimport {Input, Modal} from \"antd\";\r\nimport ClassCascader from \"./ClassCascader\";\r\nimport instance from \"../../../axiosInstance\";\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void,\r\n    onSuccess: () => void,\r\n    updateStudentId?: string\r\n}\r\n\r\nconst UploadStudentModal: React.FC<ModalProps> = ({visible, setVisible, onSuccess, updateStudentId}) => {\r\n    const [classId, setClassId] = useState<number | null>()\r\n    const [name, setName] = useState<string>('')\r\n    const [idCard, setIdCard] = useState<string>('')\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/updateStudent\", {id: updateStudentId, classId, name, idCard})\r\n        setVisible(false)\r\n        onSuccess()\r\n    }\r\n\r\n    return (\r\n        <Modal visible={visible}\r\n               onCancel={() => setVisible(false)}\r\n               title=\"修改学生\"\r\n               onOk={() => onSubmit()}>\r\n            <ClassCascader changeClass={value => setClassId(value)} style={{marginBottom: 15, width: \"100%\"}}/>\r\n            <Input placeholder={\"学号\"}\r\n                   disabled={true}\r\n                   style={{marginBottom: 15}}\r\n                   value={updateStudentId}/>\r\n            <Input placeholder={\"姓名\"}\r\n                   style={{marginBottom: 15}}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n            <Input placeholder={\"身份证号\"}\r\n                   style={{marginBottom: 15}}\r\n                   onChange={(e) => setIdCard(e.target.value)}\r\n                   value={idCard}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default UploadStudentModal;","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Descriptions, PageHeader} from \"antd\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport {StudentDailyCardStatistic} from \"../../../entity/StudentDailyCardStatistic\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport InsertStudentModal from \"./InsertStudentModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\nimport StudentTable from \"./StudentTable\";\r\nimport StudentPieChart from \"./StudentPieChart\";\r\nimport {Clazz} from \"../../../entity/Clazz\";\r\nimport {Major} from \"../../../entity/Major\";\r\nimport {College} from \"../../../entity/College\";\r\nimport UploadStudentModal from \"./UpdateStudentModal\";\r\n\r\nconst StudentManagerPage = () => {\r\n    const [insertVisible, setInsertVisible] = useState(false)\r\n    const [uploadVisible, setUploadVisible] = useState(false)\r\n    const [needUpdateStudentId, setNeedUpdateStudentId] = useState<string>()\r\n    const [data, setData] = useState<StudentDailyCardStatistic>()\r\n    const {collegeId, majorId, classId} = useParams<{ collegeId?: string, majorId?: string, classId?: string }>()\r\n    const loginUser = useSelector((state: RootState) => state.login).user as Admin\r\n    const [clazz, setClazz] = useState<Clazz>()\r\n    const [major, setMajor] = useState<Major>()\r\n    const [college, setCollege] = useState<College>()\r\n\r\n    const loadStudent = (collegeId?: string, majorId?: string, classId?: string) => {\r\n        instance.get<StudentDailyCardStatistic>(\"/admin/getStudentStatistic\", {\r\n            params: {\r\n                collegeId, majorId, classId\r\n            }\r\n        }).then(response => setData(() => response.data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setClazz(undefined)\r\n        setMajor(undefined)\r\n        setCollege(undefined)\r\n        loadStudent(collegeId, majorId, classId)\r\n        if (classId != null) {\r\n            instance\r\n                .get<Clazz>(\"/admin/getClass\", {params: {id: classId}})\r\n                .then(response => setClazz(() => response.data))\r\n        } else if (majorId != null) {\r\n            instance\r\n                .get<Major>(\"/admin/getMajor\", {params: {id: majorId}})\r\n                .then(response => setMajor(() => response.data))\r\n        } else if (collegeId != null) {\r\n            instance\r\n                .get<College>(\"/admin/getCollege\", {params: {id: collegeId}})\r\n                .then(response => setCollege(() => response.data))\r\n        }\r\n    }, [collegeId, majorId, classId])\r\n\r\n\r\n    const deleteStudent = async (id: string) => {\r\n        await instance.post(\"/admin/deleteStudent\", {id: id})\r\n        await loadStudent();\r\n    }\r\n\r\n    const onClickStudent = (id: string) => {\r\n        setNeedUpdateStudentId(id)\r\n        setUploadVisible(true)\r\n    }\r\n\r\n    const getTitle = (): string => {\r\n        if (clazz != null) {\r\n            return `${clazz.name}`\r\n        } else if (major != null) {\r\n            return `${major.name}`\r\n        } else if (college != null) {\r\n            return `${college.name}`\r\n        }\r\n        return ''\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title={\"学生管理\"}\r\n                subTitle={getTitle()}\r\n                extra={[\r\n                    <Button\r\n                        key={3}\r\n                        onClick={() => setInsertVisible(true)}\r\n                        type={\"primary\"}\r\n                        hidden={loginUser.role !== AdminRole.SYSTEM_ADMIN}>添加新学生</Button>\r\n                ]}>\r\n                <Descriptions>\r\n                    {clazz && <>\r\n                        <Descriptions.Item label={\"班级名\"}> {clazz.name}</Descriptions.Item>\r\n                        <Descriptions.Item label={\"专业名\"}> {clazz.major.name}</Descriptions.Item>\r\n                        <Descriptions.Item label={\"学院名\"}> {clazz.major.college.name}</Descriptions.Item>\r\n                    </>}\r\n                    {major && <>\r\n                        <Descriptions.Item label={\"专业名\"}> {major.name}</Descriptions.Item>\r\n                        <Descriptions.Item label={\"学院名\"}> {major.college.name}</Descriptions.Item>\r\n                    </>}\r\n                    {college && <Descriptions.Item label={\"学院名\"}> {college.name}</Descriptions.Item>}\r\n                    <Descriptions.Item label=\"学生总数\">{data?.totalStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"绿码学生数量\">{data?.greenCodeStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"黄码学生数量\">{data?.yellowCodeStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"红码学生数量\">{data?.redCodeStudentCount}</Descriptions.Item>\r\n                </Descriptions>\r\n                <StudentPieChart data={data}/>\r\n            </PageHeader>\r\n            <UploadStudentModal\r\n                updateStudentId={needUpdateStudentId}\r\n                visible={uploadVisible}\r\n                setVisible={setUploadVisible}\r\n                onSuccess={() => loadStudent()}/>\r\n            <InsertStudentModal\r\n                visible={insertVisible}\r\n                setVisible={setInsertVisible}\r\n                onSuccess={() => loadStudent()}/>\r\n            <StudentTable\r\n                clickUpdate={(id) => onClickStudent(id)}\r\n                dataSource={data?.dailyCardList} onDelete={(id) => deleteStudent(id)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentManagerPage;","import {Select} from \"antd\";\r\nimport React, {CSSProperties, useEffect, useState} from \"react\";\r\nimport {College} from \"../../../entity/College\";\r\nimport instance from \"../../../axiosInstance\";\r\n\r\ninterface CollegeSelectProps {\r\n    onChange: (value: number) => void,\r\n    style?: CSSProperties;\r\n}\r\n\r\nconst {Option} = Select;\r\n\r\nconst CollegeSelect: React.FC<CollegeSelectProps> = ({onChange, style}) => {\r\n    const [collegeList, setCollegeList] = useState<College[]>([])\r\n\r\n    useEffect(() => {\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then(response => setCollegeList(response.data))\r\n    }, [])\r\n\r\n    return <Select placeholder={\"学院\"} style={style} onChange={(value) => onChange(value as number)}>\r\n        {\r\n            collegeList.map(college => <Option key={college.id} value={college.id}>{college.name}</Option>)\r\n        }\r\n    </Select>\r\n}\r\n\r\nexport default CollegeSelect;","import React, {useState} from \"react\";\r\nimport {Input, Modal, Tabs} from \"antd\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport UploadFile from \"../../../component/UploadFile\";\r\nimport CollegeSelect from \"./CollegeSelect\";\r\n\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void,\r\n    onSuccess: () => void\r\n}\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nconst InsertTeacherModal: React.FC<ModalProps> = ({visible, setVisible, onSuccess}) => {\r\n    const [collegeId, setCollegeId] = useState<number | null>(null)\r\n\r\n    const [teacherId, setTeacherId] = useState<string>()\r\n    const [name, setName] = useState<string>()\r\n    const [idCard, setIdCard] = useState<string>()\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/insertTeacher\", {\r\n            teacherId: teacherId,\r\n            name: name,\r\n            collegeId: collegeId,\r\n            idCard: idCard\r\n        })\r\n        setName('')\r\n        setIdCard('')\r\n        onSuccess()\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新教师\"\r\n            onCancel={() => setVisible(false)}\r\n            visible={visible}\r\n            onOk={onSubmit}>\r\n            <Tabs>\r\n                <TabPane tab=\"手动导入\" key=\"1\">\r\n                    <CollegeSelect onChange={setCollegeId} style={{marginBottom: 15, width: \"100%\"}}/>\r\n                    <Input placeholder={\"工号\"}\r\n                           style={{marginBottom: 15}}\r\n                           onChange={(e) => setTeacherId(e.target.value)}\r\n                           value={teacherId}/>\r\n                    <Input placeholder={\"姓名\"}\r\n                           style={{marginBottom: 15}}\r\n                           onChange={(e) => setName(e.target.value)}\r\n                           value={name}/>\r\n                    <Input placeholder={\"身份证号\"}\r\n                           style={{marginBottom: 15}}\r\n                           onChange={(e) => setIdCard(e.target.value)}\r\n                           value={idCard}/>\r\n                </TabPane>\r\n                <TabPane tab=\"从 excel 中导入\" key=\"2\">\r\n                    <UploadFile url=\"/admin/addTeacherFromExcel\" onSuccess={() => setVisible(false)}/>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default InsertTeacherModal","import React from \"react\";\r\nimport {Button, Table} from \"antd\";\r\nimport {TeacherDailyCardVo} from \"../../../entity/TeacherDailyCardVo\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\nimport {healthCodeName, HealthCodeType} from \"../../../entity/HealthCodeType\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\n\r\ninterface TeacherTableProps {\r\n    dailyCardList?: TeacherDailyCardVo[],\r\n    onDelete: (id: string) => void,\r\n    clickUpdate: (id: string) => void,\r\n}\r\n\r\nconst TeacherTable: React.FC<TeacherTableProps> = ({dailyCardList, onDelete, clickUpdate}) => {\r\n    const admin = useSelector((root: RootState) => root.login).user as Admin\r\n\r\n    const columns: ColumnsType<TeacherDailyCardVo> = [\r\n        {title: '工号', dataIndex: 'teacherId', key: 'teacherId'},\r\n        {title: '姓名', dataIndex: 'name', key: 'name'},\r\n        {title: '学院', dataIndex: 'collegeName', key: 'collegeName'},\r\n        {\r\n            title: \"今日打卡情况\",\r\n            dataIndex: \"hadSubmitDailyCard\",\r\n            key: \"hadSubmitDailyCard\",\r\n            render: (submit: boolean) => submit ? \"已打卡\" : \"未打卡\",\r\n            filters: [{text: \"已打卡\", value: true}, {text: '未打卡', value: false}],\r\n            onFilter: (value: string | number | boolean, record: TeacherDailyCardVo) => record.hadSubmitDailyCard === value,\r\n        }, {\r\n            title: '健康码',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (type?: HealthCodeType) => healthCodeName(type),\r\n            filters: [{text: '红码', value: '红码'},\r\n                {text: '绿码', value: '绿码'},\r\n                {text: '黄码', value: '黄码'},\r\n                {text: '未填报', value: '未填报'}\r\n            ],\r\n            onFilter: (value: string | number | boolean, record: TeacherDailyCardVo) => healthCodeName(record.type) === value,\r\n        }, {\r\n            title: \"操作\",\r\n            dataIndex: \"teacherId\",\r\n            key: \"teacherId\",\r\n            render: (id: string) => <>\r\n                {\r\n                    admin.role === AdminRole.SYSTEM_ADMIN && <>\r\n                        <Button type=\"link\" onClick={() => clickUpdate(id)}>编辑</Button>\r\n                        <Button type=\"link\" onClick={() => onDelete(id)}>删除</Button>\r\n                    </>\r\n                }\r\n            </>\r\n        }];\r\n\r\n    return <Table loading={dailyCardList == null} columns={columns} rowKey={\"teacherId\"} dataSource={dailyCardList}/>\r\n}\r\n\r\nexport default TeacherTable","import React from \"react\";\r\nimport {TeacherDailyCardStatistic} from \"../../../entity/TeacherDailyCardStatistic\";\r\nimport {Pie} from \"@ant-design/charts\";\r\nimport {PieConfig} from \"@ant-design/charts/es/pie\";\r\n\r\ninterface TeacherPieChartProps {\r\n    data?: TeacherDailyCardStatistic\r\n}\r\n\r\nconst TeacherPieChart: React.FC<TeacherPieChartProps> = ({data}) => {\r\n    if (data == null) {\r\n        return <></>\r\n    }\r\n\r\n    const config: PieConfig = {\r\n        autoFit: false,\r\n        data: [\r\n            {type: '绿码', value: data?.greenCodeTeacherCount},\r\n            {type: '黄码', value: data?.yellowCodeTeacherCount},\r\n            {type: '红码', value: data?.redCodeTeacherCount},\r\n        ],\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        width: 200,\r\n        height: 200,\r\n        color: ({type}) => {\r\n            switch (type) {\r\n                case \"绿码\":\r\n                    return \"green\";\r\n                case \"黄码\":\r\n                    return \"yellow\";\r\n                case \"红码\":\r\n                    return \"red\"\r\n                default:\r\n                    return \"grey\"\r\n            }\r\n        }\r\n    };\r\n\r\n    return <Pie style={{paddingLeft: \"41%\", display: \"block\"}} {...config} />\r\n}\r\n\r\nexport default TeacherPieChart;","import {Input, Modal} from \"antd\";\r\nimport CollegeSelect from \"./CollegeSelect\";\r\nimport React, {useState} from \"react\";\r\nimport instance from \"../../../axiosInstance\";\r\n\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void,\r\n    onSuccess: () => void,\r\n    teacherId?: string\r\n}\r\n\r\nconst UpdateTeacherModal: React.FC<ModalProps> = ({visible, setVisible, onSuccess, teacherId}) => {\r\n    const [collegeId, setCollegeId] = useState<number | null>(null)\r\n    const [name, setName] = useState<string>()\r\n    const [idCard, setIdCard] = useState<string>()\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/updateTeacher\", {id: teacherId, collegeId, name, idCard})\r\n        setVisible(false)\r\n        onSuccess()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新教师\"\r\n            onCancel={() => setVisible(false)}\r\n            visible={visible}\r\n            onOk={onSubmit}>\r\n            <CollegeSelect onChange={setCollegeId} style={{marginBottom: 15, width: \"100%\"}}/>\r\n            <Input placeholder={\"工号\"}\r\n                   style={{marginBottom: 15}}\r\n                   disabled={true}\r\n                   value={teacherId}/>\r\n            <Input placeholder={\"姓名\"}\r\n                   style={{marginBottom: 15}}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n            <Input placeholder={\"身份证号\"}\r\n                   style={{marginBottom: 15}}\r\n                   onChange={(e) => setIdCard(e.target.value)}\r\n                   value={idCard}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default UpdateTeacherModal;","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Descriptions, PageHeader} from \"antd\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport {TeacherDailyCardStatistic} from \"../../../entity/TeacherDailyCardStatistic\";\r\nimport InsertTeacherModal from \"./InsertTeacherModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\nimport TeacherTable from \"./TeacherTable\";\r\nimport TeacherPieChart from \"./TeacherPieChart\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {College} from \"../../../entity/College\";\r\nimport UpdateTeacherModal from \"./UpdateTeacherModal\";\r\n\r\nconst TeacherManagerPage = () => {\r\n    const [insertVisible, setInsertVisible] = useState(false)\r\n    const [updateVisible, setUpdateVisible] = useState(false)\r\n    const [updateTeacherId, setUpdateTeacherId] = useState<string>()\r\n    const loginUser = useSelector((state: RootState) => state.login).user as Admin\r\n    const {collegeId} = useParams<{ collegeId?: string }>()\r\n    const [data, setData] = useState<TeacherDailyCardStatistic>()\r\n    const [college, setCollege] = useState<College>()\r\n\r\n    const loadTeacher = async (collegeId?: string) => {\r\n        const response = await instance\r\n            .get<TeacherDailyCardStatistic>(\"/admin/getTeacherStatistic\", {params: {collegeId: collegeId}});\r\n        setData(() => response.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCollege(undefined)\r\n        loadTeacher(collegeId)\r\n        if (collegeId != null) {\r\n            instance\r\n                .get<College>(\"/admin/getCollege\", {params: {id: collegeId}})\r\n                .then(response => setCollege(response.data))\r\n        }\r\n    }, [collegeId])\r\n\r\n    const deleteTeacher = async (id: string) => {\r\n        await instance.post(\"/admin/deleteTeacher\", {id: id})\r\n        await loadTeacher()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"教师管理\"\r\n                subTitle={college?.name}\r\n                extra={\r\n                    loginUser.role === AdminRole.SYSTEM_ADMIN &&\r\n                    <Button onClick={() => setInsertVisible(true)} type={\"primary\"}>添加新教师</Button>\r\n                }>\r\n                <Descriptions>\r\n                    {college && <Descriptions.Item label={\"学院名\"}> {college.name}</Descriptions.Item>}\r\n                    <Descriptions.Item label=\"教师总数\">{data?.totalTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"绿码教师数量\">{data?.greenCodeTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"黄码教师数量\">{data?.yellowCodeTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"红码教师数量\">{data?.redCodeTeacherCount}</Descriptions.Item>\r\n                </Descriptions>\r\n                <TeacherPieChart data={data}/>\r\n            </PageHeader>\r\n            <UpdateTeacherModal\r\n                visible={updateVisible}\r\n                setVisible={setUpdateVisible}\r\n                onSuccess={() => loadTeacher()}\r\n                teacherId={updateTeacherId}\r\n            />\r\n            <InsertTeacherModal\r\n                visible={insertVisible}\r\n                setVisible={setInsertVisible}\r\n                onSuccess={() => loadTeacher()}/>\r\n            <TeacherTable\r\n                clickUpdate={(id) => {\r\n                    setUpdateTeacherId(id);\r\n                    setUpdateVisible(true);\r\n                }}\r\n                dailyCardList={data?.dailyCardList}\r\n                onDelete={(id) => deleteTeacher(id)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeacherManagerPage;","import React, {useState} from \"react\";\r\nimport {Input, Modal} from \"antd\";\r\nimport instance from \"../../../axiosInstance\";\r\n\r\ninterface AddCollegeModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void\r\n}\r\n\r\nconst AddCollegeModal: React.FC<AddCollegeModalProps> = ({visible, setVisible}) => {\r\n    const [name, setName] = useState('')\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/addCollege\", {name})\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新学院\"\r\n            onCancel={() => setVisible(false)}\r\n            onOk={onSubmit}\r\n            visible={visible}>\r\n            <Input placeholder={\"学院名\"}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddCollegeModal;","import {Button, PageHeader, Table} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {College} from \"../../../entity/College\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport AddCollegeModal from \"./AddCollegeModal\";\r\n\r\nconst CollegeManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login).user as Admin\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<College[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then((resp) => setData(resp.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    const columns = [\r\n        {title: '学院名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/college/${id}`}>查看所有专业</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${id}`}>查看该学院所有学生信息</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/teacher/${id}`}>查看该学院所有教师信息</Link>\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                ghost={false}\r\n                title=\"学院管理\"\r\n                extra={loginUser.role === AdminRole.SYSTEM_ADMIN &&\r\n                <Button type={\"primary\"} onClick={() => setVisible(true)}>添加新学院</Button>}>\r\n            </PageHeader>\r\n            <Table loading={loading} rowKey={\"name\"} columns={columns} dataSource={data}/>\r\n            <AddCollegeModal visible={visible} setVisible={setVisible}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollegeManagerPage","import React, {useState} from \"react\";\r\nimport {Input, Modal} from \"antd\";\r\nimport instance from \"../../../axiosInstance\";\r\n\r\ninterface AddMajorModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void,\r\n    majorId: number\r\n}\r\n\r\nconst AddMajorModal: React.FC<AddMajorModalProps> = ({visible, setVisible, majorId}) => {\r\n    const [name, setName] = useState('')\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/addClass\", {name, majorId})\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新班级\"\r\n            onCancel={() => setVisible(false)}\r\n            onOk={onSubmit}\r\n            visible={visible}>\r\n            <Input placeholder={\"班级名\"}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddMajorModal;","import React, {useEffect, useState} from \"react\";\r\nimport {Button, PageHeader, Table} from \"antd\";\r\nimport {Clazz} from \"../../../entity/Clazz\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport AddClassModal from \"./AddClassModal\";\r\n\r\nconst ClassManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login).user as Admin\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<Clazz[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const {collegeId, majorId} = useParams<{ collegeId: string, majorId: string }>()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<Clazz[]>(\"/admin/getAllClazzByMajor\", {params: {majorId: majorId}})\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [majorId])\r\n\r\n    const columns = [\r\n        {title: '班级名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${collegeId}/${majorId}/${id}`}>查看该班级所有学生信息</Link>\r\n        }\r\n    ]\r\n\r\n    return <div>\r\n        <PageHeader\r\n            onBack={() => window.history.back()}\r\n            ghost={false}\r\n            title=\"班级管理\"\r\n            extra={loginUser.role === AdminRole.SYSTEM_ADMIN &&\r\n            <Button type={\"primary\"} onClick={() => setVisible(true)}>添加新班级</Button>}>\r\n        </PageHeader>\r\n        <AddClassModal visible={visible} setVisible={setVisible} majorId={Number(majorId)}/>\r\n        <Table loading={loading} rowKey={\"name\"} columns={columns} dataSource={data}/>\r\n    </div>\r\n}\r\n\r\nexport default ClassManagerPage","import React, {useState} from \"react\";\r\nimport {Input, Modal} from \"antd\";\r\nimport instance from \"../../../axiosInstance\";\r\n\r\ninterface AddMajorModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void,\r\n    collegeId: number\r\n}\r\n\r\nconst AddMajorModal: React.FC<AddMajorModalProps> = ({visible, setVisible, collegeId}) => {\r\n    const [name, setName] = useState('')\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/addMajor\", {name, collegeId})\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新专业\"\r\n            onCancel={() => setVisible(false)}\r\n            onOk={onSubmit}\r\n            visible={visible}>\r\n            <Input placeholder={\"专业名\"}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddMajorModal;","import React, {useEffect, useState} from \"react\";\r\nimport {Button, PageHeader, Table} from \"antd\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Major} from \"../../../entity/Major\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport AddMajorModal from \"./AddMajorModal\";\r\n\r\nconst MajorManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login).user as Admin\r\n    const [loading, setLoading] = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n    const [data, setData] = useState<Major[]>([])\r\n    const {collegeId} = useParams<{ collegeId: string }>();\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<Major[]>(\"/admin/getMajorByCollegeId\", {params: {collegeId: collegeId}})\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [collegeId])\r\n\r\n    const columns = [\r\n        {title: '专业名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/college/${collegeId}/major/${id}`}>查看所有班级</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${collegeId}/${id}`}>查看该专业所有学生信息</Link>\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"专业管理\"\r\n                extra={loginUser.role === AdminRole.SYSTEM_ADMIN &&\r\n                <Button type={\"primary\"} onClick={() => setVisible(true)}>添加新专业</Button>}>\r\n            </PageHeader>\r\n            <AddMajorModal visible={visible} setVisible={setVisible} collegeId={Number(collegeId)}/>\r\n            <Table loading={loading} rowKey={\"name\"} columns={columns} dataSource={data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MajorManagerPage;\r\n\r\n","import {Layout, Menu} from \"antd\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {GoldOutlined, LogoutOutlined, TeamOutlined, UserOutlined, PartitionOutlined} from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {setUser} from \"../../reducer/login/actionCreate\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\nconst {Sider} = Layout;\r\nconst AdminSider = () => {\r\n\r\n    const admin = useSelector((state: RootState) => state.login).user as Admin\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const logout = async () => {\r\n        await instance.post(\"/logout\")\r\n        dispatch(setUser())\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <Sider collapsible className=\"site-layout-background\">\r\n        <div className=\"logo\"/>\r\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item disabled={true} key=\"0\">\r\n                {admin.role === AdminRole.SYSTEM_ADMIN && \"系统管理员\"}\r\n                {admin.role === AdminRole.SCHOOL_ADMIN && \"校级管理员\"}\r\n                {admin.role === AdminRole.COLLEGE_ADMIN && \"院级管理员\"}\r\n            </Menu.Item>\r\n            <Menu.Item key=\"1\"\r\n                       icon={<TeamOutlined/>}\r\n                       onClick={() => history.push(\"/admin/student\")}>\r\n                学生管理\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\"\r\n                       icon={<UserOutlined/>}\r\n                       onClick={() => history.push(\"/admin/teacher\")}>\r\n                教师管理\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\"\r\n                       icon={<GoldOutlined/>}\r\n                       onClick={() => history.push(\"/admin/college\")}>\r\n                学院管理\r\n            </Menu.Item>\r\n            {\r\n                admin.role === AdminRole.SYSTEM_ADMIN &&\r\n                <Menu.Item key=\"4\"\r\n                           icon={<PartitionOutlined/>}\r\n                           onClick={() => history.push(\"/admin/admin\")}>\r\n                    管理员管理\r\n                </Menu.Item>\r\n            }\r\n            <Menu.Item key=\"5\"\r\n                       icon={<LogoutOutlined/>}\r\n                       onClick={logout}>\r\n                登出\r\n            </Menu.Item>\r\n        </Menu>\r\n    </Sider>\r\n}\r\n\r\nexport default AdminSider;","import React, {useEffect, useState} from \"react\";\r\nimport {Input, Modal, Select} from \"antd\";\r\nimport {AdminRole} from \"../../../entity/Admin\";\r\nimport instance from \"../../../axiosInstance\";\r\nimport {College} from \"../../../entity/College\";\r\n\r\nconst {Option} = Select;\r\n\r\ninterface AddAdminModalProps {\r\n    visible: boolean,\r\n    setVisible: (value: boolean) => void\r\n}\r\n\r\nconst AddAdminModal: React.FC<AddAdminModalProps> = ({visible, setVisible}) => {\r\n    const [colleges, setColleges] = useState<College[]>([])\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [type, setType] = useState(AdminRole.SYSTEM_ADMIN)\r\n    const [collegeId, setCollegeId] = useState<number>()\r\n    const [hiddenCollege, setHiddenCollege] = useState(true)\r\n\r\n    useEffect(() => {\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then((resp) => setColleges(resp.data))\r\n    }, [])\r\n\r\n    const submit = async () => {\r\n        await instance.post(\"/admin/addAdmin\",{name, password, type, collegeId})\r\n        setVisible(false)\r\n    }\r\n\r\n    const onTypeChange = (type: AdminRole) => {\r\n        setType(type)\r\n        if (type === AdminRole.COLLEGE_ADMIN) {\r\n            setHiddenCollege(false)\r\n        } else {\r\n            setHiddenCollege(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title={\"添加管理员\"}\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={() => submit()}\r\n        >\r\n            <Input placeholder={\"管理员名称\"} value={name} onChange={e => setName(e.target.value)}/>\r\n            <Input type={\"password\"} placeholder={\"管理员密码\"} value={password}\r\n                   onChange={e => setPassword(e.target.value)}/>\r\n            <Select style={{display: \"block\"}} value={type}\r\n                    onChange={onTypeChange}>\r\n                <Select.Option value={AdminRole.SYSTEM_ADMIN}>系统管理员</Select.Option>\r\n                <Select.Option value={AdminRole.SCHOOL_ADMIN}>校级管理员</Select.Option>\r\n                <Select.Option value={AdminRole.COLLEGE_ADMIN}>院级管理员</Select.Option>\r\n            </Select>\r\n            {\r\n                !hiddenCollege && <Select style={{display: \"block\"}} value={collegeId} onChange={setCollegeId}>\r\n                    {\r\n                        colleges.map(college => <Option key={college.id} value={college.id}>{college.name}</Option>)\r\n                    }\r\n                </Select>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddAdminModal","import React, {useEffect, useState} from \"react\";\r\nimport {Admin, AdminRole} from \"../../../entity/Admin\";\r\nimport {Button, PageHeader, Table} from \"antd\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../store\";\r\nimport {College} from \"../../../entity/College\";\r\nimport AddAdminModal from \"./AddAdminModal\";\r\nimport instance from \"../../../axiosInstance\";\r\n\r\nconst AdminManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login).user as Admin\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const [admins, setAdmins] = useState<Admin[]>([])\r\n\r\n    useEffect(() => {\r\n        instance.get<Admin[]>(\"/admin/getAllAdmin\")\r\n            .then(response => setAdmins(response.data))\r\n    }, [])\r\n\r\n    const columns: ColumnsType<Admin> = [\r\n        {title: '名称', dataIndex: 'username', key: 'username'},\r\n        {\r\n            title: '身份', dataIndex: 'role', key: 'role',\r\n            render: (role: AdminRole) => {\r\n                switch (role) {\r\n                    case AdminRole.COLLEGE_ADMIN:\r\n                        return \"院级管理员\"\r\n                    case AdminRole.SCHOOL_ADMIN:\r\n                        return \"校级管理员\"\r\n                    case AdminRole.SYSTEM_ADMIN:\r\n                        return \"系统管理员\"\r\n                }\r\n            }\r\n        },\r\n        {title: '学院', dataIndex: 'college', key: 'college', render: (college?: College) => college?.name},\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                ghost={false}\r\n                title=\"管理员管理\"\r\n                extra={loginUser.role === AdminRole.SYSTEM_ADMIN &&\r\n                <Button type={\"primary\"} onClick={() => setVisible(true)}>添加新管理员</Button>}>\r\n            </PageHeader>\r\n            <AddAdminModal visible={visible} setVisible={setVisible}/>\r\n            <Table rowKey={\"username\"} dataSource={admins} columns={columns}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AdminManagerPage","import {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect, Route, Switch} from \"react-router\";\r\nimport {Layout} from 'antd';\r\nimport React from \"react\";\r\nimport StudentManagerPage from \"./student/StudentManagetPage\";\r\nimport TeacherManagerPage from \"./teacher/TeacherManagerPage\";\r\nimport CollegeManagerPage from \"./college/CollegeManagerPage\";\r\nimport ClassManagerPage from \"./class/ClassManagerPage\";\r\nimport MajorManagerPage from \"./major/MajorManagerPageProps\";\r\nimport AdminSider from \"./AdminSider\";\r\nimport AdminManagerPage from \"./admin/AdminManagerPage\";\r\n\r\nconst {Content} = Layout;\r\n\r\nconst AdminPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"teacher\") {\r\n        return <Redirect to={\"/teacher\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"student\") {\r\n        return <Redirect to={\"/student\"}/>\r\n    }\r\n\r\n    return (<div>\r\n        <Layout style={{minHeight: '100vh'}}>\r\n            <AdminSider/>\r\n            <Layout className=\"site-layout\">\r\n                <Content>\r\n                    <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                        <Switch>\r\n                            <Route path={\"/admin/admin\"} exact component={AdminManagerPage}/>\r\n                            <Route path={\"/admin/student\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId/:majorId\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId/:majorId/:classId\"} exact\r\n                                   component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/teacher\"} exact component={TeacherManagerPage}/>\r\n                            <Route path={\"/admin/teacher/:collegeId\"} exact component={TeacherManagerPage}/>\r\n                            <Route path={\"/admin/college\"} exact component={CollegeManagerPage}/>\r\n                            <Route path={\"/admin/college/:collegeId\"} exact component={MajorManagerPage}/>\r\n                            <Route path={\"/admin/college/:collegeId/major/:majorId\"} exact\r\n                                   component={ClassManagerPage}/>\r\n                        </Switch>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default AdminPage;","import styled from \"styled-components\";\r\nimport Text from \"antd/es/typography/Text\";\r\nimport {Button} from \"antd\";\r\n\r\nexport const TopWrapper = styled.div`\r\n  z-index: 1;\r\n  position: relative;\r\n  color: white;\r\n  background: white;\r\n  height: 56px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n`\r\n\r\nexport const LogoutWrapper = styled(Button)`\r\n  margin-top: 10px;\r\n  margin-right: 30%;\r\n  float: right;\r\n`\r\n\r\nexport const NameWrapper=styled(Text)`\r\n  margin-top: 15px;\r\n  margin-left: 30%;\r\n  float: left;\r\n`\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\nimport {Affix} from \"antd\";\r\nimport instance from \"../axiosInstance\";\r\nimport {setUser} from \"../reducer/login/actionCreate\";\r\nimport {LogoutWrapper, NameWrapper, TopWrapper} from \"./style\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Header = () => {\r\n    const loginUser = useSelector((root: RootState) => root.login)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const logout = async () => {\r\n        await instance.post(\"/logout\")\r\n        dispatch(setUser())\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <Affix>\r\n        <TopWrapper>\r\n            {\"name\" in loginUser.user && <NameWrapper>{loginUser.user.name}</NameWrapper>}\r\n            {\"username\" in loginUser.user && <NameWrapper>{loginUser.user.username}</NameWrapper>}\r\n            <LogoutWrapper onClick={logout} type={\"primary\"}>登出</LogoutWrapper>\r\n        </TopWrapper>\r\n    </Affix>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {Button, Checkbox, Col, Divider, Form, Input, Radio, Row} from \"antd\";\r\nimport {Teacher} from \"../entity/Teacher\";\r\nimport {Student} from \"../entity/Student\";\r\n\r\ninterface FormProps {\r\n    onFinish: (haveBeenToKeyEpidemicAreas: boolean,\r\n               haveBeenAbroad: boolean,\r\n               isTheExposed: boolean,\r\n               isSuspectedCase: boolean,\r\n               currentSymptoms: Array<string>) => void,\r\n    user: Teacher | Student,\r\n    isStudent: boolean\r\n}\r\n\r\nconst SubmitDailyCardForm: React.FC<FormProps> = ({onFinish, user, isStudent}) => {\r\n    const finish = (values: any) => {\r\n        const haveBeenToKeyEpidemicAreas = values.haveBeenToKeyEpidemicAreas\r\n        const haveBeenAbroad = values.haveBeenAbroad\r\n        const isTheExposed = values.isTheExposed\r\n        const isSuspectedCase = values.isSuspectedCase\r\n        const currentSymptoms = values.currentSymptoms\r\n        onFinish(haveBeenToKeyEpidemicAreas, haveBeenAbroad, isTheExposed, isSuspectedCase, currentSymptoms)\r\n    }\r\n\r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onFinish={finish} style={{marginTop: 30}}>\r\n                <Form.Item label={isStudent ? \"学号\" : \"工号\"} style={{display: \"block\"}}>\r\n                    <Input value={user.id} disabled/>\r\n                </Form.Item>\r\n                <Form.Item label=\"姓名\" style={{display: \"block\"}}>\r\n                    <Input value={user.name} disabled/>\r\n                </Form.Item>\r\n                <Form.Item label=\"身份证号\" style={{display: \"block\"}}>\r\n                    <Input value={user.idCard} disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    style={{display: \"block\"}}\r\n                    name=\"haveBeenToKeyEpidemicAreas\" label=\"近期（14天内）去过湖北省或重点疫区\"\r\n                    rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"haveBeenAbroad\"\r\n                           label=\"近期（14天内）去过国外\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"isTheExposed\"\r\n                           label=\"近期（14天内）接触过新冠确诊病人或疑似病人\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"isSuspectedCase\"\r\n                           label=\"被卫生部门确认为新冠肺炎确诊病例或疑似病例\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"currentSymptoms\"\r\n                           style={{display: \"block\"}}\r\n                           label=\"身体健康情况\">\r\n                    <Checkbox.Group>\r\n                        <Row>\r\n                            <Col span={8}><Checkbox value=\"发烧\">发烧（≥37.3℃）</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"乏力\">乏力</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"干咳\">干咳</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"鼻塞\">鼻塞</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"流涕\">流涕</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"咽痛\">咽痛</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"腹泻\">腹泻</Checkbox></Col>\r\n                        </Row>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item\r\n                    name={\"check\"}\r\n                    rules={[\r\n                        {required: true, message: '未勾选此项'},\r\n                        () => ({\r\n                            validator(_, value) {\r\n                                return value ? Promise.resolve() : Promise.reject('请勾选此项');\r\n                            },\r\n                        })]}>\r\n                    <Checkbox.Group>\r\n                        <Checkbox value=\"true\">本人郑重承诺：填报信息真实，愿意承担相应的法律责任。</Checkbox>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitDailyCardForm;","import React from \"react\";\r\nimport {Image} from \"antd\";\r\nimport {Student} from \"../entity/Student\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\nimport {Teacher} from \"../entity/Teacher\";\r\n\r\n\r\nconst QrcodeImage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const user = loginUser.user as Student | Teacher\r\n\r\n    return <div style={{display: \"block\", textAlign: \"center\"}}>\r\n        <h2>{user.name} 你好</h2>\r\n        <h2>请在接受检查时主动出示工大通行码</h2>\r\n        <h2>配合管理员的工作，做好自主防护工作</h2>\r\n        <h2>你的健康码状态将根据你的申报动态刷新</h2>\r\n        <Image\r\n            preview={false}\r\n            src={loginUser.type === \"student\" ? \"/student/qrcode\" : \"/teacher/qrcode\"}\r\n            alt={\"健康码\"}/>\r\n    </div>\r\n}\r\n\r\nexport default QrcodeImage;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport instance from \"../../axiosInstance\";\r\nimport Header from \"../../component/Header\";\r\nimport SubmitDailyCardForm from \"../../component/SubmitDailyCardForm\";\r\nimport {Skeleton} from \"antd\";\r\nimport {Student} from \"../../entity/Student\";\r\nimport QrcodeImage from \"../../component/QRCodeImage\";\r\n\r\nconst StudentPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n\r\n    const [isSubmitDailyCard, setSubmitDailyCard] = useState<Boolean>(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        instance\r\n            .get<Boolean>(\"/student/cardStatus\")\r\n            .then(response => setSubmitDailyCard(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"teacher\") {\r\n        return <Redirect to={\"/teacher\"}/>\r\n    }\r\n\r\n    if (loginUser.type !== \"student\") {\r\n        return <Redirect to={\"/admin\"}/>\r\n    }\r\n\r\n    const onFinish = async (haveBeenToKeyEpidemicAreas: boolean,\r\n                            haveBeenAbroad: boolean,\r\n                            isTheExposed: boolean,\r\n                            isSuspectedCase: boolean,\r\n                            currentSymptoms: Array<string>) => {\r\n\r\n        instance.post(\"/student/submit\", {\r\n            haveBeenToKeyEpidemicAreas,\r\n            haveBeenAbroad,\r\n            isTheExposed,\r\n            isSuspectedCase,\r\n            currentSymptoms\r\n        }).then(() => setSubmitDailyCard(true))\r\n    }\r\n\r\n    return <div>\r\n        <Header/>\r\n        <div style={{marginLeft: '30%', marginRight: \"30%\", marginTop: 30}}>\r\n            {isLoading && <Skeleton active={true}/>}\r\n            {!isLoading && isSubmitDailyCard && <QrcodeImage/>}\r\n            {!isLoading && !isSubmitDailyCard &&\r\n            <SubmitDailyCardForm onFinish={onFinish} isStudent={true} user={loginUser.user as Student}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default StudentPage;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport Header from \"../../component/Header\";\r\nimport instance from \"../../axiosInstance\";\r\nimport SubmitDailyCardForm from \"../../component/SubmitDailyCardForm\";\r\nimport {Skeleton} from \"antd\";\r\nimport {Teacher} from \"../../entity/Teacher\";\r\nimport QrcodeImage from \"../../component/QRCodeImage\";\r\n\r\n\r\nconst TeacherPage = () => {\r\n    const [isSubmitDailyCard, setSubmitDailyCard] = useState<Boolean>(false)\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        instance\r\n            .get<Boolean>(\"/teacher/cardStatus\")\r\n            .then(response => setSubmitDailyCard(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n    if (loginUser.type === \"student\") {\r\n        return <Redirect to={\"/student\"}/>\r\n    }\r\n    if (loginUser.type !== \"teacher\") {\r\n        return <Redirect to={\"/admin\"}/>\r\n    }\r\n\r\n    const onFinish = async (haveBeenToKeyEpidemicAreas: boolean,\r\n                            haveBeenAbroad: boolean,\r\n                            isTheExposed: boolean,\r\n                            isSuspectedCase: boolean,\r\n                            currentSymptoms: Array<string>) => {\r\n\r\n        instance.post(\"/teacher/submit\", {\r\n            haveBeenToKeyEpidemicAreas,\r\n            haveBeenAbroad,\r\n            isTheExposed,\r\n            isSuspectedCase,\r\n            currentSymptoms\r\n        }).then(() => setSubmitDailyCard(true))\r\n    }\r\n\r\n    return <div>\r\n        <Header/>\r\n        <div style={{marginLeft: '30%', marginRight: \"30%\", marginTop: 30}}>\r\n            {isLoading && <Skeleton active={true}/>}\r\n            {!isLoading && isSubmitDailyCard && <QrcodeImage/>}\r\n            {!isLoading && !isSubmitDailyCard &&\r\n            <SubmitDailyCardForm onFinish={onFinish} user={loginUser.user as Teacher} isStudent={false}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default TeacherPage","import React, {useEffect, useState} from 'react';\r\nimport LoginPage from \"./page/login/LoginPage\";\r\nimport {Route, Switch} from \"react-router\";\r\nimport AdminPage from \"./page/admin/AdminPage\";\r\nimport StudentPage from \"./page/student/StudentPage\";\r\nimport TeacherPage from \"./page/teacher/TeacherPage\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport instance from \"./axiosInstance\";\r\nimport {LoginUser} from \"./entity/LoginUser\";\r\nimport {setUser} from \"./reducer/login/actionCreate\";\r\nimport {Spin} from 'antd';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance\r\n            .get<LoginUser>(\"/checkLoginStatus\")\r\n            .then(response => dispatch(setUser(response.data)))\r\n            .finally(() => setLoading(false))\r\n    }, [dispatch])\r\n\r\n    return <>\r\n        {\r\n            loading && <div style={{width: \"100%\", height: \"100%\", textAlign: \"center\", marginTop: \"20%\"}}>\r\n                <Spin size={\"large\"}/>\r\n            </div>\r\n        }\r\n        {\r\n            !loading && <Switch>\r\n                <Route path=\"/\" exact component={LoginPage}/>\r\n                <Route path=\"/teacher\" component={TeacherPage}/>\r\n                <Route path=\"/admin\" component={AdminPage}/>\r\n                <Route path=\"/student\" component={StudentPage}/>\r\n            </Switch>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport loginReducer from './reducer/login/loginReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    login: loginReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof reducer>\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport store from \"./store\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport {ConfigProvider} from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConfigProvider locale={zhCN}>\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </ConfigProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}