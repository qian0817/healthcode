{"version":3,"sources":["axiosInstance.ts","reducer/login/loginReducer.ts","reducer/login/actionCreate.ts","page/login/style.ts","entity/HealthCodeType.ts","page/login/LoginPage.tsx","entity/Admin.ts","page/admin/InsertStudentModal.tsx","page/admin/StudentManagetPage.tsx","page/admin/InsertTeacherModal.tsx","page/admin/TeacherManagerPage.tsx","page/admin/CollegeManagerPage.tsx","page/admin/ClassManagerPage.tsx","page/admin/MajorManagerPageProps.tsx","page/admin/AdminPage.tsx","component/style.ts","component/Header.tsx","component/SubmitDailyCardForm.tsx","component/QRCodeImage.tsx","page/student/StudentPage.tsx","page/teacher/TeacherPage.tsx","App.tsx","reportWebVitals.ts","store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["instance","axios","create","headers","interceptors","request","use","config","data","qs","stringify","response","error","ex","message","warn","Promise","reject","SetLoginStatus","loginReducer","state","action","type","setUser","user","dispatch","HealthCodeType","LoginForm","styled","Form","LoginPage","loginUser","useSelector","login","useDispatch","to","onFinish","value","a","username","password","post","bg","num","style","display","fontSize","textAlign","Item","name","rules","required","Group","width","span","prefix","UserOutlined","className","autoComplete","placeholder","LockOutlined","htmlType","block","AdminRole","healthCodeName","GREEN","RED","YELLOW","InsertStudentModal","visible","setVisible","useState","options","setOptions","classId","setClassId","studentId","setStudentId","setName","idCard","setIdCard","onSubmit","id","useEffect","get","then","resp","map","college","label","isLeaf","loadData","selectedOptions","console","log","targetOption","length","loading","params","collegeId","children","major","majorId","title","onCancel","onOk","changeOnSelect","onChange","e","target","StudentManagerPage","setLoading","modalVisible","setModalVisible","setData","useParams","columns","dataIndex","key","render","filters","text","onFilter","record","finally","admin","onBack","window","history","back","ghost","extra","role","SYSTEM_ADMIN","onClick","totalStudentCount","greenCodeStudentCount","yellowCodeStudentCount","redCodeStudentCount","rowKey","dataSource","dailyCardList","Option","Select","InsertTeacherModal","collegeList","setCollegeList","setCollegeId","teacherId","setTeacherId","TeacherManagerPage","totalTeacherCount","greenCodeTeacherCount","yellowCodeTeacherCount","redCodeTeacherCount","CollegeManagerPage","ClassManagerPage","MajorManagerPage","Content","Layout","Sider","AdminPage","useHistory","logout","push","minHeight","collapsible","theme","defaultSelectedKeys","mode","icon","TeamOutlined","GoldOutlined","LogoutOutlined","padding","path","exact","component","TopWrapper","div","LogoutWrapper","Button","NameWrapper","Text","Header","root","SubmitDailyCardForm","isStudent","radioStyle","height","lineHeight","values","haveBeenToKeyEpidemicAreas","haveBeenAbroad","isTheExposed","isSuspectedCase","currentSymptoms","marginTop","disabled","validator","_","resolve","QrcodeImage","preview","src","alt","StudentPage","isSubmitDailyCard","setSubmitDailyCard","isLoading","marginLeft","marginRight","active","TeacherPage","App","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","locale","zhCN","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"sTAIMA,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,CAAC,eAAgB,uCAG9BH,EAASI,aAAaC,QAAQC,KAC1B,SAAAC,GAGI,OADAA,EAAOC,KAAOC,IAAGC,UAAUH,EAAOC,MAC3BD,KAGfP,EAASI,aAAaO,SAASL,KAAI,SAAAC,GAAM,OAAIA,KAAQ,SAAAK,GAC7C,IAAMC,EAAiBD,EAIvB,OAHmB,MAAfC,EAAGF,UACHG,IAAQC,KAAKF,EAAGF,SAASH,KAAKM,SAE3BE,QAAQC,OAAOL,MAKfZ,Q,QCtBFkB,EAAiB,mBAiBfC,EAXM,WAA0D,IAAzDC,EAAwD,uDAA9B,KAAMC,EAAwB,uCAC1E,OAAQA,EAAOC,MACX,KAAKJ,EAED,OADAE,EAAQC,EAAOb,KAEnB,QACI,OAAOY,ICTNG,EAAU,WAAmF,IAAlFC,EAAiF,uDAAxD,KAC7C,OAAO,SAACC,GACJA,EAAS,CACLH,KAAMJ,EACNV,KAAMgB,M,uOCPX,ICHKE,EDGCC,EAAYC,YAAOC,IAAPD,CAAH,KE4EPE,EAnEG,WACd,IAAMC,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SACpDR,EAAWS,cAEjB,GAAIH,EAAUE,MACV,OAAQF,EAAUT,MACd,IAAK,UACD,OAAO,cAAC,IAAD,CAAUa,GAAG,aACxB,IAAK,UACD,OAAO,cAAC,IAAD,CAAUA,GAAG,aACxB,QACI,OAAO,cAAC,IAAD,CAAUA,GAAG,WAKhC,IAAMC,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEAEHC,EAAWF,EAAME,SACjBC,EAAWH,EAAMG,SACjBlB,EAAOe,EAAMf,KAJV,SAKctB,EAASyC,KAAgB,SAAU,CAACnB,OAAMiB,WAAUC,aALlE,OAKH7B,EALG,OAMTc,EAASF,EAAQZ,EAASH,OANjB,4GAAH,sDAWd,OACI,gCACI,cAAC,IAAD,CAAac,KAAK,SAASoB,IAAI,EAAMC,IAAK,KAC1C,eAAChB,EAAD,CAAWS,SAAUA,EAArB,UACI,oBAAIQ,MAAO,CAACC,QAAS,QAASC,SAAU,GAAIC,UAAW,UAAvD,wDACA,cAAC,IAAKC,KAAN,CACIC,KAAK,OACLL,MAAO,CAACG,UAAW,UACnBG,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,+CAHtC,SAII,cAAC,IAAMsC,MAAP,CAAaR,MAAO,CAACC,QAAS,QAASQ,MAAO,QAA9C,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SAAc,cAAC,IAAD,CAAOjB,MAAO,UAAd,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,IAAD,CAAOjB,MAAO,UAAd,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,IAAD,CAAOjB,MAAO,QAAd,yCAI1B,cAAC,IAAKW,KAAN,CACIC,KAAK,WACLC,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,yCAFtC,SAGI,cAAC,IAAD,CAAOyC,OAAQ,cAACC,EAAA,EAAD,CAAcC,UAAU,wBAChCC,aAAc,WACdC,YAAa,yBAExB,cAAC,IAAKX,KAAN,CACIC,KAAK,WACLC,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAFtC,SAGI,cAAC,IAAD,CAAOyC,OAAQ,cAACK,EAAA,EAAD,CAAcH,UAAU,wBAChCE,YAAa,eACbD,aAAc,mBACdpC,KAAK,eAEhB,cAAC,IAAK0B,KAAN,UACI,cAAC,IAAD,CAAQ1B,KAAK,UAAUuC,SAAS,SAASC,OAAK,EAA9C,mC,8DDxERpC,K,cAAAA,E,gBAAAA,E,WAAAA,M,KAML,IEIKqC,EFJCC,EAAiB,SAAC1C,GAC3B,OAAQA,GACJ,KAAK,KACD,MAAO,qBACX,KAAKI,EAAeuC,MAChB,MAAO,eACX,KAAKvC,EAAewC,IAChB,MAAO,eACX,KAAKxC,EAAeyC,OAChB,MAAO,eACX,QACI,MAAO,uB,2BGyGJC,EA1GkC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAAgB,EAC1CC,mBAAwB,IADkB,mBACjEC,EADiE,KACxDC,EADwD,OAE1CF,mBAAwB,MAFkB,mBAEjEG,EAFiE,KAExDC,EAFwD,OAGtCJ,mBAAiB,IAHqB,mBAGjEK,EAHiE,KAGtDC,EAHsD,OAIhDN,mBAAiB,IAJ+B,mBAIjEtB,EAJiE,KAI3D6B,EAJ2D,OAK5CP,mBAAiB,IAL2B,mBAKjEQ,EALiE,KAKzDC,EALyD,KAOlEC,EAAQ,uCAAG,sBAAA3C,EAAA,sEACPtC,EAASyC,KAAK,uBAAwB,CAACyC,GAAIN,EAAW3B,KAAMA,EAAMyB,QAASA,EAASK,OAAQA,IADrF,OAEbT,GAAW,GAFE,2CAAH,qDAMda,qBAAU,WACNnF,EAASoF,IAAe,wBACnBC,MAAK,SAACC,GAAD,OAAUb,EAAWa,EAAK9E,KAAK+E,KAAI,SAACC,GACtC,MAAO,CACHnD,MAAOmD,EAAQN,GACfO,MAAOD,EAAQvC,KACfyC,QAAQ,EACRpE,KAAM,oBAGnB,IAEH,IAAMqE,EAAQ,uCAAG,WAAOC,GAAP,mBAAAtD,EAAA,yDACRsD,EADQ,iDAIbC,QAAQC,IAAIF,IACNG,EAAeH,EAAgBA,EAAgBI,OAAS,IACjDC,SAAU,EANV,SASTF,EAAab,GAAKa,EAAa1D,MATtB,KAUD0D,EAAazE,KAVZ,OAWA,YAXA,QA0BA,UA1BA,0CAYsBtB,EAASoF,IAAa,6BACzC,CACIc,OAAQ,CAACC,UAAWJ,EAAa1D,SAdxC,eAYK1B,EAZL,OAgBDoF,EAAaK,SAAWzF,EAASH,KAAK+E,KAAI,SAAAc,GACtC,MAAO,CACHhE,MAAOgE,EAAMnB,GACbO,MAAOY,EAAMpD,KACbyC,QAAQ,EACRpE,KAAM,YArBb,8CA2BsBtB,EAASoF,IAAa,4BACzC,CACIc,OAAQ,CAACI,QAASP,EAAa1D,SA7BtC,eA2BK1B,EA3BL,OA+BDoF,EAAaK,SAAWzF,EAASH,KAAK+E,KAAI,SAAAc,GACtC,MAAO,CACHhE,MAAOgE,EAAMnB,GACbO,MAAOY,EAAMpD,KACbyC,QAAQ,EACRpE,KAAM,YApCb,6BA0CTmD,EAAW,YAAID,IA1CN,2EA8CTuB,EAAaE,SAAU,EA9Cd,6EAAH,sDAkDd,OACI,eAAC,IAAD,CACIM,MAAM,iCACNC,SAAU,kBAAMlC,GAAW,IAC3BD,QAASA,EACToC,KAAMxB,EAJV,UAKI,cAAC,IAAD,CAAUT,QAASA,EACTmB,SAAUA,EACVe,gBAAc,EACd/C,YAAa,iCACbgD,SAAU,SAACtE,EAAOuD,GACO,IAAjBvD,EAAM2D,QAAmC,MAAnBJ,EACtBjB,EAAWiB,EAAgB,GAAGvD,OAE9BsC,EAAW,OAGnB/B,MAAO,CAACS,MAAO,UACzB,cAAC,IAAD,CAAOM,YAAa,eACbgD,SAAU,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOxE,QACvCA,MAAOuC,IACd,cAAC,IAAD,CAAOjB,YAAa,eACbgD,SAAU,SAACC,GAAD,OAAO9B,EAAQ8B,EAAEC,OAAOxE,QAClCA,MAAOY,IACd,cAAC,IAAD,CAAOU,YAAa,2BACbgD,SAAU,SAACC,GAAD,OAAO5B,EAAU4B,EAAEC,OAAOxE,QACpCA,MAAO0C,S,SD3GdhB,K,4BAAAA,E,4BAAAA,E,+BAAAA,M,KEGZ,IA8De+C,EA9DY,WAAO,IAAD,EACCvC,oBAAS,GADV,mBACtB0B,EADsB,KACbc,EADa,OAEWxC,oBAAS,GAFpB,mBAEtByC,EAFsB,KAERC,EAFQ,OAGL1C,qBAHK,mBAGtB/D,EAHsB,KAGhB0G,EAHgB,OAISC,cAA/BhB,EAJsB,EAItBA,UAAWG,EAJW,EAIXA,QAAS5B,EAJE,EAIFA,QACrB3C,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SAEpDmF,EAA2C,CAC7C,CAACb,MAAO,eAAMc,UAAW,YAAaC,IAAK,aAC3C,CAACf,MAAO,eAAMc,UAAW,OAAQC,IAAK,QACtC,CAACf,MAAO,eAAMc,UAAW,cAAeC,IAAK,eAC7C,CAACf,MAAO,eAAMc,UAAW,YAAaC,IAAK,aAC3C,CAACf,MAAO,eAAMc,UAAW,YAAaC,IAAK,aAC3C,CACIf,MAAO,qBACPc,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACjG,GAAD,OAA2B0C,EAAe1C,IAClDkG,QAAS,CAAC,CAACC,KAAM,eAAMpF,MAAO,gBAC1B,CAACoF,KAAM,eAAMpF,MAAO,gBACpB,CAACoF,KAAM,eAAMpF,MAAO,gBACpB,CAACoF,KAAM,qBAAOpF,MAAO,uBAEzBqF,SAAU,SAACrF,EAAkCsF,GAAnC,OAAkE3D,EAAe2D,EAAOrG,QAAUe,KAGpH8C,qBAAU,WACN4B,GAAW,GACX/G,EAASoF,IAA+B,6BAA8B,CAClEc,OAAQ,CACJC,YAAWG,UAAS5B,aAEzBW,MAAK,SAAA1E,GAAQ,OAAIuG,EAAQvG,EAASH,SAChCoH,SAAQ,kBAAMb,GAAW,QAC/B,CAACZ,EAAWG,EAAS5B,IAExB,IAAMmD,EAAQ9F,EAAUP,KAExB,OACI,gCACI,cAAC,IAAD,CACIsG,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACP3B,MAAM,2BACN4B,MACIN,EAAMO,OAASrE,EAAUsE,cACzB,cAAC,IAAD,CAAQC,QAAS,kBAAMrB,GAAgB,IAAO3F,KAAM,UAApD,4CANR,SAQI,eAAC,IAAD,WACI,cAAC,IAAa0B,KAAd,CAAmByC,MAAM,2BAAzB,gBAAiCjF,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM+H,oBACvC,cAAC,IAAavF,KAAd,CAAmByC,MAAM,uCAAzB,gBAAmCjF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMgI,wBACzC,cAAC,IAAaxF,KAAd,CAAmByC,MAAM,uCAAzB,gBAAmCjF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMiI,yBACzC,cAAC,IAAazF,KAAd,CAAmByC,MAAM,uCAAzB,gBAAmCjF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMkI,2BAIjD,cAAC,EAAD,CAAoBrE,QAAS2C,EAAc1C,WAAY2C,IACvD,cAAC,IAAD,CAAOhB,QAASA,EAASmB,QAASA,EAASuB,OAAQ,YAAaC,WAAU,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAAMqI,oB,SCjEvFC,EAAUC,IAAVD,OAuDQE,EA/CkC,SAAC,GAA2B,IAA1B3E,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAAgB,EAClCC,mBAAoB,IADc,mBACjE0E,EADiE,KACpDC,EADoD,OAEtC3E,mBAAwB,MAFc,mBAEjE4B,EAFiE,KAEtDgD,EAFsD,OAItC5E,qBAJsC,mBAIjE6E,EAJiE,KAItDC,EAJsD,OAKhD9E,qBALgD,mBAKjEtB,EALiE,KAK3D6B,EAL2D,OAM5CP,qBAN4C,mBAMjEQ,EANiE,KAMzDC,EANyD,KAQxEG,qBAAU,WACNnF,EAASoF,IAAe,wBACnBC,MAAK,SAAA1E,GAAQ,OAAIuI,EAAevI,EAASH,WAC/C,IAEH,IAAMyE,EAAQ,uCAAG,sBAAA3C,EAAA,sEACPtC,EAASyC,KAAK,uBAAwB,CACxC2G,UAAWA,EACXnG,KAAMA,EACNkD,UAAWA,EACXpB,OAAQA,IALC,OAObT,GAAW,GAPE,2CAAH,qDAUd,OACI,eAAC,IAAD,CACIiC,MAAM,iCACNC,SAAU,kBAAMlC,GAAW,IAC3BD,QAASA,EACToC,KAAMxB,EAJV,UAKI,cAAC,IAAD,CAAQtB,YAAa,eAAMf,MAAO,CAACS,MAAO,QAASsD,SAAU,SAACtE,GAAD,OAAW8G,EAAa9G,IAArF,SAEQ4G,EAAY1D,KAAI,SAAAC,GAAO,OAAI,cAACsD,EAAD,CAAyBzG,MAAOmD,EAAQN,GAAxC,SAA6CM,EAAQvC,MAAxCuC,EAAQN,SAGxD,cAAC,IAAD,CAAOvB,YAAa,eACbgD,SAAU,SAACC,GAAD,OAAOyC,EAAazC,EAAEC,OAAOxE,QACvCA,MAAO+G,IACd,cAAC,IAAD,CAAOzF,YAAa,eACbgD,SAAU,SAACC,GAAD,OAAO9B,EAAQ8B,EAAEC,OAAOxE,QAClCA,MAAOY,IACd,cAAC,IAAD,CAAOU,YAAa,2BACbgD,SAAU,SAACC,GAAD,OAAO5B,EAAU4B,EAAEC,OAAOxE,QACpCA,MAAO0C,QCYXuE,EAvDY,WAAO,IAAD,EACC/E,oBAAS,GADV,mBACtBF,EADsB,KACbC,EADa,KAEvBvC,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SAF7B,EAGCsC,oBAAS,GAHV,mBAGtB0B,EAHsB,KAGbc,EAHa,OAKLxC,qBALK,mBAKtB/D,EALsB,KAKhB0G,EALgB,KAMvBE,EAA2C,CAC7C,CAACb,MAAO,eAAMc,UAAW,YAAaC,IAAK,aAC3C,CAACf,MAAO,eAAMc,UAAW,OAAQC,IAAK,QACtC,CAACf,MAAO,eAAMc,UAAW,cAAeC,IAAK,eAC7C,CACIf,MAAO,qBACPc,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACjG,GAAD,OAA2B0C,EAAe1C,IAClDkG,QAAS,CAAC,CAACC,KAAM,eAAMpF,MAAO,gBAC1B,CAACoF,KAAM,eAAMpF,MAAO,gBACpB,CAACoF,KAAM,eAAMpF,MAAO,gBACpB,CAACoF,KAAM,qBAAOpF,MAAO,uBAEzBqF,SAAU,SAACrF,EAAkCsF,GAAnC,OAAkE3D,EAAe2D,EAAOrG,QAAUe,KAGpH8C,qBAAU,WACN4B,GAAW,GACX/G,EAASoF,IAA+B,8BACnCC,MAAK,SAAA1E,GAAQ,OAAIuG,EAAQvG,EAASH,SAClCoH,SAAQ,kBAAMb,GAAW,QAC/B,IAEH,IAAMc,EAAQ9F,EAAUP,KAExB,OACI,gCACI,cAAC,IAAD,CACIsG,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACP3B,MAAM,2BACN4B,MACIN,EAAMO,OAASrE,EAAUsE,cACzB,cAAC,IAAD,CAAQC,QAAS,kBAAMhE,GAAW,IAAOhD,KAAM,UAA/C,4CANR,SAQI,eAAC,IAAD,WACI,cAAC,IAAa0B,KAAd,CAAmByC,MAAM,2BAAzB,gBAAiCjF,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM+I,oBACvC,cAAC,IAAavG,KAAd,CAAmByC,MAAM,uCAAzB,gBAAmCjF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMgJ,wBACzC,cAAC,IAAaxG,KAAd,CAAmByC,MAAM,uCAAzB,gBAAmCjF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMiJ,yBACzC,cAAC,IAAazG,KAAd,CAAmByC,MAAM,uCAAzB,gBAAmCjF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMkJ,2BAGjD,cAAC,EAAD,CAAoBrF,QAASA,EAASC,WAAYA,IAClD,cAAC,IAAD,CAAO2B,QAASA,EAASmB,QAASA,EAASuB,OAAQ,YAAaC,WAAU,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAAMqI,oB,SCZ/Ec,GAzCY,WACvB,IAAM5H,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SAD7B,EAECsC,oBAAS,GAFV,mBAEtB0B,EAFsB,KAEbc,EAFa,OAGLxC,mBAAoB,IAHf,mBAGtB/D,EAHsB,KAGhB0G,EAHgB,KAK7B/B,qBAAU,WACN4B,GAAW,GACX/G,EAASoF,IAAe,wBACnBC,MAAK,SAACC,GAAD,OAAU4B,EAAQ5B,EAAK9E,SAC5BoH,SAAQ,kBAAMb,GAAW,QAC/B,IAEH,IAAMK,EAAU,CACZ,CAACb,MAAO,qBAAOc,UAAW,OAAQC,IAAK,QACvC,CACIf,MAAO,GAAIc,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAACrC,GAAD,OAAgB,cAAC,KAAD,CAAM/C,GAAE,yBAAoB+C,GAA5B,oDAE5B,CACIqB,MAAO,GAAIc,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAACrC,GAAD,OAAgB,cAAC,KAAD,CAAM/C,GAAE,yBAAoB+C,GAA5B,kFAE5B,CACIqB,MAAO,GAAIc,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAACrC,GAAD,OAAgB,cAAC,KAAD,CAAM/C,GAAE,yBAAoB+C,GAA5B,mFAI1B2C,EAAQ9F,EAAUP,KACxB,OACI,gCACI,cAAC,IAAD,CACI0G,OAAO,EACP3B,MAAM,2BACN4B,MAAON,EAAMO,OAASrE,EAAUsE,cAAgB,cAAC,IAAD,CAAQ/G,KAAM,UAAd,8CAEpD,cAAC,IAAD,CAAO2E,QAASA,EAAS0C,OAAQ,OAAQvB,QAASA,EAASwB,WAAYpI,Q,8BCJpEoJ,GAhCU,WACrB,IAAM7H,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SAD/B,EAEGsC,oBAAS,GAFZ,mBAEpB0B,EAFoB,KAEXc,EAFW,OAGHxC,mBAAkB,IAHf,mBAGpB/D,EAHoB,KAGd0G,EAHc,OAIEC,cAAtBhB,EAJoB,EAIpBA,UAAWG,EAJS,EAITA,QAElBnB,qBAAU,WACN4B,GAAW,GACX/G,EAASoF,IAAa,4BAA6B,CAACc,OAAQ,CAACI,QAASA,KACjEjB,MAAK,SAAA1E,GAAQ,OAAIuG,EAAQvG,EAASH,SAClCoH,SAAQ,kBAAMb,GAAW,QAC/B,CAACT,IACJ,IAAMc,EAAU,CACZ,CAACb,MAAO,qBAAOc,UAAW,OAAQC,IAAK,QACvC,CACIf,MAAO,GAAIc,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAACrC,GAAD,OAAgB,cAAC,KAAD,CAAM/C,GAAE,yBAAoBgE,EAApB,YAAiCG,EAAjC,YAA4CpB,GAApD,mFAG1B2C,EAAQ9F,EAAUP,KAExB,OAAO,gCACH,cAAC,IAAD,CACIsG,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACP3B,MAAM,2BACN4B,MAAON,EAAMO,OAASrE,EAAUsE,cAAgB,cAAC,IAAD,CAAQ/G,KAAM,UAAd,8CAEpD,cAAC,IAAD,CAAO2E,QAASA,EAASmB,QAASA,EAASwB,WAAYpI,QCWhDqJ,GAvCU,WACrB,IAAM9H,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SAD/B,EAEGsC,oBAAS,GAFZ,mBAEpB0B,EAFoB,KAEXc,EAFW,OAGHxC,mBAAkB,IAHf,mBAGpB/D,EAHoB,KAGd0G,EAHc,KAIpBf,EAAagB,cAAbhB,UAEPhB,qBAAU,WACN4B,GAAW,GACX/G,EAASoF,IAAa,6BAA8B,CAACc,OAAQ,CAACC,UAAWA,KACpEd,MAAK,SAAA1E,GAAQ,OAAIuG,EAAQvG,EAASH,SAClCoH,SAAQ,kBAAMb,GAAW,QAC/B,CAACZ,IAEJ,IAAMiB,EAAU,CACZ,CAACb,MAAO,qBAAOc,UAAW,OAAQC,IAAK,QACvC,CACIf,MAAO,GAAIc,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAACrC,GAAD,OAAgB,cAAC,KAAD,CAAM/C,GAAE,yBAAoBgE,EAApB,kBAAuCjB,GAA/C,oDAE5B,CACIqB,MAAO,GAAIc,UAAW,KAAMC,IAAK,KACjCC,OAAQ,SAACrC,GAAD,OAAgB,cAAC,KAAD,CAAM/C,GAAE,yBAAoBgE,EAApB,YAAiCjB,GAAzC,mFAI1B2C,EAAQ9F,EAAUP,KACxB,OACI,gCACI,cAAC,IAAD,CACIsG,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,OAAO,EACP3B,MAAM,2BACN4B,MAAON,EAAMO,OAASrE,EAAUsE,cAAgB,cAAC,IAAD,CAAQ/G,KAAM,UAAd,8CAEpD,cAAC,IAAD,CAAO2E,QAASA,EAASmB,QAASA,EAASwB,WAAYpI,QC7B5DsJ,GAAkBC,IAAlBD,QAASE,GAASD,IAATC,MA4EDC,GA1EG,WACd,IAAMlI,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SACpD+F,EAAUkC,cACVzI,EAAWS,cAEjB,IAAKH,EAAUE,MACX,OAAO,cAAC,IAAD,CAAUE,GAAI,MAGzB,GAAuB,YAAnBJ,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUa,GAAI,aAGzB,GAAuB,YAAnBJ,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUa,GAAI,aAGzB,IAAMgI,EAAM,uCAAG,sBAAA7H,EAAA,sEACLtC,EAASyC,KAAK,WADT,OAEXhB,EAASF,EAAQ,OACjByG,EAAQoC,KAAK,KAHF,2CAAH,qDAMZ,OAAQ,8BACJ,eAAC,IAAD,CAAQxH,MAAO,CAACyH,UAAW,SAA3B,UACI,eAACL,GAAD,CAAOM,aAAW,EAAC7G,UAAU,yBAA7B,UACI,qBAAKA,UAAU,SACf,eAAC,IAAD,CAAM8G,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,KAAK,SAApD,UACI,cAAC,IAAKzH,KAAN,CACW0H,KAAM,cAACC,GAAA,EAAD,IACNrC,QAAS,kBAAMN,EAAQoC,KAAK,mBAFvC,qCAAe,KAKf,cAAC,IAAKpH,KAAN,CACW0H,KAAM,cAAClH,EAAA,EAAD,IACN8E,QAAS,kBAAMN,EAAQoC,KAAK,mBAFvC,qCAAe,KAKf,cAAC,IAAKpH,KAAN,CACW0H,KAAM,cAACE,GAAA,EAAD,IACNtC,QAAS,kBAAMN,EAAQoC,KAAK,mBAFvC,qCAAe,KAKf,cAAC,IAAKpH,KAAN,CACW0H,KAAM,cAACG,GAAA,EAAD,IACNvC,QAAS6B,EAFpB,yBAAe,WAOvB,cAAC,IAAD,CAAQ1G,UAAU,cAAlB,SACI,cAACqG,GAAD,UACI,qBAAKrG,UAAU,yBAAyBb,MAAO,CAACkI,QAAS,GAAIT,UAAW,KAAxE,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOU,KAAM,iBAAkBC,OAAK,EAACC,UAAWnE,IAChD,cAAC,IAAD,CAAOiE,KAAM,4BAA6BC,OAAK,EAACC,UAAWnE,IAC3D,cAAC,IAAD,CAAOiE,KAAM,qCAAsCC,OAAK,EAACC,UAAWnE,IACpE,cAAC,IAAD,CAAOiE,KAAM,8CAA+CC,OAAK,EAC1DC,UAAWnE,IAClB,cAAC,IAAD,CAAOiE,KAAM,iBAAkBC,OAAK,EAACC,UAAW3B,IAChD,cAAC,IAAD,CAAOyB,KAAM,4BAA6BC,OAAK,EAACC,UAAW3B,IAC3D,cAAC,IAAD,CAAOyB,KAAM,iBAAkBC,OAAK,EAACC,UAAWtB,KAChD,cAAC,IAAD,CAAOoB,KAAM,4BAA6BC,OAAK,EAACC,UAAWpB,KAC3D,cAAC,IAAD,CAAOkB,KAAM,2CAA4CC,OAAK,EACvDC,UAAWrB,oB,weC5EvC,IAAMsB,GAAatJ,IAAOuJ,IAAV,MASVC,GAAgBxJ,YAAOyJ,IAAPzJ,CAAH,MAMb0J,GAAY1J,YAAO2J,KAAP3J,CAAD,MCUT4J,GApBA,WACX,IAAMzJ,EAAYC,aAAY,SAACyJ,GAAD,OAAqBA,EAAKxJ,SAClDR,EAAWS,cACX8F,EAAUkC,cAEVC,EAAM,uCAAG,sBAAA7H,EAAA,sEACLtC,EAASyC,KAAK,WADT,OAEXhB,EAASF,EAAQ,OACjByG,EAAQoC,KAAK,KAHF,2CAAH,qDAMZ,OAAO,cAAC,KAAD,UACH,eAACc,GAAD,WACK,SAAUnJ,EAAUP,MAAQ,cAAC8J,GAAD,UAAcvJ,EAAUP,KAAKyB,OACzD,aAAclB,EAAUP,MAAQ,cAAC8J,GAAD,UAAcvJ,EAAUP,KAAKe,WAC9D,cAAC6I,GAAD,CAAe9C,QAAS6B,EAAQ7I,KAAM,UAAtC,gC,oBCkGGoK,GA3GkC,SAAC,GAAiC,IAAhCtJ,EAA+B,EAA/BA,SAAUZ,EAAqB,EAArBA,KAAMmK,EAAe,EAAfA,UAUzDC,EAAa,CACf/I,QAAS,QACTgJ,OAAQ,OACRC,WAAY,QAGhB,OACI,8BACI,eAAC,IAAD,CAAM1J,SAjBC,SAAC2J,GACZ,IAAMC,EAA6BD,EAAOC,2BACpCC,EAAiBF,EAAOE,eACxBC,EAAeH,EAAOG,aACtBC,EAAkBJ,EAAOI,gBACzBC,EAAkBL,EAAOK,gBAC/BhK,EAAS4J,EAA4BC,EAAgBC,EAAcC,EAAiBC,IAWxDxJ,MAAO,CAACyJ,UAAW,IAA3C,UACI,cAAC,IAAKrJ,KAAN,CAAWyC,MAAOkG,EAAY,eAAO,eAAM/I,MAAO,CAACC,QAAS,SAA5D,SACI,cAAC,IAAD,CAAOR,MAAOb,EAAK0D,GAAIoH,UAAQ,MAEnC,cAAC,IAAKtJ,KAAN,CAAWyC,MAAM,eAAK7C,MAAO,CAACC,QAAS,SAAvC,SACI,cAAC,IAAD,CAAOR,MAAOb,EAAKyB,KAAMqJ,UAAQ,MAErC,cAAC,IAAKtJ,KAAN,CAAWyC,MAAM,2BAAO7C,MAAO,CAACC,QAAS,SAAzC,SACI,cAAC,IAAD,CAAOR,MAAOb,EAAKuD,OAAQuH,UAAQ,MAEvC,cAAC,IAAKtJ,KAAN,CACIJ,MAAO,CAACC,QAAS,SACjBI,KAAK,6BAA6BwC,MAAM,qGACxCvC,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAHtC,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOgJ,EAA3B,oBACA,cAAC,IAAD,CAAOvJ,MAAM,QAAQO,MAAOgJ,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAK5I,KAAN,CAAWC,KAAK,iBACLwC,MAAM,iEACN7C,MAAO,CAACC,QAAS,SACjBK,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAH7C,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOgJ,EAA3B,oBACA,cAAC,IAAD,CAAOvJ,MAAM,QAAQO,MAAOgJ,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAK5I,KAAN,CAAWC,KAAK,eACLwC,MAAM,6HACN7C,MAAO,CAACC,QAAS,SACjBK,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAH7C,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOgJ,EAA3B,oBACA,cAAC,IAAD,CAAOvJ,MAAM,QAAQO,MAAOgJ,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAK5I,KAAN,CAAWC,KAAK,kBACLwC,MAAM,iIACN7C,MAAO,CAACC,QAAS,SACjBK,MAAO,CAAC,CAACC,UAAU,EAAMrC,QAAS,mCAH7C,SAII,eAAC,IAAMsC,MAAP,WACI,cAAC,IAAD,CAAOf,MAAM,OAAOO,MAAOgJ,EAA3B,oBACA,cAAC,IAAD,CAAOvJ,MAAM,QAAQO,MAAOgJ,EAA5B,yBAGR,cAAC,KAAD,IACA,cAAC,IAAK5I,KAAN,CAAWC,KAAK,kBACLL,MAAO,CAACC,QAAS,SACjB4C,MAAM,uCAFjB,SAGI,cAAC,KAASrC,MAAV,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKE,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,wDACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,4BACd,cAAC,IAAD,CAAKiB,KAAM,EAAX,SAAc,cAAC,KAAD,CAAUjB,MAAM,eAAhB,mCAI1B,cAAC,KAAD,IACA,cAAC,IAAKW,KAAN,CACIC,KAAM,QACNC,MAAO,CACH,CAACC,UAAU,EAAMrC,QAAS,kCAC1B,iBAAO,CACHyL,UADG,SACOC,EAAGnK,GACT,OAAOA,EAAQrB,QAAQyL,UAAYzL,QAAQC,OAAO,sCANlE,SASI,cAAC,KAASmC,MAAV,UACI,cAAC,KAAD,CAAUf,MAAM,OAAhB,8KAGR,cAAC,IAAKW,KAAN,UACI,cAAC,IAAD,CAAQ1B,KAAK,UAAUuC,SAAS,SAAhC,kC,oBCzFL6I,GAhBK,WAChB,IAAM3K,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SACpDT,EAAOO,EAAUP,KAEvB,OAAO,sBAAKoB,MAAO,CAACC,QAAS,QAASE,UAAW,UAA1C,UACH,+BAAKvB,EAAKyB,KAAV,mBACA,kIACA,wIACA,8IACA,cAAC,KAAD,CACI0J,SAAS,EACTC,IAAwB,YAAnB7K,EAAUT,KAAqB,kBAAoB,kBACxDuL,IAAK,2BC0CFC,GAnDK,WAChB,IAAM/K,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SADpC,EAG0BsC,oBAAkB,GAH5C,mBAGfwI,EAHe,KAGIC,EAHJ,OAIUzI,oBAAS,GAJnB,mBAIf0I,EAJe,KAIJlG,EAJI,KAatB,GAPA5B,qBAAU,WACNnF,EACKoF,IAAa,uBACbC,MAAK,SAAA1E,GAAQ,OAAIqM,EAAmBrM,EAASH,SAC7CoH,SAAQ,kBAAMb,GAAW,QAC/B,KAEEhF,EAAUE,MACX,OAAO,cAAC,IAAD,CAAUE,GAAI,MAGzB,GAAuB,YAAnBJ,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUa,GAAI,aAGzB,GAAuB,YAAnBJ,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUa,GAAI,WAGzB,IAAMC,EAAQ,uCAAG,WAAO4J,EACAC,EACAC,EACAC,EACAC,GAJP,SAAA9J,EAAA,sDAMbtC,EAASyC,KAAK,kBAAmB,CAC7BuJ,6BACAC,iBACAC,eACAC,kBACAC,oBACD/G,MAAK,kBAAM2H,GAAmB,MAZpB,2CAAH,8DAed,OAAO,gCACH,cAAC,GAAD,IACA,sBAAKpK,MAAO,CAACsK,WAAY,MAAOC,YAAa,MAAOd,UAAW,IAA/D,UACKY,GAAa,cAAC,KAAD,CAAUG,QAAQ,KAC9BH,GAAaF,GAAqB,cAAC,GAAD,KAClCE,IAAcF,GAChB,cAAC,GAAD,CAAqB3K,SAAUA,EAAUuJ,WAAW,EAAMnK,KAAMO,EAAUP,cCGvE6L,GAhDK,WAAO,IAAD,EAC0B9I,oBAAkB,GAD5C,mBACfwI,EADe,KACIC,EADJ,KAEhBjL,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SAFpC,EAGUsC,oBAAS,GAHnB,mBAGf0I,EAHe,KAGJlG,EAHI,KAYtB,GAPA5B,qBAAU,WACNnF,EACKoF,IAAa,uBACbC,MAAK,SAAA1E,GAAQ,OAAIqM,EAAmBrM,EAASH,SAC7CoH,SAAQ,kBAAMb,GAAW,QAC/B,KAEEhF,EAAUE,MACX,OAAO,cAAC,IAAD,CAAUE,GAAI,MAEzB,GAAuB,YAAnBJ,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUa,GAAI,aAEzB,GAAuB,YAAnBJ,EAAUT,KACV,OAAO,cAAC,IAAD,CAAUa,GAAI,WAGzB,IAAMC,EAAQ,uCAAG,WAAO4J,EACAC,EACAC,EACAC,EACAC,GAJP,SAAA9J,EAAA,sDAMbtC,EAASyC,KAAK,kBAAmB,CAC7BuJ,6BACAC,iBACAC,eACAC,kBACAC,oBACD/G,MAAK,kBAAM2H,GAAmB,MAZpB,2CAAH,8DAed,OAAO,gCACH,cAAC,GAAD,IACA,sBAAKpK,MAAO,CAACsK,WAAY,MAAOC,YAAa,MAAOd,UAAW,IAA/D,UACKY,GAAa,cAAC,KAAD,CAAUG,QAAQ,KAC9BH,GAAaF,GAAqB,cAAC,GAAD,KAClCE,IAAcF,GAChB,cAAC,GAAD,CAAqB3K,SAAUA,EAAUZ,KAAMO,EAAUP,KAAiBmK,WAAW,W,UCpBlF2B,OAtBf,WACI,IAAM7L,EAAWS,cACXH,EAAYC,aAAY,SAACZ,GAAD,OAAsBA,EAAMa,SAM1D,OALAkD,qBAAU,WACNnF,EACKoF,IAAe,qBACfC,MAAK,SAAA1E,GAAQ,OAAIc,EAASF,EAAQZ,EAASH,YACjD,CAACiB,IACG,sCAEDM,GAAa,qBAAKa,MAAO,CAACS,MAAO,OAAQwI,OAAQ,OAAQ9I,UAAW,SAAUsJ,UAAW,OAA5E,SACX,cAAC,KAAD,CAAMkB,KAAM,YAEfxL,GAAa,eAAC,IAAD,WACV,cAAC,IAAD,CAAOgJ,KAAK,IAAIC,OAAK,EAACC,UAAWnJ,IACjC,cAAC,IAAD,CAAOiJ,KAAK,WAAWE,UAAWoC,KAClC,cAAC,IAAD,CAAOtC,KAAK,SAASE,UAAWhB,KAChC,cAAC,IAAD,CAAOc,KAAK,WAAWE,UAAW6B,YChB/BU,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrI,MAAK,YAAkD,IAA/CsI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6BCHRO,GAAUC,2BAAgB,CAC5BhM,MAAOd,IAMI+M,GAFDC,uBAAYH,GAASI,+BAAoBC,2BAAgBC,QCCjEC,GAAcC,QACW,cAA7BzG,OAAO0G,SAASC,UAEe,UAA7B3G,OAAO0G,SAASC,UAEhB3G,OAAO0G,SAASC,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAetO,GACtCuO,UAAUC,cACPC,SAASH,GACTxJ,MAAK,SAAC4J,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/N,QACf0N,UAAUC,cAAcO,YAI1BzJ,QAAQC,IACN,+GAKEvF,GAAUA,EAAOgP,UACnBhP,EAAOgP,SAASN,KAMlBpJ,QAAQC,IAAI,sCAGRvF,GAAUA,EAAOiP,WACnBjP,EAAOiP,UAAUP,WAO5BQ,OAAM,SAAC7O,GACNiF,QAAQjF,MAAM,4CAA6CA,M,kCCvFjE8O,IAASnI,OACL,cAAC,IAAD,CAAU2G,MAAOA,GAAjB,SACI,cAAC,KAAD,CAAgByB,OAAQC,KAAxB,SACI,cAAC,KAAD,UACI,cAAC,GAAD,UAIZC,SAASC,eAAe,SDKrB,SAAkBvP,GACvB,GAA6C,kBAAmBuO,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,GAAwBjI,OAAO0G,SAASwB,MACpDC,SAAWnI,OAAO0G,SAASyB,OAIvC,OAGFnI,OAAOoI,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMmB,GAAN,sBAEPzB,KAgEV,SAAiCM,EAAetO,GAE9C6P,MAAMvB,EAAO,CACX1O,QAAS,CAAE,iBAAkB,YAE5BkF,MAAK,SAAC1E,GAEL,IAAM0P,EAAc1P,EAASR,QAAQiF,IAAI,gBAEnB,MAApBzE,EAAS2P,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMnL,MAAK,SAAC4J,GAClCA,EAAawB,aAAapL,MAAK,WAC7B0C,OAAO0G,SAASiC,eAKpB9B,GAAgBC,EAAOtO,MAG1BkP,OAAM,WACL5J,QAAQC,IAAI,oEAtFV6K,CAAwB9B,EAAOtO,GAI/BuO,UAAUC,cAAcyB,MAAMnL,MAAK,WACjCQ,QAAQC,IACN,+GAMJ8I,GAAgBC,EAAOtO,OC3B/BqQ,GAKApD,O","file":"static/js/main.c0b29885.chunk.js","sourcesContent":["import axios, {AxiosError} from 'axios'\r\nimport {message} from \"antd\";\r\nimport qs from 'qs';\r\n\r\nconst instance = axios.create({\r\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n})\r\n\r\ninstance.interceptors.request.use(\r\n    config => {\r\n        // 转为formdata数据格式\r\n        config.data = qs.stringify(config.data)\r\n        return config\r\n    }\r\n)\r\ninstance.interceptors.response.use(config => config, error => {\r\n        const ex: AxiosError = error;\r\n        if (ex.response != null) {\r\n            message.warn(ex.response.data.message)\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n;\r\n\r\nexport default instance;","import {Action} from \"redux\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\n\r\nexport const SetLoginStatus = \"set_login_status\"\r\n\r\ninterface LoginAction extends Action {\r\n    data: LoginUser | null\r\n}\r\n\r\nconst loginReducer = (state: LoginUser | null = null, action: LoginAction) => {\r\n    switch (action.type) {\r\n        case SetLoginStatus:\r\n            state = action.data\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default loginReducer","import {ThunkAction} from \"redux-thunk\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {SetLoginStatus} from \"./loginReducer\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\n\r\nexport const setUser = (user: LoginUser | null = null): ThunkAction<void, RootState, unknown, Action> => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch({\r\n            type: SetLoginStatus,\r\n            data: user\r\n        })\r\n    }\r\n}","import styled from \"styled-components\";\r\nimport {Form} from \"antd\";\r\n\r\nexport const LoginForm = styled(Form)`\r\n  margin: auto;\r\n  height: 300px;\r\n  width: 500px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`","export enum HealthCodeType {\r\n    GREEN = \"GREEN\",\r\n    YELLOW = \"YELLOW\",\r\n    RED = \"RED\"\r\n}\r\n\r\nexport const healthCodeName = (type?: HealthCodeType): string => {\r\n    switch (type) {\r\n        case null:\r\n            return \"未填报\"\r\n        case HealthCodeType.GREEN:\r\n            return \"绿码\"\r\n        case HealthCodeType.RED:\r\n            return \"红码\"\r\n        case HealthCodeType.YELLOW:\r\n            return \"黄码\"\r\n        default:\r\n            return \"未填报\"\r\n    }\r\n}","import {Button, Col, Form, Input, Radio, Row} from \"antd\";\r\nimport React from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUser} from \"../../reducer/login/actionCreate\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport ParticlesBg from 'particles-bg'\r\nimport {LoginForm} from \"./style\";\r\n\r\nconst LoginPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const dispatch = useDispatch()\r\n\r\n    if (loginUser.login) {\r\n        switch (loginUser.type) {\r\n            case \"teacher\":\r\n                return <Redirect to=\"/teacher\"/>\r\n            case \"student\":\r\n                return <Redirect to=\"/student\"/>\r\n            default:\r\n                return <Redirect to=\"/admin\"/>\r\n        }\r\n\r\n    }\r\n\r\n    const onFinish = async (value: any) => {\r\n        try {\r\n            const username = value.username;\r\n            const password = value.password;\r\n            const type = value.type;\r\n            const response = await instance.post<LoginUser>('/login', {type, username, password})\r\n            dispatch(setUser(response.data))\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ParticlesBg type=\"cobweb\" bg={true} num={60}/>\r\n            <LoginForm onFinish={onFinish}>\r\n                <h2 style={{display: \"block\", fontSize: 30, textAlign: \"center\"}}>健康码管理系统</h2>\r\n                <Form.Item\r\n                    name=\"type\"\r\n                    style={{textAlign: \"center\"}}\r\n                    rules={[{required: true, message: '请选择用户类型'}]}>\r\n                    <Radio.Group style={{display: \"block\", width: \"100%\"}}>\r\n                        <Row>\r\n                            <Col span={8}><Radio value={\"student\"}>学生</Radio></Col>\r\n                            <Col span={8}><Radio value={\"teacher\"}>教师</Radio></Col>\r\n                            <Col span={8}><Radio value={\"admin\"}>管理员</Radio></Col>\r\n                        </Row>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: '请填写用户名'}]}>\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                           autoComplete={\"username\"}\r\n                           placeholder={\"用户名\"}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: '请填写密码'}]}>\r\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                           placeholder={\"密码\"}\r\n                           autoComplete={\"current-password\"}\r\n                           type=\"password\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" block>登录</Button>\r\n                </Form.Item>\r\n            </LoginForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import {College} from \"./College\";\r\n\r\nexport interface Admin {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    role: AdminRole;\r\n    college: College;\r\n}\r\n\r\nexport enum AdminRole {\r\n    SYSTEM_ADMIN = \"SYSTEM_ADMIN\",\r\n    /**\r\n     * 校级管理员\r\n     */\r\n    SCHOOL_ADMIN = \"SCHOOL_ADMIN\",\r\n    /**\r\n     * 院级管理员\r\n     */\r\n    COLLEGE_ADMIN = \"COLLEGE_ADMIN\"\r\n}","import {Cascader, Input, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {CascaderOptionType} from \"antd/lib/cascader\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Major} from \"../../entity/Major\";\r\nimport {College} from \"../../entity/College\";\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void\r\n}\r\n\r\ninterface Option extends CascaderOptionType {\r\n    type?: \"college\" | \"major\" | \"class\"\r\n}\r\n\r\nconst InsertStudentModal: React.FC<ModalProps> = ({visible, setVisible}) => {\r\n    const [options, setOptions] = useState<Array<Option>>([]);\r\n    const [classId, setClassId] = useState<number | null>(null)\r\n    const [studentId, setStudentId] = useState<string>('')\r\n    const [name, setName] = useState<string>('')\r\n    const [idCard, setIdCard] = useState<string>('')\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/insertStudent\", {id: studentId, name: name, classId: classId, idCard: idCard})\r\n        setVisible(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then((resp) => setOptions(resp.data.map((college) => {\r\n                return {\r\n                    value: college.id,\r\n                    label: college.name,\r\n                    isLeaf: false,\r\n                    type: \"college\"\r\n                }\r\n            })))\r\n    }, [])\r\n\r\n    const loadData = async (selectedOptions?: Option[]) => {\r\n        if (!selectedOptions) {\r\n            return\r\n        }\r\n        console.log(selectedOptions)\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true;\r\n\r\n        try {\r\n            targetOption.id = targetOption.value\r\n            switch (targetOption.type) {\r\n                case \"college\": {\r\n                    const response = await instance.get<Major[]>(\"/admin/getMajorByCollegeId\",\r\n                        {\r\n                            params: {collegeId: targetOption.value}\r\n                        });\r\n                    targetOption.children = response.data.map(major => {\r\n                        return {\r\n                            value: major.id,\r\n                            label: major.name,\r\n                            isLeaf: false,\r\n                            type: \"major\"\r\n                        }\r\n                    })\r\n                }\r\n                    break\r\n                case \"major\": {\r\n                    const response = await instance.get<Major[]>(\"/admin/getAllClazzByMajor\",\r\n                        {\r\n                            params: {majorId: targetOption.value}\r\n                        });\r\n                    targetOption.children = response.data.map(major => {\r\n                        return {\r\n                            value: major.id,\r\n                            label: major.name,\r\n                            isLeaf: true,\r\n                            type: \"class\"\r\n                        }\r\n                    })\r\n                }\r\n                    break\r\n            }\r\n            setOptions([...options]);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            targetOption.loading = false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新学生\"\r\n            onCancel={() => setVisible(false)}\r\n            visible={visible}\r\n            onOk={onSubmit}>\r\n            <Cascader options={options}\r\n                      loadData={loadData}\r\n                      changeOnSelect\r\n                      placeholder={\"请选择班级\"}\r\n                      onChange={(value, selectedOptions) => {\r\n                          if (value.length === 3 && selectedOptions != null) {\r\n                              setClassId(selectedOptions[2].value as number)\r\n                          } else {\r\n                              setClassId(null)\r\n                          }\r\n                      }}\r\n                      style={{width: '100%'}}/>\r\n            <Input placeholder={\"学号\"}\r\n                   onChange={(e) => setStudentId(e.target.value)}\r\n                   value={studentId}/>\r\n            <Input placeholder={\"姓名\"}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n            <Input placeholder={\"身份证号\"}\r\n                   onChange={(e) => setIdCard(e.target.value)}\r\n                   value={idCard}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default InsertStudentModal","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Descriptions, PageHeader, Table} from \"antd\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {StudentDailyCardStatistic} from \"../../entity/StudentDailyCardStatistic\";\r\nimport {healthCodeName, HealthCodeType} from \"../../entity/HealthCodeType\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport InsertStudentModal from \"./InsertStudentModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {StudentDailyCardVo} from \"../../entity/StudentDailyCardVo\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\n\r\nconst StudentManagerPage = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [data, setData] = useState<StudentDailyCardStatistic>()\r\n    const {collegeId, majorId, classId} = useParams<{ collegeId: string, majorId: string, classId: string }>()\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n\r\n    const columns: ColumnsType<StudentDailyCardVo> = [\r\n        {title: '学号', dataIndex: 'studentId', key: 'studentId'},\r\n        {title: '姓名', dataIndex: 'name', key: 'name'},\r\n        {title: '学院', dataIndex: 'collegeName', key: 'collegeName'},\r\n        {title: '专业', dataIndex: 'majorName', key: 'majorName'},\r\n        {title: '班级', dataIndex: 'className', key: 'className'},\r\n        {\r\n            title: '健康码',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (type?: HealthCodeType) => healthCodeName(type),\r\n            filters: [{text: '红码', value: '红码'},\r\n                {text: '绿码', value: '绿码'},\r\n                {text: '黄码', value: '黄码'},\r\n                {text: '未填报', value: '未填报'}\r\n            ],\r\n            onFilter: (value: string | number | boolean, record: StudentDailyCardVo) => healthCodeName(record.type) === value,\r\n        }];\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<StudentDailyCardStatistic>(\"/admin/getStudentStatistic\", {\r\n            params: {\r\n                collegeId, majorId, classId\r\n            }\r\n        }).then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [collegeId, majorId, classId])\r\n\r\n    const admin = loginUser.user as Admin\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"学生管理\"\r\n                extra={\r\n                    admin.role === AdminRole.SYSTEM_ADMIN &&\r\n                    <Button onClick={() => setModalVisible(true)} type={\"primary\"}>添加新学生</Button>\r\n                }>\r\n                <Descriptions>\r\n                    <Descriptions.Item label=\"学生总数\">{data?.totalStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"绿码学生数量\">{data?.greenCodeStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"黄码学生数量\">{data?.yellowCodeStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"红码学生数量\">{data?.redCodeStudentCount}</Descriptions.Item>\r\n                </Descriptions>\r\n            </PageHeader>\r\n\r\n            <InsertStudentModal visible={modalVisible} setVisible={setModalVisible}/>\r\n            <Table loading={loading} columns={columns} rowKey={\"studentId\"} dataSource={data?.dailyCardList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentManagerPage;","import React, {useEffect, useState} from \"react\";\r\nimport {Input, Modal, Select} from \"antd\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {College} from \"../../entity/College\";\r\n\r\nconst {Option} = Select;\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void\r\n}\r\n\r\n\r\nconst InsertTeacherModal: React.FC<ModalProps> = ({visible, setVisible}) => {\r\n    const [collegeList, setCollegeList] = useState<College[]>([])\r\n    const [collegeId, setCollegeId] = useState<number | null>(null)\r\n\r\n    const [teacherId, setTeacherId] = useState<string>()\r\n    const [name, setName] = useState<string>()\r\n    const [idCard, setIdCard] = useState<string>()\r\n\r\n    useEffect(() => {\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then(response => setCollegeList(response.data))\r\n    }, [])\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/insertTeacher\", {\r\n            teacherId: teacherId,\r\n            name: name,\r\n            collegeId: collegeId,\r\n            idCard: idCard\r\n        })\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新教师\"\r\n            onCancel={() => setVisible(false)}\r\n            visible={visible}\r\n            onOk={onSubmit}>\r\n            <Select placeholder={\"学院\"} style={{width: \"100%\"}} onChange={(value) => setCollegeId(value as number)}>\r\n                {\r\n                    collegeList.map(college => <Option key={college.id} value={college.id}>{college.name}</Option>)\r\n                }\r\n            </Select>\r\n            <Input placeholder={\"工号\"}\r\n                   onChange={(e) => setTeacherId(e.target.value)}\r\n                   value={teacherId}/>\r\n            <Input placeholder={\"姓名\"}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n            <Input placeholder={\"身份证号\"}\r\n                   onChange={(e) => setIdCard(e.target.value)}\r\n                   value={idCard}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default InsertTeacherModal","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Descriptions, PageHeader, Table} from \"antd\";\r\nimport {healthCodeName, HealthCodeType} from \"../../entity/HealthCodeType\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {TeacherDailyCardStatistic} from \"../../entity/TeacherDailyCardStatistic\";\r\nimport InsertTeacherModal from \"./InsertTeacherModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {TeacherDailyCardVo} from \"../../entity/TeacherDailyCardVo\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\n\r\nconst TeacherManagerPage = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [data, setData] = useState<TeacherDailyCardStatistic>()\r\n    const columns : ColumnsType<TeacherDailyCardVo>= [\r\n        {title: '工号', dataIndex: 'teacherId', key: 'teacherId'},\r\n        {title: '姓名', dataIndex: 'name', key: 'name'},\r\n        {title: '学院', dataIndex: 'collegeName', key: 'collegeName'},\r\n        {\r\n            title: '健康码',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (type?: HealthCodeType) => healthCodeName(type),\r\n            filters: [{text: '红码', value: '红码'},\r\n                {text: '绿码', value: '绿码'},\r\n                {text: '黄码', value: '黄码'},\r\n                {text: '未填报', value: '未填报'}\r\n            ],\r\n            onFilter: (value: string | number | boolean, record: TeacherDailyCardVo) => healthCodeName(record.type) === value,\r\n        }];\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<TeacherDailyCardStatistic>(\"/admin/getTeacherStatistic\")\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    const admin = loginUser.user as Admin\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"教师管理\"\r\n                extra={\r\n                    admin.role === AdminRole.SYSTEM_ADMIN &&\r\n                    <Button onClick={() => setVisible(true)} type={\"primary\"}>添加新教师</Button>\r\n                }>\r\n                <Descriptions>\r\n                    <Descriptions.Item label=\"教师总数\">{data?.totalTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"绿码教师数量\">{data?.greenCodeTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"黄码教师数量\">{data?.yellowCodeTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"红码教师数量\">{data?.redCodeTeacherCount}</Descriptions.Item>\r\n                </Descriptions>\r\n            </PageHeader>\r\n            <InsertTeacherModal visible={visible} setVisible={setVisible}/>\r\n            <Table loading={loading} columns={columns} rowKey={\"teacherId\"} dataSource={data?.dailyCardList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeacherManagerPage;","import {Button, PageHeader, Table} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {College} from \"../../entity/College\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\nconst CollegeManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<College[]>([])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then((resp) => setData(resp.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    const columns = [\r\n        {title: '学院名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/college/${id}`}>查看所有专业</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${id}`}>查看该学院所有学生信息</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${id}`}>查看该学院所有教师信息</Link>\r\n        }\r\n    ]\r\n\r\n    const admin = loginUser.user as Admin\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                ghost={false}\r\n                title=\"学院管理\"\r\n                extra={admin.role === AdminRole.SYSTEM_ADMIN && <Button type={\"primary\"}>添加新学院</Button>}>\r\n            </PageHeader>\r\n            <Table loading={loading} rowKey={\"name\"} columns={columns} dataSource={data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollegeManagerPage","import React, {useEffect, useState} from \"react\";\r\nimport {Button, PageHeader, Table} from \"antd\";\r\nimport {Clazz} from \"../../entity/Clazz\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\nconst ClassManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<Clazz[]>([])\r\n    const {collegeId, majorId} = useParams<{ collegeId: string, majorId: string }>()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<Clazz[]>(\"/admin/getAllClazzByMajor\", {params: {majorId: majorId}})\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [majorId])\r\n    const columns = [\r\n        {title: '班级名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${collegeId}/${majorId}/${id}`}>查看该班级所有学生信息</Link>\r\n        }\r\n    ]\r\n    const admin = loginUser.user as Admin\r\n\r\n    return <div>\r\n        <PageHeader\r\n            onBack={() => window.history.back()}\r\n            ghost={false}\r\n            title=\"班级管理\"\r\n            extra={admin.role === AdminRole.SYSTEM_ADMIN && <Button type={\"primary\"}>添加新班级</Button>}>\r\n        </PageHeader>\r\n        <Table loading={loading} columns={columns} dataSource={data}/>\r\n    </div>\r\n}\r\n\r\nexport default ClassManagerPage","import React, {useEffect, useState} from \"react\";\r\nimport {Button, PageHeader, Table} from \"antd\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Major} from \"../../entity/Major\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\nconst MajorManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<Major[]>([])\r\n    const {collegeId} = useParams<{ collegeId: string }>();\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<Major[]>(\"/admin/getMajorByCollegeId\", {params: {collegeId: collegeId}})\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [collegeId])\r\n\r\n    const columns = [\r\n        {title: '专业名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/college/${collegeId}/major/${id}`}>查看所有班级</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${collegeId}/${id}`}>查看该专业所有学生信息</Link>\r\n        }\r\n    ]\r\n\r\n    const admin = loginUser.user as Admin\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"专业管理\"\r\n                extra={admin.role === AdminRole.SYSTEM_ADMIN && <Button type={\"primary\"}>添加新专业</Button>}>\r\n            </PageHeader>\r\n            <Table loading={loading} columns={columns} dataSource={data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MajorManagerPage;\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect, Route, Switch, useHistory} from \"react-router\";\r\nimport {Layout, Menu} from 'antd';\r\nimport React from \"react\";\r\nimport StudentManagerPage from \"./StudentManagetPage\";\r\nimport TeacherManagerPage from \"./TeacherManagerPage\";\r\nimport CollegeManagerPage from \"./CollegeManagerPage\";\r\nimport {GoldOutlined, LogoutOutlined, TeamOutlined, UserOutlined} from '@ant-design/icons'\r\nimport ClassManagerPage from \"./ClassManagerPage\";\r\nimport MajorManagerPage from \"./MajorManagerPageProps\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {setUser} from \"../../reducer/login/actionCreate\";\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\nconst AdminPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"teacher\") {\r\n        return <Redirect to={\"/teacher\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"student\") {\r\n        return <Redirect to={\"/student\"}/>\r\n    }\r\n\r\n    const logout = async () => {\r\n        await instance.post(\"/logout\")\r\n        dispatch(setUser(null))\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (<div>\r\n        <Layout style={{minHeight: '100vh'}}>\r\n            <Sider collapsible className=\"site-layout-background\">\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                    <Menu.Item key=\"1\"\r\n                               icon={<TeamOutlined/>}\r\n                               onClick={() => history.push(\"/admin/student\")}>\r\n                        学生管理\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\"\r\n                               icon={<UserOutlined/>}\r\n                               onClick={() => history.push(\"/admin/teacher\")}>\r\n                        教师管理\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\"\r\n                               icon={<GoldOutlined/>}\r\n                               onClick={() => history.push(\"/admin/college\")}>\r\n                        学院管理\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\"\r\n                               icon={<LogoutOutlined/>}\r\n                               onClick={logout}>\r\n                        登出\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                <Content>\r\n                    <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                        <Switch>\r\n                            <Route path={\"/admin/student\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId/:majorId\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId/:majorId/:classId\"} exact\r\n                                   component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/teacher\"} exact component={TeacherManagerPage}/>\r\n                            <Route path={\"/admin/teacher/:collegeId\"} exact component={TeacherManagerPage}/>\r\n                            <Route path={\"/admin/college\"} exact component={CollegeManagerPage}/>\r\n                            <Route path={\"/admin/college/:collegeId\"} exact component={MajorManagerPage}/>\r\n                            <Route path={\"/admin/college/:collegeId/major/:majorId\"} exact\r\n                                   component={ClassManagerPage}/>\r\n                        </Switch>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default AdminPage;","import styled from \"styled-components\";\r\nimport Text from \"antd/es/typography/Text\";\r\nimport {Button} from \"antd\";\r\n\r\nexport const TopWrapper = styled.div`\r\n  z-index: 1;\r\n  position: relative;\r\n  color: white;\r\n  background: white;\r\n  height: 56px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n`\r\n\r\nexport const LogoutWrapper = styled(Button)`\r\n  margin-top: 10px;\r\n  margin-right: 30%;\r\n  float: right;\r\n`\r\n\r\nexport const NameWrapper=styled(Text)`\r\n  margin-top: 15px;\r\n  margin-left: 30%;\r\n  float: left;\r\n`\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\nimport {Affix} from \"antd\";\r\nimport instance from \"../axiosInstance\";\r\nimport {setUser} from \"../reducer/login/actionCreate\";\r\nimport {LogoutWrapper, NameWrapper, TopWrapper} from \"./style\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Header = () => {\r\n    const loginUser = useSelector((root: RootState) => root.login)!!\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const logout = async () => {\r\n        await instance.post(\"/logout\")\r\n        dispatch(setUser(null))\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <Affix>\r\n        <TopWrapper>\r\n            {\"name\" in loginUser.user && <NameWrapper>{loginUser.user.name}</NameWrapper>}\r\n            {\"username\" in loginUser.user && <NameWrapper>{loginUser.user.username}</NameWrapper>}\r\n            <LogoutWrapper onClick={logout} type={\"primary\"}>登出</LogoutWrapper>\r\n        </TopWrapper>\r\n    </Affix>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {Button, Checkbox, Col, Divider, Form, Input, Radio, Row} from \"antd\";\r\nimport {Teacher} from \"../entity/Teacher\";\r\nimport {Student} from \"../entity/Student\";\r\n\r\ninterface FormProps {\r\n    onFinish: (haveBeenToKeyEpidemicAreas: boolean,\r\n               haveBeenAbroad: boolean,\r\n               isTheExposed: boolean,\r\n               isSuspectedCase: boolean,\r\n               currentSymptoms: Array<string>) => void,\r\n    user: Teacher | Student,\r\n    isStudent: boolean\r\n}\r\n\r\nconst SubmitDailyCardForm: React.FC<FormProps> = ({onFinish, user, isStudent}) => {\r\n    const finish = (values: any) => {\r\n        const haveBeenToKeyEpidemicAreas = values.haveBeenToKeyEpidemicAreas\r\n        const haveBeenAbroad = values.haveBeenAbroad\r\n        const isTheExposed = values.isTheExposed\r\n        const isSuspectedCase = values.isSuspectedCase\r\n        const currentSymptoms = values.currentSymptoms\r\n        onFinish(haveBeenToKeyEpidemicAreas, haveBeenAbroad, isTheExposed, isSuspectedCase, currentSymptoms)\r\n    }\r\n\r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onFinish={finish} style={{marginTop: 30}}>\r\n                <Form.Item label={isStudent ? \"学号\" : \"工号\"} style={{display: \"block\"}}>\r\n                    <Input value={user.id} disabled/>\r\n                </Form.Item>\r\n                <Form.Item label=\"姓名\" style={{display: \"block\"}}>\r\n                    <Input value={user.name} disabled/>\r\n                </Form.Item>\r\n                <Form.Item label=\"身份证号\" style={{display: \"block\"}}>\r\n                    <Input value={user.idCard} disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    style={{display: \"block\"}}\r\n                    name=\"haveBeenToKeyEpidemicAreas\" label=\"近期（14天内）去过湖北省或重点疫区\"\r\n                    rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"haveBeenAbroad\"\r\n                           label=\"近期（14天内）去过国外\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"isTheExposed\"\r\n                           label=\"近期（14天内）接触过新冠确诊病人或疑似病人\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"isSuspectedCase\"\r\n                           label=\"被卫生部门确认为新冠肺炎确诊病例或疑似病例\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"currentSymptoms\"\r\n                           style={{display: \"block\"}}\r\n                           label=\"身体健康情况\">\r\n                    <Checkbox.Group>\r\n                        <Row>\r\n                            <Col span={8}><Checkbox value=\"发烧\">发烧（≥37.3℃）</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"乏力\">乏力</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"干咳\">干咳</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"鼻塞\">鼻塞</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"流涕\">流涕</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"咽痛\">咽痛</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"腹泻\">腹泻</Checkbox></Col>\r\n                        </Row>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item\r\n                    name={\"check\"}\r\n                    rules={[\r\n                        {required: true, message: '未勾选此项'},\r\n                        () => ({\r\n                            validator(_, value) {\r\n                                return value ? Promise.resolve() : Promise.reject('请勾选此项');\r\n                            },\r\n                        })]}>\r\n                    <Checkbox.Group>\r\n                        <Checkbox value=\"true\">本人郑重承诺：填报信息真实，愿意承担相应的法律责任。</Checkbox>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitDailyCardForm;","import React from \"react\";\r\nimport {Image} from \"antd\";\r\nimport {Student} from \"../entity/Student\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\nimport {Teacher} from \"../entity/Teacher\";\r\n\r\n\r\nconst QrcodeImage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const user = loginUser.user as Student | Teacher\r\n\r\n    return <div style={{display: \"block\", textAlign: \"center\"}}>\r\n        <h2>{user.name} 你好</h2>\r\n        <h2>请在接受检查时主动出示工大通行码</h2>\r\n        <h2>配合管理员的工作，做好自主防护工作</h2>\r\n        <h2>你的健康码状态将根据你的申报动态刷新</h2>\r\n        <Image\r\n            preview={false}\r\n            src={loginUser.type === \"student\" ? \"/student/qrcode\" : \"/teacher/qrcode\"}\r\n            alt={\"健康码\"}/>\r\n    </div>\r\n}\r\n\r\nexport default QrcodeImage;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport instance from \"../../axiosInstance\";\r\nimport Header from \"../../component/Header\";\r\nimport SubmitDailyCardForm from \"../../component/SubmitDailyCardForm\";\r\nimport {Skeleton} from \"antd\";\r\nimport {Student} from \"../../entity/Student\";\r\nimport QrcodeImage from \"../../component/QRCodeImage\";\r\n\r\nconst StudentPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n\r\n    const [isSubmitDailyCard, setSubmitDailyCard] = useState<Boolean>(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        instance\r\n            .get<Boolean>(\"/student/cardStatus\")\r\n            .then(response => setSubmitDailyCard(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"teacher\") {\r\n        return <Redirect to={\"/teacher\"}/>\r\n    }\r\n\r\n    if (loginUser.type !== \"student\") {\r\n        return <Redirect to={\"/admin\"}/>\r\n    }\r\n\r\n    const onFinish = async (haveBeenToKeyEpidemicAreas: boolean,\r\n                            haveBeenAbroad: boolean,\r\n                            isTheExposed: boolean,\r\n                            isSuspectedCase: boolean,\r\n                            currentSymptoms: Array<string>) => {\r\n\r\n        instance.post(\"/student/submit\", {\r\n            haveBeenToKeyEpidemicAreas,\r\n            haveBeenAbroad,\r\n            isTheExposed,\r\n            isSuspectedCase,\r\n            currentSymptoms\r\n        }).then(() => setSubmitDailyCard(true))\r\n    }\r\n\r\n    return <div>\r\n        <Header/>\r\n        <div style={{marginLeft: '30%', marginRight: \"30%\", marginTop: 30}}>\r\n            {isLoading && <Skeleton active={true}/>}\r\n            {!isLoading && isSubmitDailyCard && <QrcodeImage/>}\r\n            {!isLoading && !isSubmitDailyCard &&\r\n            <SubmitDailyCardForm onFinish={onFinish} isStudent={true} user={loginUser.user as Student}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default StudentPage;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport Header from \"../../component/Header\";\r\nimport instance from \"../../axiosInstance\";\r\nimport SubmitDailyCardForm from \"../../component/SubmitDailyCardForm\";\r\nimport {Skeleton} from \"antd\";\r\nimport {Teacher} from \"../../entity/Teacher\";\r\nimport QrcodeImage from \"../../component/QRCodeImage\";\r\n\r\n\r\nconst TeacherPage = () => {\r\n    const [isSubmitDailyCard, setSubmitDailyCard] = useState<Boolean>(false)\r\n    const loginUser = useSelector((state: RootState) => state.login)!!\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        instance\r\n            .get<Boolean>(\"/teacher/cardStatus\")\r\n            .then(response => setSubmitDailyCard(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n    if (loginUser.type === \"student\") {\r\n        return <Redirect to={\"/student\"}/>\r\n    }\r\n    if (loginUser.type !== \"teacher\") {\r\n        return <Redirect to={\"/admin\"}/>\r\n    }\r\n\r\n    const onFinish = async (haveBeenToKeyEpidemicAreas: boolean,\r\n                            haveBeenAbroad: boolean,\r\n                            isTheExposed: boolean,\r\n                            isSuspectedCase: boolean,\r\n                            currentSymptoms: Array<string>) => {\r\n\r\n        instance.post(\"/teacher/submit\", {\r\n            haveBeenToKeyEpidemicAreas,\r\n            haveBeenAbroad,\r\n            isTheExposed,\r\n            isSuspectedCase,\r\n            currentSymptoms\r\n        }).then(() => setSubmitDailyCard(true))\r\n    }\r\n\r\n    return <div>\r\n        <Header/>\r\n        <div style={{marginLeft: '30%', marginRight: \"30%\", marginTop: 30}}>\r\n            {isLoading && <Skeleton active={true}/>}\r\n            {!isLoading && isSubmitDailyCard && <QrcodeImage/>}\r\n            {!isLoading && !isSubmitDailyCard &&\r\n            <SubmitDailyCardForm onFinish={onFinish} user={loginUser.user as Teacher} isStudent={false}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default TeacherPage","import React, {useEffect} from 'react';\r\nimport LoginPage from \"./page/login/LoginPage\";\r\nimport {Route, Switch} from \"react-router\";\r\nimport AdminPage from \"./page/admin/AdminPage\";\r\nimport StudentPage from \"./page/student/StudentPage\";\r\nimport TeacherPage from \"./page/teacher/TeacherPage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport instance from \"./axiosInstance\";\r\nimport {LoginUser} from \"./entity/LoginUser\";\r\nimport {setUser} from \"./reducer/login/actionCreate\";\r\nimport {RootState} from \"./store\";\r\nimport {Spin} from 'antd';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    useEffect(() => {\r\n        instance\r\n            .get<LoginUser>(\"/checkLoginStatus\")\r\n            .then(response => dispatch(setUser(response.data)))\r\n    }, [dispatch])\r\n    return <>\r\n\r\n        {!loginUser && <div style={{width: \"100%\", height: \"100%\", textAlign: \"center\", marginTop: \"20%\"}}>\r\n            <Spin size={\"large\"}/>\r\n        </div>}\r\n        {loginUser && <Switch>\r\n            <Route path=\"/\" exact component={LoginPage}/>\r\n            <Route path=\"/teacher\" component={TeacherPage}/>\r\n            <Route path=\"/admin\" component={AdminPage}/>\r\n            <Route path=\"/student\" component={StudentPage}/>\r\n        </Switch>}\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport loginReducer from './reducer/login/loginReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    login: loginReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof reducer>\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport store from \"./store\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConfigProvider locale={zhCN}>\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </ConfigProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}