{"version":3,"sources":["axiosInstance.ts","reducer/login/loginReducer.ts","reducer/login/actionCreate.ts","page/login/style.ts","entity/HealthCodeType.ts","page/login/LoginPage.tsx","entity/Admin.ts","page/admin/InsertStudentModal.tsx","page/admin/StudentManagetPage.tsx","page/admin/InsertTeacherModal.tsx","page/admin/TeacherManagerPage.tsx","page/admin/CollegeManagerPage.tsx","page/admin/ClassManagerPage.tsx","page/admin/MajorManagerPageProps.tsx","page/admin/AdminPage.tsx","component/style.ts","component/Header.tsx","component/SubmitDailyCardForm.tsx","component/QRCodeImage.tsx","page/student/StudentPage.tsx","page/teacher/TeacherPage.tsx","App.tsx","reportWebVitals.ts","store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["instance","axios","create","headers","interceptors","request","use","config","data","qs","stringify","response","error","ex","message","warn","Promise","reject","SetLoginStatus","loginReducer","state","login","action","type","setUser","user","dispatch","HealthCodeType","LoginForm","styled","Form","LoginPage","loginUser","useSelector","useDispatch","to","onFinish","value","a","username","password","post","bg","num","style","display","fontSize","textAlign","Item","name","rules","required","Group","width","span","prefix","UserOutlined","className","autoComplete","placeholder","LockOutlined","htmlType","block","AdminRole","healthCodeName","GREEN","RED","YELLOW","InsertStudentModal","visible","setVisible","useState","options","setOptions","classId","setClassId","studentId","setStudentId","setName","idCard","setIdCard","onSubmit","id","useEffect","get","then","resp","map","college","label","isLeaf","loadData","selectedOptions","console","log","targetOption","length","loading","params","collegeId","children","major","majorId","title","onCancel","onOk","fileList","onChange","info","file","status","icon","UploadOutlined","changeOnSelect","e","target","StudentManagerPage","setLoading","modalVisible","setModalVisible","setData","useParams","columns","dataIndex","key","render","filters","text","onFilter","record","finally","admin","onBack","window","history","back","ghost","extra","role","SYSTEM_ADMIN","onClick","totalStudentCount","greenCodeStudentCount","yellowCodeStudentCount","redCodeStudentCount","rowKey","dataSource","dailyCardList","Option","Select","InsertTeacherModal","collegeList","setCollegeList","setCollegeId","teacherId","setTeacherId","TeacherManagerPage","totalTeacherCount","greenCodeTeacherCount","yellowCodeTeacherCount","redCodeTeacherCount","CollegeManagerPage","ClassManagerPage","MajorManagerPage","Content","Layout","Sider","AdminPage","useHistory","logout","push","minHeight","collapsible","theme","defaultSelectedKeys","mode","TeamOutlined","GoldOutlined","LogoutOutlined","padding","path","exact","component","TopWrapper","div","LogoutWrapper","Button","NameWrapper","Text","Header","root","SubmitDailyCardForm","isStudent","radioStyle","height","lineHeight","values","haveBeenToKeyEpidemicAreas","haveBeenAbroad","isTheExposed","isSuspectedCase","currentSymptoms","marginTop","disabled","validator","_","resolve","QrcodeImage","preview","src","alt","StudentPage","isSubmitDailyCard","setSubmitDailyCard","isLoading","marginLeft","marginRight","active","TeacherPage","App","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","locale","zhCN","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.dd9127af.chunk.js","sourcesContent":["import axios, {AxiosError} from 'axios'\r\nimport {message} from \"antd\";\r\nimport qs from 'qs';\r\n\r\nconst instance = axios.create({\r\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n})\r\n\r\ninstance.interceptors.request.use(\r\n    config => {\r\n        // 转为formdata数据格式\r\n        config.data = qs.stringify(config.data)\r\n        return config\r\n    }\r\n)\r\ninstance.interceptors.response.use(config => config, error => {\r\n        const ex: AxiosError = error;\r\n        if (ex.response != null) {\r\n            message.warn(ex.response.data.message)\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n;\r\n\r\nexport default instance;","import {Action} from \"redux\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\n\r\nexport const SetLoginStatus = \"set_login_status\"\r\n\r\ninterface LoginAction extends Action {\r\n    data: LoginUser\r\n}\r\n\r\nconst loginReducer = (state: LoginUser = {login: false} as LoginUser, action: LoginAction) => {\r\n    switch (action.type) {\r\n        case SetLoginStatus:\r\n            state = action.data\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default loginReducer","import {ThunkAction} from \"redux-thunk\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {SetLoginStatus} from \"./loginReducer\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\n\r\nexport const setUser = (user: LoginUser = {login: false} as LoginUser): ThunkAction<void, RootState, unknown, Action> => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch({\r\n            type: SetLoginStatus,\r\n            data: user\r\n        })\r\n    }\r\n}","import styled from \"styled-components\";\r\nimport {Form} from \"antd\";\r\n\r\nexport const LoginForm = styled(Form)`\r\n  margin: auto;\r\n  height: 300px;\r\n  width: 500px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`","export enum HealthCodeType {\r\n    GREEN = \"GREEN\",\r\n    YELLOW = \"YELLOW\",\r\n    RED = \"RED\"\r\n}\r\n\r\nexport const healthCodeName = (type?: HealthCodeType): string => {\r\n    switch (type) {\r\n        case null:\r\n            return \"未填报\"\r\n        case HealthCodeType.GREEN:\r\n            return \"绿码\"\r\n        case HealthCodeType.RED:\r\n            return \"红码\"\r\n        case HealthCodeType.YELLOW:\r\n            return \"黄码\"\r\n        default:\r\n            return \"未填报\"\r\n    }\r\n}","import {Button, Col, Form, Input, Radio, Row} from \"antd\";\r\nimport React from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {LoginUser} from \"../../entity/LoginUser\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUser} from \"../../reducer/login/actionCreate\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport ParticlesBg from 'particles-bg'\r\nimport {LoginForm} from \"./style\";\r\n\r\nconst LoginPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const dispatch = useDispatch()\r\n\r\n    if (loginUser.login) {\r\n        switch (loginUser.type) {\r\n            case \"teacher\":\r\n                return <Redirect to=\"/teacher\"/>\r\n            case \"student\":\r\n                return <Redirect to=\"/student\"/>\r\n            default:\r\n                return <Redirect to=\"/admin\"/>\r\n        }\r\n\r\n    }\r\n\r\n    const onFinish = async (value: any) => {\r\n        try {\r\n            const username = value.username;\r\n            const password = value.password;\r\n            const type = value.type;\r\n            const response = await instance.post<LoginUser>('/login', {type, username, password})\r\n            dispatch(setUser(response.data))\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ParticlesBg type=\"cobweb\" bg={true} num={60}/>\r\n            <LoginForm onFinish={onFinish}>\r\n                <h2 style={{display: \"block\", fontSize: 30, textAlign: \"center\"}}>健康码管理系统</h2>\r\n                <Form.Item\r\n                    name=\"type\"\r\n                    style={{textAlign: \"center\"}}\r\n                    rules={[{required: true, message: '请选择用户类型'}]}>\r\n                    <Radio.Group style={{display: \"block\", width: \"100%\"}}>\r\n                        <Row>\r\n                            <Col span={8}><Radio value={\"student\"}>学生</Radio></Col>\r\n                            <Col span={8}><Radio value={\"teacher\"}>教师</Radio></Col>\r\n                            <Col span={8}><Radio value={\"admin\"}>管理员</Radio></Col>\r\n                        </Row>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: '请填写用户名'}]}>\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                           autoComplete={\"username\"}\r\n                           placeholder={\"用户名\"}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: '请填写密码'}]}>\r\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                           placeholder={\"密码\"}\r\n                           autoComplete={\"current-password\"}\r\n                           type=\"password\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" block>登录</Button>\r\n                </Form.Item>\r\n            </LoginForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import {College} from \"./College\";\r\n\r\nexport interface Admin {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    role: AdminRole;\r\n    college: College;\r\n}\r\n\r\nexport enum AdminRole {\r\n    SYSTEM_ADMIN = \"SYSTEM_ADMIN\",\r\n    /**\r\n     * 校级管理员\r\n     */\r\n    SCHOOL_ADMIN = \"SCHOOL_ADMIN\",\r\n    /**\r\n     * 院级管理员\r\n     */\r\n    COLLEGE_ADMIN = \"COLLEGE_ADMIN\"\r\n}","import {Button, Cascader, Input, message, Modal, Upload} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {CascaderOptionType} from \"antd/lib/cascader\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Major} from \"../../entity/Major\";\r\nimport {College} from \"../../entity/College\";\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void\r\n}\r\n\r\ninterface Option extends CascaderOptionType {\r\n    type?: \"college\" | \"major\" | \"class\"\r\n}\r\n\r\nconst InsertStudentModal: React.FC<ModalProps> = ({visible, setVisible}) => {\r\n    const [options, setOptions] = useState<Array<Option>>([]);\r\n    const [classId, setClassId] = useState<number | null>(null)\r\n    const [studentId, setStudentId] = useState<string>('')\r\n    const [name, setName] = useState<string>('')\r\n    const [idCard, setIdCard] = useState<string>('')\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/insertStudent\", {id: studentId, name: name, classId: classId, idCard: idCard})\r\n        setVisible(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then((resp) => setOptions(resp.data.map((college) => {\r\n                return {\r\n                    value: college.id,\r\n                    label: college.name,\r\n                    isLeaf: false,\r\n                    type: \"college\"\r\n                }\r\n            })))\r\n    }, [])\r\n\r\n    const loadData = async (selectedOptions?: Option[]) => {\r\n        if (!selectedOptions) {\r\n            return\r\n        }\r\n        console.log(selectedOptions)\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true;\r\n\r\n        try {\r\n            targetOption.id = targetOption.value\r\n            switch (targetOption.type) {\r\n                case \"college\": {\r\n                    const response = await instance.get<Major[]>(\"/admin/getMajorByCollegeId\",\r\n                        {\r\n                            params: {collegeId: targetOption.value}\r\n                        });\r\n                    targetOption.children = response.data.map(major => {\r\n                        return {\r\n                            value: major.id,\r\n                            label: major.name,\r\n                            isLeaf: false,\r\n                            type: \"major\"\r\n                        }\r\n                    })\r\n                }\r\n                    break\r\n                case \"major\": {\r\n                    const response = await instance.get<Major[]>(\"/admin/getAllClazzByMajor\",\r\n                        {\r\n                            params: {majorId: targetOption.value}\r\n                        });\r\n                    targetOption.children = response.data.map(major => {\r\n                        return {\r\n                            value: major.id,\r\n                            label: major.name,\r\n                            isLeaf: true,\r\n                            type: \"class\"\r\n                        }\r\n                    })\r\n                }\r\n                    break\r\n            }\r\n            setOptions([...options]);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            targetOption.loading = false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新学生\"\r\n            onCancel={() => setVisible(false)}\r\n            visible={visible}\r\n            onOk={onSubmit}>\r\n            <Upload\r\n                name=\"file\"\r\n                fileList={[]}\r\n                action={\"/admin/addStudentFromExcel\"}\r\n                onChange={(info) => {\r\n                    if (info.file.status === \"done\") {\r\n                        message.info(\"导入成功\")\r\n                        setVisible(false)\r\n                    }\r\n                }}>\r\n                <Button icon={<UploadOutlined/>}>从 excel 导入</Button>\r\n            </Upload>\r\n            <Cascader options={options}\r\n                      loadData={loadData}\r\n                      changeOnSelect\r\n                      placeholder={\"请选择班级\"}\r\n                      onChange={(value, selectedOptions) => {\r\n                          if (value.length === 3 && selectedOptions != null) {\r\n                              setClassId(selectedOptions[2].value as number)\r\n                          } else {\r\n                              setClassId(null)\r\n                          }\r\n                      }}\r\n                      style={{width: '100%'}}/>\r\n            <Input placeholder={\"学号\"}\r\n                   onChange={(e) => setStudentId(e.target.value)}\r\n                   value={studentId}/>\r\n            <Input placeholder={\"姓名\"}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n            <Input placeholder={\"身份证号\"}\r\n                   onChange={(e) => setIdCard(e.target.value)}\r\n                   value={idCard}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default InsertStudentModal","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Descriptions, PageHeader, Table} from \"antd\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {StudentDailyCardStatistic} from \"../../entity/StudentDailyCardStatistic\";\r\nimport {healthCodeName, HealthCodeType} from \"../../entity/HealthCodeType\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport InsertStudentModal from \"./InsertStudentModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {StudentDailyCardVo} from \"../../entity/StudentDailyCardVo\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\n\r\nconst StudentManagerPage = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [data, setData] = useState<StudentDailyCardStatistic>()\r\n    const {collegeId, majorId, classId} = useParams<{ collegeId: string, majorId: string, classId: string }>()\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n\r\n    const columns: ColumnsType<StudentDailyCardVo> = [\r\n        {title: '学号', dataIndex: 'studentId', key: 'studentId'},\r\n        {title: '姓名', dataIndex: 'name', key: 'name'},\r\n        {title: '学院', dataIndex: 'collegeName', key: 'collegeName'},\r\n        {title: '专业', dataIndex: 'majorName', key: 'majorName'},\r\n        {title: '班级', dataIndex: 'className', key: 'className'},\r\n        {\r\n            title: '健康码',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (type?: HealthCodeType) => healthCodeName(type),\r\n            filters: [{text: '红码', value: '红码'},\r\n                {text: '绿码', value: '绿码'},\r\n                {text: '黄码', value: '黄码'},\r\n                {text: '未填报', value: '未填报'}\r\n            ],\r\n            onFilter: (value: string | number | boolean, record: StudentDailyCardVo) => healthCodeName(record.type) === value,\r\n        }];\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<StudentDailyCardStatistic>(\"/admin/getStudentStatistic\", {\r\n            params: {\r\n                collegeId, majorId, classId\r\n            }\r\n        }).then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [collegeId, majorId, classId])\r\n\r\n    const admin = loginUser.user as Admin\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"学生管理\"\r\n                extra={\r\n                    admin.role === AdminRole.SYSTEM_ADMIN &&\r\n                    <Button onClick={() => setModalVisible(true)} type={\"primary\"}>添加新学生</Button>\r\n                }>\r\n                <Descriptions>\r\n                    <Descriptions.Item label=\"学生总数\">{data?.totalStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"绿码学生数量\">{data?.greenCodeStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"黄码学生数量\">{data?.yellowCodeStudentCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"红码学生数量\">{data?.redCodeStudentCount}</Descriptions.Item>\r\n                </Descriptions>\r\n            </PageHeader>\r\n\r\n            <InsertStudentModal visible={modalVisible} setVisible={setModalVisible}/>\r\n            <Table loading={loading} columns={columns} rowKey={\"studentId\"} dataSource={data?.dailyCardList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentManagerPage;","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Input, message, Modal, Select, Upload} from \"antd\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {College} from \"../../entity/College\";\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\n\r\nconst {Option} = Select;\r\n\r\ninterface ModalProps {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void\r\n}\r\n\r\n\r\nconst InsertTeacherModal: React.FC<ModalProps> = ({visible, setVisible}) => {\r\n    const [collegeList, setCollegeList] = useState<College[]>([])\r\n    const [collegeId, setCollegeId] = useState<number | null>(null)\r\n\r\n    const [teacherId, setTeacherId] = useState<string>()\r\n    const [name, setName] = useState<string>()\r\n    const [idCard, setIdCard] = useState<string>()\r\n\r\n    useEffect(() => {\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then(response => setCollegeList(response.data))\r\n    }, [])\r\n\r\n    const onSubmit = async () => {\r\n        await instance.post(\"/admin/insertTeacher\", {\r\n            teacherId: teacherId,\r\n            name: name,\r\n            collegeId: collegeId,\r\n            idCard: idCard\r\n        })\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"添加新教师\"\r\n            onCancel={() => setVisible(false)}\r\n            visible={visible}\r\n            onOk={onSubmit}>\r\n            <Upload name={\"file\"}\r\n                    fileList={[]}\r\n                    action={\"/admin/addTeacherFromExcel\"}\r\n                    onChange={(info) => {\r\n                        if (info.file.status === \"done\") {\r\n                            message.info(\"导入成功\")\r\n                            setVisible(false)\r\n                        }\r\n                    }}>\r\n                <Button icon={<UploadOutlined/>}>从 excel 导入</Button>\r\n            </Upload>\r\n            <Select placeholder={\"学院\"} style={{width: \"100%\"}} onChange={(value) => setCollegeId(value as number)}>\r\n                {\r\n                    collegeList.map(college => <Option key={college.id} value={college.id}>{college.name}</Option>)\r\n                }\r\n            </Select>\r\n            <Input placeholder={\"工号\"}\r\n                   onChange={(e) => setTeacherId(e.target.value)}\r\n                   value={teacherId}/>\r\n            <Input placeholder={\"姓名\"}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   value={name}/>\r\n            <Input placeholder={\"身份证号\"}\r\n                   onChange={(e) => setIdCard(e.target.value)}\r\n                   value={idCard}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default InsertTeacherModal","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Descriptions, PageHeader, Table} from \"antd\";\r\nimport {healthCodeName, HealthCodeType} from \"../../entity/HealthCodeType\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {TeacherDailyCardStatistic} from \"../../entity/TeacherDailyCardStatistic\";\r\nimport InsertTeacherModal from \"./InsertTeacherModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {TeacherDailyCardVo} from \"../../entity/TeacherDailyCardVo\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\n\r\nconst TeacherManagerPage = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [data, setData] = useState<TeacherDailyCardStatistic>()\r\n    const columns : ColumnsType<TeacherDailyCardVo>= [\r\n        {title: '工号', dataIndex: 'teacherId', key: 'teacherId'},\r\n        {title: '姓名', dataIndex: 'name', key: 'name'},\r\n        {title: '学院', dataIndex: 'collegeName', key: 'collegeName'},\r\n        {\r\n            title: '健康码',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (type?: HealthCodeType) => healthCodeName(type),\r\n            filters: [{text: '红码', value: '红码'},\r\n                {text: '绿码', value: '绿码'},\r\n                {text: '黄码', value: '黄码'},\r\n                {text: '未填报', value: '未填报'}\r\n            ],\r\n            onFilter: (value: string | number | boolean, record: TeacherDailyCardVo) => healthCodeName(record.type) === value,\r\n        }];\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<TeacherDailyCardStatistic>(\"/admin/getTeacherStatistic\")\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    const admin = loginUser.user as Admin\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"教师管理\"\r\n                extra={\r\n                    admin.role === AdminRole.SYSTEM_ADMIN &&\r\n                    <Button onClick={() => setVisible(true)} type={\"primary\"}>添加新教师</Button>\r\n                }>\r\n                <Descriptions>\r\n                    <Descriptions.Item label=\"教师总数\">{data?.totalTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"绿码教师数量\">{data?.greenCodeTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"黄码教师数量\">{data?.yellowCodeTeacherCount}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"红码教师数量\">{data?.redCodeTeacherCount}</Descriptions.Item>\r\n                </Descriptions>\r\n            </PageHeader>\r\n            <InsertTeacherModal visible={visible} setVisible={setVisible}/>\r\n            <Table loading={loading} columns={columns} rowKey={\"teacherId\"} dataSource={data?.dailyCardList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeacherManagerPage;","import {Button, PageHeader, Table} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {College} from \"../../entity/College\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\nconst CollegeManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<College[]>([])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<College[]>(\"/admin/getAllCollege\")\r\n            .then((resp) => setData(resp.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    const columns = [\r\n        {title: '学院名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/college/${id}`}>查看所有专业</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${id}`}>查看该学院所有学生信息</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${id}`}>查看该学院所有教师信息</Link>\r\n        }\r\n    ]\r\n\r\n    const admin = loginUser.user as Admin\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                ghost={false}\r\n                title=\"学院管理\"\r\n                extra={admin.role === AdminRole.SYSTEM_ADMIN && <Button type={\"primary\"}>添加新学院</Button>}>\r\n            </PageHeader>\r\n            <Table loading={loading} rowKey={\"name\"} columns={columns} dataSource={data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollegeManagerPage","import React, {useEffect, useState} from \"react\";\r\nimport {Button, PageHeader, Table} from \"antd\";\r\nimport {Clazz} from \"../../entity/Clazz\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\nconst ClassManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<Clazz[]>([])\r\n    const {collegeId, majorId} = useParams<{ collegeId: string, majorId: string }>()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<Clazz[]>(\"/admin/getAllClazzByMajor\", {params: {majorId: majorId}})\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [majorId])\r\n    const columns = [\r\n        {title: '班级名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${collegeId}/${majorId}/${id}`}>查看该班级所有学生信息</Link>\r\n        }\r\n    ]\r\n    const admin = loginUser.user as Admin\r\n\r\n    return <div>\r\n        <PageHeader\r\n            onBack={() => window.history.back()}\r\n            ghost={false}\r\n            title=\"班级管理\"\r\n            extra={admin.role === AdminRole.SYSTEM_ADMIN && <Button type={\"primary\"}>添加新班级</Button>}>\r\n        </PageHeader>\r\n        <Table loading={loading} columns={columns} dataSource={data}/>\r\n    </div>\r\n}\r\n\r\nexport default ClassManagerPage","import React, {useEffect, useState} from \"react\";\r\nimport {Button, PageHeader, Table} from \"antd\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Major} from \"../../entity/Major\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {Admin, AdminRole} from \"../../entity/Admin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\nconst MajorManagerPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState<Major[]>([])\r\n    const {collegeId} = useParams<{ collegeId: string }>();\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        instance.get<Major[]>(\"/admin/getMajorByCollegeId\", {params: {collegeId: collegeId}})\r\n            .then(response => setData(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [collegeId])\r\n\r\n    const columns = [\r\n        {title: '专业名', dataIndex: 'name', key: 'name'},\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/college/${collegeId}/major/${id}`}>查看所有班级</Link>\r\n        },\r\n        {\r\n            title: '', dataIndex: 'id', key: 'id',\r\n            render: (id: number) => <Link to={`/admin/student/${collegeId}/${id}`}>查看该专业所有学生信息</Link>\r\n        }\r\n    ]\r\n\r\n    const admin = loginUser.user as Admin\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                ghost={false}\r\n                title=\"专业管理\"\r\n                extra={admin.role === AdminRole.SYSTEM_ADMIN && <Button type={\"primary\"}>添加新专业</Button>}>\r\n            </PageHeader>\r\n            <Table loading={loading} columns={columns} dataSource={data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MajorManagerPage;\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect, Route, Switch, useHistory} from \"react-router\";\r\nimport {Layout, Menu} from 'antd';\r\nimport React from \"react\";\r\nimport StudentManagerPage from \"./StudentManagetPage\";\r\nimport TeacherManagerPage from \"./TeacherManagerPage\";\r\nimport CollegeManagerPage from \"./CollegeManagerPage\";\r\nimport {GoldOutlined, LogoutOutlined, TeamOutlined, UserOutlined} from '@ant-design/icons'\r\nimport ClassManagerPage from \"./ClassManagerPage\";\r\nimport MajorManagerPage from \"./MajorManagerPageProps\";\r\nimport instance from \"../../axiosInstance\";\r\nimport {setUser} from \"../../reducer/login/actionCreate\";\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\nconst AdminPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"teacher\") {\r\n        return <Redirect to={\"/teacher\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"student\") {\r\n        return <Redirect to={\"/student\"}/>\r\n    }\r\n\r\n    const logout = async () => {\r\n        await instance.post(\"/logout\")\r\n        dispatch(setUser())\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (<div>\r\n        <Layout style={{minHeight: '100vh'}}>\r\n            <Sider collapsible className=\"site-layout-background\">\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                    <Menu.Item key=\"1\"\r\n                               icon={<TeamOutlined/>}\r\n                               onClick={() => history.push(\"/admin/student\")}>\r\n                        学生管理\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\"\r\n                               icon={<UserOutlined/>}\r\n                               onClick={() => history.push(\"/admin/teacher\")}>\r\n                        教师管理\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\"\r\n                               icon={<GoldOutlined/>}\r\n                               onClick={() => history.push(\"/admin/college\")}>\r\n                        学院管理\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\"\r\n                               icon={<LogoutOutlined/>}\r\n                               onClick={logout}>\r\n                        登出\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                <Content>\r\n                    <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                        <Switch>\r\n                            <Route path={\"/admin/student\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId/:majorId\"} exact component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/student/:collegeId/:majorId/:classId\"} exact\r\n                                   component={StudentManagerPage}/>\r\n                            <Route path={\"/admin/teacher\"} exact component={TeacherManagerPage}/>\r\n                            <Route path={\"/admin/teacher/:collegeId\"} exact component={TeacherManagerPage}/>\r\n                            <Route path={\"/admin/college\"} exact component={CollegeManagerPage}/>\r\n                            <Route path={\"/admin/college/:collegeId\"} exact component={MajorManagerPage}/>\r\n                            <Route path={\"/admin/college/:collegeId/major/:majorId\"} exact\r\n                                   component={ClassManagerPage}/>\r\n                        </Switch>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default AdminPage;","import styled from \"styled-components\";\r\nimport Text from \"antd/es/typography/Text\";\r\nimport {Button} from \"antd\";\r\n\r\nexport const TopWrapper = styled.div`\r\n  z-index: 1;\r\n  position: relative;\r\n  color: white;\r\n  background: white;\r\n  height: 56px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n`\r\n\r\nexport const LogoutWrapper = styled(Button)`\r\n  margin-top: 10px;\r\n  margin-right: 30%;\r\n  float: right;\r\n`\r\n\r\nexport const NameWrapper=styled(Text)`\r\n  margin-top: 15px;\r\n  margin-left: 30%;\r\n  float: left;\r\n`\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\nimport {Affix} from \"antd\";\r\nimport instance from \"../axiosInstance\";\r\nimport {setUser} from \"../reducer/login/actionCreate\";\r\nimport {LogoutWrapper, NameWrapper, TopWrapper} from \"./style\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Header = () => {\r\n    const loginUser = useSelector((root: RootState) => root.login)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const logout = async () => {\r\n        await instance.post(\"/logout\")\r\n        dispatch(setUser())\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <Affix>\r\n        <TopWrapper>\r\n            {\"name\" in loginUser.user && <NameWrapper>{loginUser.user.name}</NameWrapper>}\r\n            {\"username\" in loginUser.user && <NameWrapper>{loginUser.user.username}</NameWrapper>}\r\n            <LogoutWrapper onClick={logout} type={\"primary\"}>登出</LogoutWrapper>\r\n        </TopWrapper>\r\n    </Affix>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {Button, Checkbox, Col, Divider, Form, Input, Radio, Row} from \"antd\";\r\nimport {Teacher} from \"../entity/Teacher\";\r\nimport {Student} from \"../entity/Student\";\r\n\r\ninterface FormProps {\r\n    onFinish: (haveBeenToKeyEpidemicAreas: boolean,\r\n               haveBeenAbroad: boolean,\r\n               isTheExposed: boolean,\r\n               isSuspectedCase: boolean,\r\n               currentSymptoms: Array<string>) => void,\r\n    user: Teacher | Student,\r\n    isStudent: boolean\r\n}\r\n\r\nconst SubmitDailyCardForm: React.FC<FormProps> = ({onFinish, user, isStudent}) => {\r\n    const finish = (values: any) => {\r\n        const haveBeenToKeyEpidemicAreas = values.haveBeenToKeyEpidemicAreas\r\n        const haveBeenAbroad = values.haveBeenAbroad\r\n        const isTheExposed = values.isTheExposed\r\n        const isSuspectedCase = values.isSuspectedCase\r\n        const currentSymptoms = values.currentSymptoms\r\n        onFinish(haveBeenToKeyEpidemicAreas, haveBeenAbroad, isTheExposed, isSuspectedCase, currentSymptoms)\r\n    }\r\n\r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onFinish={finish} style={{marginTop: 30}}>\r\n                <Form.Item label={isStudent ? \"学号\" : \"工号\"} style={{display: \"block\"}}>\r\n                    <Input value={user.id} disabled/>\r\n                </Form.Item>\r\n                <Form.Item label=\"姓名\" style={{display: \"block\"}}>\r\n                    <Input value={user.name} disabled/>\r\n                </Form.Item>\r\n                <Form.Item label=\"身份证号\" style={{display: \"block\"}}>\r\n                    <Input value={user.idCard} disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    style={{display: \"block\"}}\r\n                    name=\"haveBeenToKeyEpidemicAreas\" label=\"近期（14天内）去过湖北省或重点疫区\"\r\n                    rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"haveBeenAbroad\"\r\n                           label=\"近期（14天内）去过国外\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"isTheExposed\"\r\n                           label=\"近期（14天内）接触过新冠确诊病人或疑似病人\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"isSuspectedCase\"\r\n                           label=\"被卫生部门确认为新冠肺炎确诊病例或疑似病例\"\r\n                           style={{display: \"block\"}}\r\n                           rules={[{required: true, message: '未选择此项'}]}>\r\n                    <Radio.Group>\r\n                        <Radio value=\"true\" style={radioStyle}>是</Radio>\r\n                        <Radio value=\"false\" style={radioStyle}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item name=\"currentSymptoms\"\r\n                           style={{display: \"block\"}}\r\n                           label=\"身体健康情况\">\r\n                    <Checkbox.Group>\r\n                        <Row>\r\n                            <Col span={8}><Checkbox value=\"发烧\">发烧（≥37.3℃）</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"乏力\">乏力</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"干咳\">干咳</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"鼻塞\">鼻塞</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"流涕\">流涕</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"咽痛\">咽痛</Checkbox></Col>\r\n                            <Col span={8}><Checkbox value=\"腹泻\">腹泻</Checkbox></Col>\r\n                        </Row>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n                <Divider/>\r\n                <Form.Item\r\n                    name={\"check\"}\r\n                    rules={[\r\n                        {required: true, message: '未勾选此项'},\r\n                        () => ({\r\n                            validator(_, value) {\r\n                                return value ? Promise.resolve() : Promise.reject('请勾选此项');\r\n                            },\r\n                        })]}>\r\n                    <Checkbox.Group>\r\n                        <Checkbox value=\"true\">本人郑重承诺：填报信息真实，愿意承担相应的法律责任。</Checkbox>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitDailyCardForm;","import React from \"react\";\r\nimport {Image} from \"antd\";\r\nimport {Student} from \"../entity/Student\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\nimport {Teacher} from \"../entity/Teacher\";\r\n\r\n\r\nconst QrcodeImage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const user = loginUser.user as Student | Teacher\r\n\r\n    return <div style={{display: \"block\", textAlign: \"center\"}}>\r\n        <h2>{user.name} 你好</h2>\r\n        <h2>请在接受检查时主动出示工大通行码</h2>\r\n        <h2>配合管理员的工作，做好自主防护工作</h2>\r\n        <h2>你的健康码状态将根据你的申报动态刷新</h2>\r\n        <Image\r\n            preview={false}\r\n            src={loginUser.type === \"student\" ? \"/student/qrcode\" : \"/teacher/qrcode\"}\r\n            alt={\"健康码\"}/>\r\n    </div>\r\n}\r\n\r\nexport default QrcodeImage;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport instance from \"../../axiosInstance\";\r\nimport Header from \"../../component/Header\";\r\nimport SubmitDailyCardForm from \"../../component/SubmitDailyCardForm\";\r\nimport {Skeleton} from \"antd\";\r\nimport {Student} from \"../../entity/Student\";\r\nimport QrcodeImage from \"../../component/QRCodeImage\";\r\n\r\nconst StudentPage = () => {\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n\r\n    const [isSubmitDailyCard, setSubmitDailyCard] = useState<Boolean>(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        instance\r\n            .get<Boolean>(\"/student/cardStatus\")\r\n            .then(response => setSubmitDailyCard(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    if (loginUser.type === \"teacher\") {\r\n        return <Redirect to={\"/teacher\"}/>\r\n    }\r\n\r\n    if (loginUser.type !== \"student\") {\r\n        return <Redirect to={\"/admin\"}/>\r\n    }\r\n\r\n    const onFinish = async (haveBeenToKeyEpidemicAreas: boolean,\r\n                            haveBeenAbroad: boolean,\r\n                            isTheExposed: boolean,\r\n                            isSuspectedCase: boolean,\r\n                            currentSymptoms: Array<string>) => {\r\n\r\n        instance.post(\"/student/submit\", {\r\n            haveBeenToKeyEpidemicAreas,\r\n            haveBeenAbroad,\r\n            isTheExposed,\r\n            isSuspectedCase,\r\n            currentSymptoms\r\n        }).then(() => setSubmitDailyCard(true))\r\n    }\r\n\r\n    return <div>\r\n        <Header/>\r\n        <div style={{marginLeft: '30%', marginRight: \"30%\", marginTop: 30}}>\r\n            {isLoading && <Skeleton active={true}/>}\r\n            {!isLoading && isSubmitDailyCard && <QrcodeImage/>}\r\n            {!isLoading && !isSubmitDailyCard &&\r\n            <SubmitDailyCardForm onFinish={onFinish} isStudent={true} user={loginUser.user as Student}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default StudentPage;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {Redirect} from \"react-router\";\r\nimport Header from \"../../component/Header\";\r\nimport instance from \"../../axiosInstance\";\r\nimport SubmitDailyCardForm from \"../../component/SubmitDailyCardForm\";\r\nimport {Skeleton} from \"antd\";\r\nimport {Teacher} from \"../../entity/Teacher\";\r\nimport QrcodeImage from \"../../component/QRCodeImage\";\r\n\r\n\r\nconst TeacherPage = () => {\r\n    const [isSubmitDailyCard, setSubmitDailyCard] = useState<Boolean>(false)\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        instance\r\n            .get<Boolean>(\"/teacher/cardStatus\")\r\n            .then(response => setSubmitDailyCard(response.data))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (!loginUser.login) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n    if (loginUser.type === \"student\") {\r\n        return <Redirect to={\"/student\"}/>\r\n    }\r\n    if (loginUser.type !== \"teacher\") {\r\n        return <Redirect to={\"/admin\"}/>\r\n    }\r\n\r\n    const onFinish = async (haveBeenToKeyEpidemicAreas: boolean,\r\n                            haveBeenAbroad: boolean,\r\n                            isTheExposed: boolean,\r\n                            isSuspectedCase: boolean,\r\n                            currentSymptoms: Array<string>) => {\r\n\r\n        instance.post(\"/teacher/submit\", {\r\n            haveBeenToKeyEpidemicAreas,\r\n            haveBeenAbroad,\r\n            isTheExposed,\r\n            isSuspectedCase,\r\n            currentSymptoms\r\n        }).then(() => setSubmitDailyCard(true))\r\n    }\r\n\r\n    return <div>\r\n        <Header/>\r\n        <div style={{marginLeft: '30%', marginRight: \"30%\", marginTop: 30}}>\r\n            {isLoading && <Skeleton active={true}/>}\r\n            {!isLoading && isSubmitDailyCard && <QrcodeImage/>}\r\n            {!isLoading && !isSubmitDailyCard &&\r\n            <SubmitDailyCardForm onFinish={onFinish} user={loginUser.user as Teacher} isStudent={false}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default TeacherPage","import React, {useEffect} from 'react';\r\nimport LoginPage from \"./page/login/LoginPage\";\r\nimport {Route, Switch} from \"react-router\";\r\nimport AdminPage from \"./page/admin/AdminPage\";\r\nimport StudentPage from \"./page/student/StudentPage\";\r\nimport TeacherPage from \"./page/teacher/TeacherPage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport instance from \"./axiosInstance\";\r\nimport {LoginUser} from \"./entity/LoginUser\";\r\nimport {setUser} from \"./reducer/login/actionCreate\";\r\nimport {RootState} from \"./store\";\r\nimport {Spin} from 'antd';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const loginUser = useSelector((state: RootState) => state.login)\r\n    useEffect(() => {\r\n        instance\r\n            .get<LoginUser>(\"/checkLoginStatus\")\r\n            .then(response => dispatch(setUser(response.data)))\r\n    }, [dispatch])\r\n    return <>\r\n\r\n        {!loginUser && <div style={{width: \"100%\", height: \"100%\", textAlign: \"center\", marginTop: \"20%\"}}>\r\n            <Spin size={\"large\"}/>\r\n        </div>}\r\n        <Switch>\r\n            <Route path=\"/\" exact component={LoginPage}/>\r\n            <Route path=\"/teacher\" component={TeacherPage}/>\r\n            <Route path=\"/admin\" component={AdminPage}/>\r\n            <Route path=\"/student\" component={StudentPage}/>\r\n        </Switch>\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport loginReducer from './reducer/login/loginReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    login: loginReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof reducer>\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport store from \"./store\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport {ConfigProvider} from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConfigProvider locale={zhCN}>\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </ConfigProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}